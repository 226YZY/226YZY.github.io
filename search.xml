<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>友链朋友圈4.X.X前端适配尝试【基于店长Akilar的旧版方案】</title>
      <link href="/2022/020733811.html"/>
      <url>/2022/020733811.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>原来我是使用<a href="https://zfe.space/post/friend-link-circle.html">冰老师的前端方案</a>，但是前天晚上我看见友链朋友圈的版本已经更新到4.0.0了，于是我进行了更新，回来发现冰老师的方案不能用了，还好<a href="https://akilar.top/posts/62f13a97/">店长Akilar的前端方案</a>还留着，但是有些布局和配色，跟我的博客不太搭（另外移动端我还是希望能看到作者的信息，以免标题党）；更新时间显示的不是北京时间；另外今天下午我发现按文章生成时间排序的功能好像失效了。然后大佬好像还没出新方案，那么我干脆一不做二不休，自己动手改了🤣</p><p>有什么错误欢迎各位大佬指出😀</p><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote><h1 id="其他大佬的方案"><a href="#其他大佬的方案" class="headerlink" title="其他大佬的方案"></a>其他大佬的方案</h1><p>由于我也不确定我改的会不会有什么bug</p><p><a href="https://akilar.top/">店长Akilar</a>好像目前也还没出新方案（还是用大佬的方案更放心😂）</p><p>不过目前<a href="https://hexo-circle-of-friends-doc.vercel.app/#/frontenddeploy">文档</a>说<a href="https://immmmm.com/hi-friends-circle/">林木木大佬的前端方案</a>已经完成适配，看各位喜欢哪种风格了</p><h1 id="适配"><a href="#适配" class="headerlink" title="适配"></a>适配</h1><blockquote><p><code>注：</code>css部分我用的是适配 butterfly 主题样式的</p><p>本文有关代码基于<a href="https://akilar.top/posts/62f13a97/">店长Akilar的前端方案</a></p><p>店长的有关代码如下：</p><p><a href="https://cdn.jsdelivr.net/npm/hexo-filter-fcircle/assets/css/default.min.css">https://cdn.jsdelivr.net/npm/hexo-filter-fcircle/assets/css/default.min.css</a></p><p><a href="https://cdn.jsdelivr.net/npm/hexo-filter-fcircle/assets/js/fcircle.min.js">https://cdn.jsdelivr.net/npm/hexo-filter-fcircle/assets/js/fcircle.min.js</a></p><p><a href="https://cdn.jsdelivr.net/npm/hexo-filter-fcircle/assets/js/fetch.min.js">https://cdn.jsdelivr.net/npm/hexo-filter-fcircle/assets/js/fetch.min.js</a></p></blockquote><p>没弄过<a href="https://akilar.top/posts/62f13a97/">店长Akilar的前端方案</a>的，可以按大佬的原方案走一遍再来改😆</p><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>参考之前还是先看看效果有没有问题或者合不合自己胃口</p><p>可以直接去我的友链朋友圈查看效果【<a href="https://226yzy.com/fcircle/index.html">我的友链朋友圈</a>】</p><p><strong>移动端预览：</strong></p><p><a href="https://imgtu.com/i/HQDlg1"><img src="https://s4.ax1x.com/2022/02/07/HQDlg1.png" alt="友链朋友圈移动端预览"></a></p><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><p><strong>主要改动描述：</strong></p><ul><li><p>移动端显示作者头像、名称</p></li><li><p>修改了部分配色</p></li><li><p>增添了文章卡片<code>:hover</code>后的效果【借鉴自<a href="[Hi，My Friends Beta :: 木木木木木 (immmmm.com">林木木大佬的方案</a>](<a href="https://immmmm.com/hi-friends-circle/))】">https://immmmm.com/hi-friends-circle/))】</a></p></li></ul><p><strong>代码：</strong></p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">@font-face</span> {</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'SAOUI'</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">"https://cdn.jsdelivr.net/npm/akilar-candyassets/fonts/SAOUI.ttf"</span>);</span><br><span class="line">  <span class="attribute">font-display</span>: swap;</span><br><span class="line">} </span><br><span class="line"><span class="selector-id">#fMessageBoard</span> {</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">249</span>,<span class="number">249</span>,<span class="number">249</span>,<span class="number">0.8</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">60</span>,<span class="number">60</span>,<span class="number">61</span>,<span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">10px</span> <span class="number">#888</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'SAOUI'</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">810px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">260px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-class">.fUpdatedTime</span> {</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-class">.fMessageItem</span> {</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">207</span>,<span class="number">207</span>,<span class="number">207</span>,<span class="number">0.8</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">15px</span> <span class="number">#bcbcbc</span> inset;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-class">.fMessageItem</span> <span class="selector-class">.fItem</span> {</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">  <span class="attribute">background</span>: transparent;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-class">.fMessageItem</span> <span class="selector-class">.fItem</span> <span class="selector-class">.fLabel</span> {</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">3%</span>;</span><br><span class="line">  <span class="attribute">align-self</span>: center;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-class">.fMessageItem</span> <span class="selector-class">.fItem</span> <span class="selector-class">.fMeasureBar</span> {</span><br><span class="line">  <span class="attribute">align-self</span>: center;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">117</span>,<span class="number">117</span>,<span class="number">117</span>,<span class="number">0.6</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">21</span>,<span class="number">21</span>,<span class="number">21</span>,<span class="number">0.6</span>);</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-class">.fMessageItem</span> <span class="selector-class">.fItem</span> <span class="selector-class">.fMeasureBar</span> <span class="selector-class">.fMeasure</span> {</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-class">.fMessageItem</span> <span class="selector-class">.fItem</span> <span class="selector-class">.fMessage</span> {</span><br><span class="line">  <span class="attribute">align-self</span>: center;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">3%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> {</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">250px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">align-content</span>: space-around;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> <span class="selector-id">#rankByCreated</span> {</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">5px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> <span class="selector-id">#rankByUpdated</span> {</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">5px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> <span class="selector-tag">input</span><span class="selector-id">#switchRankMode</span><span class="selector-attr">[type=checkbox]</span> {</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> <span class="selector-tag">label</span><span class="selector-id">#switchRank</span> {</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">text-indent</span>: -<span class="number">9999px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">15px</span> <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f39c39</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> <span class="selector-tag">label</span><span class="selector-id">#switchRank</span>:after {</span><br><span class="line">  content: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> <span class="selector-tag">label</span><span class="selector-id">#switchRank</span><span class="selector-pseudo">:active</span>:after {</span><br><span class="line">  width: <span class="number">50px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> <span class="selector-tag">input</span><span class="selector-id">#switchRankMode</span><span class="selector-pseudo">:checked</span> + <span class="selector-tag">label</span> {</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#239eeb</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> <span class="selector-tag">input</span><span class="selector-id">#switchRankMode</span><span class="selector-pseudo">:checked</span> + <span class="selector-tag">label</span>:after {</span><br><span class="line">  left: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">2px</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">100%</span>);</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleMoreBtn</span> {</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">810px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">249</span>,<span class="number">249</span>,<span class="number">249</span>,<span class="number">0.8</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">60</span>,<span class="number">60</span>,<span class="number">61</span>,<span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">10px</span> <span class="number">#888</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> {</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'SAOUI'</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">900px</span>;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-tag">a</span> {</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">  <span class="attribute">text-decoration</span>: none <span class="meta">!important</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> {</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">5%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">249</span>,<span class="number">249</span>,<span class="number">249</span>,<span class="number">0.8</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">60</span>,<span class="number">60</span>,<span class="number">61</span>,<span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">10px</span> <span class="number">#888</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">transition</span>: transform .<span class="number">3s</span>;</span><br><span class="line">  webkit-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.3</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.03</span>)</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleAvatar</span> {</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">30%</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleAvatar</span> <span class="selector-class">.fAvatar</span> {</span><br><span class="line">  <span class="attribute">align-self</span>: center;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70%</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleAvatar</span> <span class="selector-class">.fAvatar</span> <span class="selector-tag">img</span> {</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">75px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">75px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">15px</span> <span class="number">5px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleAvatar</span> <span class="selector-class">.fAvatar</span> <span class="selector-class">.img-alt</span><span class="selector-class">.is-center</span> {</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleAvatar</span> <span class="selector-class">.fArticleAuthor</span> {</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">3px</span> <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">align-self</span>: center;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">skewX</span>(-<span class="number">10deg</span>);</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> {</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">70%</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> <span class="selector-tag">a</span><span class="selector-class">.fArticleTitle</span> {</span><br><span class="line">  <span class="attribute">align-self</span>: center;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">80%</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">60</span>,<span class="number">60</span>,<span class="number">61</span>,<span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> <span class="selector-tag">a</span><span class="selector-class">.fArticleTitle</span><span class="selector-pseudo">:hover</span>:before {</span><br><span class="line">  position: fixed;</span><br><span class="line">  <span class="attribute">width</span>: fit-content;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">80%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">20%</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="built_in">attr</span>(data-title);</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">60</span>,<span class="number">60</span>,<span class="number">61</span>,<span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">white-space</span>: break-spaces;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> <span class="selector-class">.fArticleTime</span> {</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> <span class="selector-class">.fArticleTime</span> <span class="selector-class">.fArticleCreated</span> {</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5%</span> <span class="number">0%</span> <span class="number">5%</span> <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">align-self</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> <span class="selector-class">.fArticleTime</span> <span class="selector-class">.fArticleUpdated</span> {</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5%</span> <span class="number">10%</span> <span class="number">5%</span> <span class="number">0%</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">align-self</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> <span class="selector-class">.fArticleTime</span> <span class="selector-tag">i</span>:before {</span><br><span class="line">  margin-right: <span class="number">5px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) {</span><br><span class="line">  <span class="selector-id">#fMessageBoard</span> {</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">400px</span>) {</span><br><span class="line"></span><br><span class="line">  <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> <span class="selector-class">.fArticleTime</span> <span class="selector-tag">i</span> {</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleAvatar</span> <span class="selector-class">.fAvatar</span> {</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">70%</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fMessageBoard</span> {</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> <span class="selector-id">#rankByCreated</span> {</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> <span class="selector-id">#rankByUpdated</span> {</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleAvatar</span> {</span><br><span class="line">    <span class="comment">/* display: none; */</span></span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleAvatar</span> <span class="selector-class">.fArticleAuthor</span> {</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> {</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70%</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> <span class="selector-tag">a</span><span class="selector-class">.fArticleTitle</span><span class="selector-pseudo">:hover</span>:before {</span><br><span class="line">    font-size: <span class="number">16px</span>;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> {</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">125px</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> <span class="selector-tag">a</span><span class="selector-class">.fArticleTitle</span> {</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">5</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">80%</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> <span class="selector-class">.fArticleTime</span> {</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">300px</span>) {</span><br><span class="line">  <span class="selector-id">#fMessageBoard</span> <span class="selector-class">.fUpdatedTime</span> <span class="selector-tag">span</span><span class="selector-class">.fLabel</span> {</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fMessageBoard</span> <span class="selector-class">.fMessageItem</span> <span class="selector-class">.fItem</span> <span class="selector-class">.fLabel</span> {</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fMessageBoard</span> <span class="selector-class">.fMessageItem</span> <span class="selector-class">.fItem</span> meter<span class="selector-class">.fMeasureBar</span> {</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fMessageBoard</span> <span class="selector-class">.fMessageItem</span> <span class="selector-class">.fItem</span> <span class="selector-class">.fMessage</span> {</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fMessageBoard</span> <span class="selector-tag">span</span><span class="selector-id">#rankByCreated</span> {</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#fMessageBoard</span> <span class="selector-tag">span</span><span class="selector-id">#rankByUpdated</span> {</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleAvatar</span> {</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> {</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">"dark"</span>]</span> <span class="selector-id">#fMessageBoard</span> {</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">21</span>,<span class="number">21</span>,<span class="number">21</span>,<span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">249</span>,<span class="number">249</span>,<span class="number">249</span>,<span class="number">0.8</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">102</span>,<span class="number">218</span>,<span class="number">215</span>,<span class="number">0.5</span>);</span><br><span class="line">}</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">"dark"</span>]</span> <span class="selector-id">#fMessageBoard</span> <span class="selector-class">.fMessageItem</span> {</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">21</span>,<span class="number">21</span>,<span class="number">21</span>,<span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">222</span>,<span class="number">221</span>,<span class="number">174</span>,<span class="number">0.5</span>) inset;</span><br><span class="line">}</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">"dark"</span>]</span> <span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> <span class="selector-tag">input</span><span class="selector-id">#switchRankMode</span><span class="selector-attr">[type=checkbox]</span> {</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">}</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">"dark"</span>]</span> <span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> <span class="selector-tag">label</span><span class="selector-id">#switchRank</span> {</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f39c39</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">"dark"</span>]</span> <span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> <span class="selector-tag">label</span><span class="selector-id">#switchRank</span>:after {</span><br><span class="line">  background: <span class="built_in">rgba</span>(<span class="number">21</span>,<span class="number">21</span>,<span class="number">21</span>,<span class="number">0.7</span>);</span><br><span class="line">}</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">"dark"</span>]</span> <span class="selector-id">#fMessageBoard</span> <span class="selector-id">#switchRankBtn</span> <span class="selector-tag">input</span><span class="selector-id">#switchRankMode</span><span class="selector-pseudo">:checked</span> + <span class="selector-tag">label</span> {</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#239eeb</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">"dark"</span>]</span> <span class="selector-id">#fcircleMoreBtn</span> {</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">21</span>,<span class="number">21</span>,<span class="number">21</span>,<span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">249</span>,<span class="number">249</span>,<span class="number">249</span>,<span class="number">0.8</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">102</span>,<span class="number">218</span>,<span class="number">215</span>,<span class="number">0.5</span>);</span><br><span class="line">}</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">"dark"</span>]</span> <span class="selector-id">#fcircleMoreBtn</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">102</span>,<span class="number">218</span>,<span class="number">215</span>,<span class="number">0.5</span>);</span><br><span class="line">}</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">"dark"</span>]</span> <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> {</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">21</span>,<span class="number">21</span>,<span class="number">21</span>,<span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">249</span>,<span class="number">249</span>,<span class="number">249</span>,<span class="number">0.8</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">102</span>,<span class="number">218</span>,<span class="number">215</span>,<span class="number">0.5</span>);</span><br><span class="line">}</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">"dark"</span>]</span> <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">102</span>,<span class="number">218</span>,<span class="number">215</span>,<span class="number">0.5</span>);</span><br><span class="line">}</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">"dark"</span>]</span> <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> <span class="selector-tag">a</span><span class="selector-class">.fArticleTitle</span> {</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">249</span>,<span class="number">249</span>,<span class="number">249</span>,<span class="number">0.8</span>);</span><br><span class="line">}</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">"dark"</span>]</span> <span class="selector-id">#fcircleContainer</span> <span class="selector-class">.fArticleItem</span> <span class="selector-class">.fArticleMessage</span> <span class="selector-tag">a</span><span class="selector-class">.fArticleTitle</span><span class="selector-pseudo">:hover</span>:before {</span><br><span class="line">  color: <span class="built_in">rgba</span>(<span class="number">60</span>,<span class="number">60</span>,<span class="number">61</span>,<span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">249</span>,<span class="number">249</span>,<span class="number">249</span>,<span class="number">0.8</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.img-alt</span><span class="selector-class">.is-center</span><span class="selector-pseudo">::before</span> {<span class="attribute">content</span>: <span class="string">""</span> <span class="meta">!important</span>;}</span><br><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.tab</span>)<span class="selector-pseudo">::before</span> {</span><br><span class="line">  <span class="attribute">top</span>: unset <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>: unset <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">height</span>: unset <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border</span>: unset <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: unset <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">background</span>: unset <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">content</span>: unset <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: unset <span class="meta">!important</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.social-share</span> {</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.85em</span> <span class="meta">!important</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.reward-item</span> {</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1rem</span> .<span class="number">5rem</span> <span class="number">0</span> .<span class="number">5rem</span> <span class="meta">!important</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.post-reward</span> <span class="selector-class">.reward-main</span> <span class="selector-class">.reward-all</span> {</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> .<span class="number">5rem</span> <span class="number">1rem</span> .<span class="number">5rem</span> <span class="meta">!important</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.post-reward</span> <span class="selector-class">.post-qr-code-desc</span> {</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.post-qr-code-img</span><span class="selector-class">.entered</span><span class="selector-class">.loaded</span> {</span><br><span class="line">  <span class="attribute">display</span>: unset <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">margin</span>: unset <span class="meta">!important</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.wechat-qrcode</span> <span class="selector-class">.help</span> <span class="selector-tag">p</span> {</span><br><span class="line">  <span class="attribute">margin</span>: unset <span class="meta">!important</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><p>这里需要对<code>fcircle.js</code>和<code>fetch.js</code>两个文件进行修改</p><h3 id="fcircle-js"><a href="#fcircle-js" class="headerlink" title="fcircle.js"></a>fcircle.js</h3><p><strong>主要改动描述：</strong></p><ul><li><p>最近更新时间的提示时间改为北京时间【借鉴至<a href="https://zfe.space/post/friend-link-circle.html">冰老师的方案</a>】</p></li><li><p>增添更新描述（可去掉）比如我的<code>&lt;span class="fLabel"&gt;【预计每半小时更新一次】&lt;/span&gt;</code></p></li></ul><p><strong>代码：</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ======================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印友链基本信息</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadStatistical</span>(<span class="params">sdata</span>) </span>{</span><br><span class="line">  <span class="comment">// 友链页面的挂载容器</span></span><br><span class="line">  <span class="keyword">var</span> container = <span class="built_in">document</span>.getElementById(<span class="string">'fcircleContainer'</span>);</span><br><span class="line">  <span class="comment">// 最近更新时间</span></span><br><span class="line">  <span class="keyword">var</span> Last_updated_time = formatDate(sdata.last_updated_time);</span><br><span class="line">  <span class="comment">// 基本信息的html结构</span></span><br><span class="line">  <span class="keyword">var</span> messageBoard = <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;div id="fMessageBoard"&gt;</span></span><br><span class="line"><span class="string">    &lt;div class="fUpdatedTime"&gt;</span></span><br><span class="line"><span class="string">      &lt;span class="fLabel"&gt;最近更新时间：&lt;/span&gt;&lt;span class="fMessage" style="color: #1E90FF"&gt;<span class="subst">${Last_updated_time}</span>&lt;/span&gt;&lt;span class="fLabel"&gt;【预计每半小时更新一次】&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class="fMessageItem"&gt;</span></span><br><span class="line"><span class="string">      &lt;div class="fActiveFriend fItem"&gt;</span></span><br><span class="line"><span class="string">        &lt;span class="fLabel"&gt;活跃友链数&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;span class="fMeasureBar"&gt;&lt;span class="fMeasure" style="width:<span class="subst">${(sdata.active_num<span class="regexp">/sdata.friends_num * 100).toFixed(2)}%; background: rgba(0,191,255,0.8);"&gt;${(sdata.active_num/</span>sdata.friends_num * <span class="number">100</span>).toFixed(<span class="number">2</span>)}</span>%&lt;/span&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;span class="fMessage"&gt;<span class="subst">${sdata.active_num}</span>/<span class="subst">${sdata.friends_num}</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;div class="fErrorSite fItem"&gt;</span></span><br><span class="line"><span class="string">        &lt;span class="fLabel"&gt;失联友链数&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;span class="fMeasureBar"&gt;&lt;span class="fMeasure" style="width:<span class="subst">${(sdata.error_num<span class="regexp">/sdata.friends_num * 100).toFixed(2)}%; background: rgba(193,205,205, 0.8);"&gt;${(sdata.error_num/</span>sdata.friends_num * <span class="number">100</span>).toFixed(<span class="number">2</span>)}</span>%&lt;/span&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;span class="fMessage"&gt;<span class="subst">${sdata.error_num}</span>/<span class="subst">${sdata.friends_num}</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;div class="fArticleNum fItem"&gt;</span></span><br><span class="line"><span class="string">        &lt;span class="fLabel"&gt;当前库存&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;span class="fMeasureBar"&gt;&lt;span class="fMeasure" style="width:<span class="subst">${(sdata.article_num<span class="regexp">/Math.ceil(sdata.article_num /</span> <span class="number">100</span>)).toFixed(<span class="number">2</span>)}</span>%; background: rgba(255,165,0, 0.8);"&gt;<span class="subst">${(sdata.article_num<span class="regexp">/Math.ceil(sdata.article_num /</span> <span class="number">100</span>)).toFixed(<span class="number">2</span>)}</span>%&lt;/span&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;span class="fMessage"&gt;<span class="subst">${sdata.article_num}</span>/<span class="subst">${<span class="built_in">Math</span>.ceil(<span class="built_in">Number</span>( sdata.article_num) <span class="regexp">/ 100) * 100}&lt;/</span>span&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">      &lt;/div&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">    &lt;/div&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">    &lt;div id=<span class="string">"switchRankBtn"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">      &lt;span id=<span class="string">"rankByCreated"</span>&gt;created&lt;/span&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">      &lt;span&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">      &lt;input type=<span class="string">"checkbox"</span> id=<span class="string">"switchRankMode"</span> checked=<span class="string">"true"</span> onchange=<span class="string">"checkRankMode()"</span><span class="regexp">/&gt;&lt;label for="switchRankMode" id="switchRank"&gt;Toggle&lt;/</span>label&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">      &lt;/span&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">      &lt;span id=<span class="string">"rankByUpdated"</span>&gt;updated&lt;/span&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">    &lt;/div&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">  &lt;/div&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">  <span class="string">`;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 加载更多按钮</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  var loadMoreBtn = `</span></span></span></span><br><span class="line"><span class="subst"><span class="string">  &lt;div id=<span class="string">"fcircleMoreBtn"</span> onclick=<span class="string">"loadMoreArticle()"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">    &lt;i <span class="keyword">class</span>=<span class="string">"fas fa-angle-double-down"</span>&gt;&lt;/i&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">  &lt;/div&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">  <span class="string">`</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  var hexobutterfly=`</span>&lt;div <span class="keyword">class</span>=<span class="string">"post-reward"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">  &lt;div <span class="keyword">class</span>=<span class="string">"reward-button button--animated"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">    &lt;i <span class="keyword">class</span>=<span class="string">"fas fa-qrcode"</span>&gt;&lt;<span class="regexp">/i&gt;打赏&lt;/</span>div&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">  &lt;div <span class="keyword">class</span>=<span class="string">"reward-main"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">    &lt;ul <span class="keyword">class</span>=<span class="string">"reward-all"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">      &lt;li <span class="keyword">class</span>=<span class="string">"reward-item"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">          &lt;img <span class="keyword">class</span>=<span class="string">"post-qr-code-img entered loaded"</span> src=<span class="string">"/medias/reward/wechat.png"</span> &gt;&lt;/a&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">        &lt;div <span class="keyword">class</span>=<span class="string">"post-qr-code-desc"</span>&gt;微信&lt;<span class="regexp">/div&gt;&lt;/</span>li&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">      &lt;li <span class="keyword">class</span>=<span class="string">"reward-item"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">          &lt;img <span class="keyword">class</span>=<span class="string">"post-qr-code-img entered loaded"</span> src=<span class="string">"/medias/reward/alipay.jpg"</span> &gt;&lt;/a&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">        &lt;div <span class="keyword">class</span>=<span class="string">"post-qr-code-desc"</span>&gt;支付宝&lt;<span class="regexp">/div&gt;&lt;/</span>li&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">    &lt;/ul&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">  &lt;/div&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">  &lt;/div&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">  &lt;/div&gt;<span class="string">`</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    loadMoreBtn+= hexobutterfly</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 原则上信息面板应该在最前面，所以用beforebegin表示从开始符前面插入</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  if (container) {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    container.insertAdjacentHTML('beforebegin', messageBoard);</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    // 为了不影响文章加载，选择afterend表示从结束符后面插入</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    container.insertAdjacentHTML('afterend', loadMoreBtn);</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  }</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">}</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">// ======================================================</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">// 打印友链内容</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">function loadArticleItem(datalist, start, end) {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  var fdatalist = JSON.parse(localStorage.getItem("fdatalist"));</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 声明友链页面的挂载容器</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  var container = document.getElementById('fcircleContainer');</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 循环读取输出友链信息</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  for (var i = start; i &lt; end; i++) {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    var item = datalist[i];</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    var articleItem = `</span></span></span></span><br><span class="line"><span class="subst"><span class="string">    &lt;div <span class="keyword">class</span>=<span class="string">"fArticleItem"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">      &lt;div <span class="keyword">class</span>=<span class="string">"fArticleAvatar"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">        &lt;a <span class="keyword">class</span>=<span class="string">"fArticlelink fAvatar"</span> target=<span class="string">"_blank"</span> rel=<span class="string">"noopener nofollow"</span> href=<span class="string">"${item.link}"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">          &lt;img src=<span class="string">"${item.avatar}"</span> alt=<span class="string">"avatar"</span>  onerror=<span class="string">"this.src='${fdatalist.error_img}'; this.onerror = null;"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">        &lt;/a&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">        &lt;div <span class="keyword">class</span>=<span class="string">"fArticleAuthor"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">          ${item.author}</span></span></span><br><span class="line"><span class="subst"><span class="string">        &lt;/div&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">      &lt;/div&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">      &lt;div <span class="keyword">class</span>=<span class="string">"fArticleMessage"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">        &lt;a <span class="keyword">class</span>=<span class="string">"fArticleTitle"</span>  href=<span class="string">"${item.link}"</span> target=<span class="string">"_blank"</span> rel=<span class="string">"noopener nofollow"</span> data-title=<span class="string">"${item.title}"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">          ${item.title}</span></span></span><br><span class="line"><span class="subst"><span class="string">        &lt;/a&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">        &lt;div <span class="keyword">class</span>=<span class="string">"fArticleTime"</span>&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">          &lt;span <span class="keyword">class</span>=<span class="string">"fArticleCreated"</span>&gt;&lt;i <span class="keyword">class</span>=<span class="string">"far fa-calendar-alt"</span>&gt;发表于&lt;<span class="regexp">/i&gt;${item.created}&lt;/</span>span&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">          &lt;span <span class="keyword">class</span>=<span class="string">"fArticleUpdated"</span>&gt;&lt;i <span class="keyword">class</span>=<span class="string">"fas fa-history"</span>&gt;更新于&lt;<span class="regexp">/i&gt;${item.updated}&lt;/</span>span&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">        &lt;/div&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">      &lt;/div&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">    &lt;/div&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">  <span class="string">`;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    if (container) {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      // 为了便于和后续拼接，选择从容器尾部插入</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      container.insertAdjacentHTML('beforeend', articleItem);</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    }</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  }</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">}</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">// 初始化方法</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">function initFriendCircle() {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 获取友链挂载容器</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  var fcircleContainer = document.getElementById('fcircleContainer')</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 获取本地存储的友链基本信息</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  var statistical_data = JSON.parse(localStorage.getItem("statisticalList"));</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 从本地内存读取配置信息</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  var fdatalist = JSON.parse(localStorage.getItem("fdatalist"));</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 只有当容器、基本信息均存在时才执行初始化</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  if (fcircleContainer &amp;&amp; statistical_data &amp;&amp; fdatalist) {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    // 加载基本信息面板</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    loadStatistical(statistical_data);</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    // 获取切换排序按钮</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    var switchRankMode = document.getElementById("switchRankMode");</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    //根据当前选择的排序方案加载对应的排序内容</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    if (switchRankMode.checked) {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      // console.log("按更新时间排序");</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      var article_sortupdated = JSON.parse(localStorage.getItem("updatedList"));</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      loadArticleItem(article_sortupdated, 0, fdatalist.initnumber)</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    } else {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      // console.log("按创建时间排序");</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      var article_sortcreated = JSON.parse(localStorage.getItem("createdList"));</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      loadArticleItem(article_sortcreated, 0, fdatalist.initnumber)</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    }</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  }</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">}</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">// 加载更多文章</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">function loadMoreArticle() {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 获取当前已加载的文章数</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  var currentArticle = document.getElementsByClassName('fArticleItem').length;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 获取当前选择的排序方式</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  var switchRankMode = document.getElementById("switchRankMode");</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 从本地内存读取配置信息</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  var fdatalist = JSON.parse(localStorage.getItem("fdatalist"));</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 只有当两者均存在时才继续执行</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  if (switchRankMode &amp;&amp; fdatalist) {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    if (switchRankMode.checked) {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      // console.log("按更新时间排序");</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      var article_sortupdated = JSON.parse(localStorage.getItem("updatedList"));</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      // 从当前文章的下一篇开始，加载下一阶程篇数</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      loadArticleItem(article_sortupdated, currentArticle, currentArticle + fdatalist.stepnumber)</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    } else {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      // console.log("按创建时间排序");</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      var article_sortcreated = JSON.parse(localStorage.getItem("createdList"));</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      // 从当前文章的下一篇开始，加载下一阶程篇数</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      loadArticleItem(article_sortcreated, currentArticle, currentArticle + fdatalist.stepnumber)</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    }</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  }</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 向上滚动一篇文章的距离</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  window.scrollBy(0, 180)</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">}</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">//切换按钮</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">function checkRankMode() {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 首先清空现有的文章内容</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  document.getElementById('fcircleContainer').innerHTML = ''</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 获取当前选择的排序方式</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  var switchRankMode = document.getElementById("switchRankMode");</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 从本地内存读取配置信息</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  var fdatalist = JSON.parse(localStorage.getItem("fdatalist"));</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 只有当两者均存在时才继续执行</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  if (switchRankMode &amp;&amp; fdatalist) {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    //按更新时间排序</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    if (switchRankMode.checked) {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      // console.log("按更新时间排序");</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      var article_sortupdated = JSON.parse(localStorage.getItem("updatedList"));</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      //加载配置项中指定的初始化篇数</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      loadArticleItem(article_sortupdated, 0, fdatalist.initnumber)</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    } else {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      // console.log("按创建时间排序");</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      var article_sortcreated = JSON.parse(localStorage.getItem("createdList"));</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      //加载配置项中指定的初始化篇数</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      loadArticleItem(article_sortcreated, 0, fdatalist.initnumber)</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    }</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  }</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">}</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">//时区优化</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">var formatDate = (strDate) =&gt; {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  try {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    var date = new Date(Date.parse(strDate.replace(/-/g, "/")));</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    var gettimeoffset;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    if (new Date().getTimezoneOffset()) {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      gettimeoffset = new Date().getTimezoneOffset();</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    } else {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      gettimeoffset = 8;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    }</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    var timeoffset = gettimeoffset * 60 * 1000;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    var len = date.getTime();</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    var date2 = new Date(len - timeoffset);</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    var sec = date2.getSeconds().toString();</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    var min = date2.getMinutes().toString();</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    if (sec.length === 1) {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      sec = "0" + sec;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    }</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    if (min.length === 1) {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      min = "0" + min;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    }</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    return date2.getFullYear().toString() + "-" + (date2.getMonth() + 1).toString() + "-" + date2.getDate().toString() + " " + date2.getHours().toString() + ":" + min + ":" + sec</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  } catch (e) {</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    return ""</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  }</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">};</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">//执行初始化方法</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">initFriendCircle()</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"></span></span></span></span><br></pre></td></tr></tbody></table></figure><h3 id="fetch-js"><a href="#fetch-js" class="headerlink" title="fetch.js"></a>fetch.js</h3><p><strong>主要改动描述：</strong></p><p>适配最新版本，按文章创建时间排序</p><p>这里其实不需要改多少，也就是<code>// 按创建时间排序</code>那一部分的代码中<code>time</code>改成<code>created</code>即可</p><p><strong>代码：</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//===========================================================</span></span><br><span class="line"><span class="comment">// 排序算法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quickSort</span>(<span class="params">arr, keyword</span>)</span>{</span><br><span class="line">  <span class="comment">// keyword传入值'time'（按发布时间排序）或'updated'（按更新时间排序）</span></span><br><span class="line">  <span class="keyword">if</span>(arr.length == <span class="number">0</span>){<span class="keyword">return</span> [];}</span><br><span class="line">  <span class="keyword">var</span> left = [];</span><br><span class="line">  <span class="keyword">var</span> right = [];</span><br><span class="line">  <span class="keyword">var</span> selectItem = arr[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arr.length; i++){</span><br><span class="line">    <span class="keyword">if</span>(arr[i][keyword] &gt; selectItem[keyword]){</span><br><span class="line">      left.push(arr[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span>{</span><br><span class="line">      right.push(arr[i]);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> quickSort(left, keyword).concat(selectItem, quickSort(right, keyword));</span><br><span class="line">}</span><br><span class="line"><span class="comment">// ======================================================</span></span><br><span class="line"><span class="comment">// 从本地内存读取配置信息</span></span><br><span class="line"><span class="keyword">var</span> fdatalist = <span class="built_in">JSON</span>.parse(<span class="built_in">localStorage</span>.getItem(<span class="string">"fdatalist"</span>));</span><br><span class="line"><span class="comment">// 抓取友链api信息并进行分割处理。存入本地存储</span></span><br><span class="line"><span class="keyword">if</span> (fdatalist){</span><br><span class="line">  fetch(fdatalist.apiurl)</span><br><span class="line">    .then(<span class="function"><span class="params">res</span> =&gt;</span> res.json())</span><br><span class="line">    .then(<span class="function"><span class="params">json</span> =&gt;</span>{</span><br><span class="line">      <span class="comment">// 获取友链朋友圈基本信息</span></span><br><span class="line">      <span class="keyword">var</span> statistical_data = json.statistical_data;</span><br><span class="line">      <span class="comment">//存入本地存储</span></span><br><span class="line">      <span class="built_in">localStorage</span>.setItem(<span class="string">"statisticalList"</span>,<span class="built_in">JSON</span>.stringify(statistical_data))</span><br><span class="line">      <span class="comment">// console.log(statistical_data);</span></span><br><span class="line">      <span class="comment">// 获取友链朋友圈文章列表</span></span><br><span class="line">      <span class="keyword">var</span> article_data = <span class="built_in">eval</span>(json.article_data);</span><br><span class="line">      <span class="comment">// console.log(article_data);</span></span><br><span class="line">      <span class="comment">// 按创建时间排序</span></span><br><span class="line">      <span class="keyword">var</span> article_sortcreated = quickSort(article_data,<span class="string">'created'</span>);</span><br><span class="line">      <span class="comment">//存入本地存储</span></span><br><span class="line">      <span class="built_in">localStorage</span>.setItem(<span class="string">"createdList"</span>,<span class="built_in">JSON</span>.stringify(article_sortcreated))</span><br><span class="line">      <span class="comment">// 按更新时间排序</span></span><br><span class="line">      <span class="keyword">var</span> article_sortupdated = quickSort(article_data,<span class="string">'updated'</span>);</span><br><span class="line">      <span class="comment">//存入本地存储</span></span><br><span class="line">      <span class="built_in">localStorage</span>.setItem(<span class="string">"updatedList"</span>,<span class="built_in">JSON</span>.stringify(article_sortupdated))</span><br><span class="line">      <span class="comment">// console.log(article_sortcreated);</span></span><br><span class="line">      <span class="comment">// console.log(article_sortupdated);</span></span><br><span class="line">    }</span><br><span class="line">  )</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置:"></a>配置:</h1><p>然后就是把上面的文件在配置中引入</p><p>我的参考如下：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fcircle</span></span><br><span class="line"><span class="comment"># see https://zfe.space/friendcircle/</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/8480b91c/</span></span><br><span class="line"><span class="attr">fcircle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#控制开关</span></span><br><span class="line">  <span class="attr">apiurl:</span> <span class="string">https://blog-friends-xi.vercel.app/all</span> <span class="comment">#api地址</span></span><br><span class="line">  <span class="attr">initnumber:</span> <span class="number">20</span> <span class="comment">#【可选】页面初始化展示文章数量</span></span><br><span class="line">  <span class="attr">stepnumber:</span> <span class="number">10</span> <span class="comment">#【可选】每次加载增加的篇数</span></span><br><span class="line">  <span class="attr">error_img:</span> <span class="string">/img/404.jpg</span> <span class="comment">#【可选】头像图片加载失败时的默认头像</span></span><br><span class="line">  <span class="attr">opentype:</span> <span class="string">'_blank'</span> <span class="comment">#【可选】'_blank'打开新标签,'_self'本窗口打开,默认为'_blank'</span></span><br><span class="line">  <span class="attr">nofollow:</span> <span class="literal">false</span> <span class="comment">#【可选】开启禁止搜索引擎抓取,默认开启</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="comment">#【可选】加载动画图片链接</span></span><br><span class="line">  <span class="attr">css:</span> <span class="string">/css/butterfly.css</span>  <span class="comment">#https://cdn.jsdelivr.net/npm/hexo-filter-fcircle/assets/css/butterfly.min.css # 【可选】开发者接口，自定义css链接</span></span><br><span class="line">  <span class="attr">js:</span> <span class="string">/js/fcircle.js</span>  <span class="comment">#https://cdn.jsdelivr.net/npm/hexo-filter-fcircle/assets/js/fcircle.min.js #/js/fcircle.js  #【可选】开发者接口，自定义js链接</span></span><br><span class="line">  <span class="attr">fetchJs:</span> <span class="string">/js/fetch.js</span></span><br><span class="line">  <span class="attr">path:</span> <span class="comment">#【可选】fcircle的路径名称。默认为 fcircle，生成的页面为 fcircle/index.html</span></span><br><span class="line">  <span class="attr">front_matter:</span> <span class="comment">#【可选】fcircle页面的 front_matter 配置</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">友链朋友圈</span></span><br><span class="line">    <span class="attr">comments:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>暂时就写到这了，有什么错误欢迎各位大佬指出😀</p><p>欢迎访问我的小破站<a href="https://www.226yzy.com/">https://www.226yzy.com/</a> 或者GitHub版镜像 <a href="https://226yzy.github.io/">https://226yzy.github.io/</a> 或Gitee版镜像<a href="https://yzy226.gitee.io/">https://yzy226.gitee.io/</a></p><p>我的Github：<a href="https://github.com/226YZY">226YZY (星空下的YZY) (github.com)</a></p><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> 友链朋友圈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用JDBC操作数据库</title>
      <link href="/2022/020332243.html"/>
      <url>/2022/020332243.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>JDBC 指 Java 数据库连接，是一种标准Java应用编程接口（ JAVA API），用来连接 Java 编程语言和广泛的数据库。这个我之前尝试过，但是时间久了，我也怕自己忘了相关的内容，所以通过本文来回顾🤣</p><p>如有错误，欢迎大佬指正😆</p><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote><h1 id="下载Mysql数据库驱动"><a href="#下载Mysql数据库驱动" class="headerlink" title="下载Mysql数据库驱动"></a>下载Mysql数据库驱动</h1><p>由于Java 连接 MySQL 需要额外的驱动包，你可以通过下面的链接去下载你需要的版本</p><div class="tag link"><a class="link-card" title="下载驱动包" href="https://mvnrepository.com/artifact/mysql/mysql-connector-java"><div class="left"><img src="https://s4.ax1x.com/2021/12/11/oTDujJ.jpg"></div><div class="right"><p class="text">下载驱动包</p><p class="url">https://mvnrepository.com/artifact/mysql/mysql-connector-java</p></div></a></div><p>然后放在你的项目文件里</p><h1 id="数据库驱动加载"><a href="#数据库驱动加载" class="headerlink" title="数据库驱动加载"></a>数据库驱动加载</h1><p>有了驱动包之后就要进行数据库驱动加载</p><p>我当时写的代码如下</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数据库驱动加载</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DatabaseDrivenLoad</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">{</span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">System.out.println(<span class="string">"数据库驱动加载成功"</span>);</span><br><span class="line">} <span class="keyword">catch</span> (ClassNotFoundException e)</span><br><span class="line">{</span><br><span class="line">e.printStackTrace();</span><br><span class="line">System.out.println(<span class="string">"数据库驱动加载失败"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>主要就是<code>Class.forName("com.mysql.jdbc.Driver");</code>这一句</p><h1 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h1><p>数据库驱动加载后就是数据库连接</p><p>我当时写的代码如下</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数据库连接</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DatabaseConnection</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">{</span><br><span class="line">Conn.con = DriverManager.getConnection(</span><br><span class="line"><span class="string">"jdbc:mysql:"</span></span><br><span class="line">+ <span class="string">"//127.0.0.1:3306/test12?characterEncoding=utf-8"</span>,</span><br><span class="line"><span class="string">"root"</span>, <span class="string">""</span>);</span><br><span class="line">System.out.println(<span class="string">"数据库连接成功"</span>);</span><br><span class="line">} <span class="keyword">catch</span> (SQLException e)</span><br><span class="line">{</span><br><span class="line">e.printStackTrace();</span><br><span class="line">System.out.println(<span class="string">"数据库连接失败，请检查url或用户名及密码"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>其实就是</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String driver = <span class="string">"jdbc:mysql://127.0.0.1:3306/test“;</span></span><br><span class="line"><span class="string">Connection con = DriverManager.getConnection(driver, "</span>root<span class="string">", “123456"</span>);</span><br></pre></td></tr></tbody></table></figure><p><code>driver</code>代表数据库URL</p><p><code>root</code>代表数据库账户</p><p><code>123456</code>代表你对应的数据库密码</p><p><strong><em>有中文乱码的问题？</em></strong></p><p>不妨尝试一下在原来的数据库URL后面加上<code>?characterEncoding=utf-8</code></p><h1 id="数据查询"><a href="#数据查询" class="headerlink" title="数据查询"></a>数据查询</h1><p>这里会使用到<strong>Statement接口</strong>和<strong>ResultSet接口</strong></p><p>创建接口对象</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Statement stmt = con.createStatement();</span><br><span class="line">ResultSet res = stmt.executeQuery(<span class="string">"select * from user12"</span>);</span><br></pre></td></tr></tbody></table></figure><p><code>con</code>是前面创建的Connection对象</p><p><code>res</code>将是后续返回结果集的对象</p><p>我的使用参考如下</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">{</span><br><span class="line">Statement stmt = Conn.con.createStatement();</span><br><span class="line">ResultSet res = stmt.executeQuery(<span class="string">"select * from book12"</span>);</span><br><span class="line"><span class="keyword">while</span> (res.next())</span><br><span class="line">{</span><br><span class="line">String id = res.getString(<span class="string">"id"</span>);</span><br><span class="line">String name = res.getString(<span class="string">"name"</span>);</span><br><span class="line"><span class="keyword">int</span> typeid = res.getInt(<span class="string">"typeid"</span>);</span><br><span class="line">String writer = res.getString(<span class="string">"writer"</span>);</span><br><span class="line">String publisher = res.getString(<span class="string">"publisher"</span>);</span><br><span class="line"><span class="keyword">double</span> price = res.getDouble(<span class="string">"price"</span>);</span><br><span class="line"><span class="keyword">int</span> number = res.getInt(<span class="string">"number"</span>);</span><br><span class="line">Book book = <span class="keyword">new</span> Book(id, name, typeid, writer, publisher, price,</span><br><span class="line">number);</span><br><span class="line">Conn.Books.add(book);</span><br><span class="line">}</span><br><span class="line">} <span class="keyword">catch</span> (Exception e)</span><br><span class="line">{</span><br><span class="line">e.printStackTrace();</span><br><span class="line">System.out.println(<span class="string">"数据库书籍数据读取失败"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="增删改数据"><a href="#增删改数据" class="headerlink" title="增删改数据"></a>增删改数据</h1><p>可以使用<strong><em>Statement对象</em></strong>的<code>executeUpdata()</code>方法，通过不同的SQL语句实现运行增，删，改操作，返回更新的行数。</p><p>例如</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">"update user12 set name='"</span> + name + <span class="string">"' where id='"</span> + id</span><br><span class="line">+ <span class="string">"' "</span>;</span><br><span class="line">state.executeUpdate(sql);</span><br></pre></td></tr></tbody></table></figure><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>暂时就写到这了，如有错误，欢迎大佬指正🤣</p><p>欢迎访问我的小破站<a href="https://www.226yzy.com/">https://www.226yzy.com/</a> 或者GitHub版镜像 <a href="https://226yzy.github.io/">https://226yzy.github.io/</a> 或Gitee版镜像<a href="https://yzy226.gitee.io/">https://yzy226.gitee.io/</a></p><p>我的Github：<a href="https://github.com/226YZY">226YZY (星空下的YZY) (github.com)</a></p><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 探索实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> MySQL </tag>
            
            <tag> JDBC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java读写txt文件</title>
      <link href="/2022/013056898.html"/>
      <url>/2022/013056898.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>最近翻阅我电脑中我过去写的代码的时候，发现以前尝试过用java读写txt文件，不过现在我也基本忘了，所以就有了这一篇🤣以免我以后有需要用到又四处查有关资料。</p><p>如有错误，欢迎大佬留言指正🤣。</p><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote><h1 id="有关代码总览"><a href="#有关代码总览" class="headerlink" title="有关代码总览"></a>有关代码总览</h1><p>有关代码总览，及部分注释如下</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//创建File对象</span></span><br><span class="line">File file=<span class="keyword">new</span> File(<span class="string">"text.txt"</span>);</span><br><span class="line"><span class="comment">//创建文件【如果该文件存在，这一步可省略】</span></span><br><span class="line">file.createNewFile();</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取内容,同时避免中文乱码</span></span><br><span class="line">InputStreamReader fReader = <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(file),<span class="string">"UTF-8"</span>);<span class="comment">//UTF-8或者GB2312【并且要与下面写入的一致】</span></span><br><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(fReader);</span><br><span class="line"><span class="comment">//输出每一行内容</span></span><br><span class="line">String line;</span><br><span class="line">System.out.println(<span class="string">"------当前文件中的内容------"</span>);</span><br><span class="line"><span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) {</span><br><span class="line">            System.out.println(line);</span><br><span class="line">        }</span><br><span class="line">br.close();</span><br><span class="line"></span><br><span class="line"><span class="comment">//写入内容,同时避免中文乱码</span></span><br><span class="line">Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入一行内容："</span>);</span><br><span class="line">String value=sc.nextLine();</span><br><span class="line">FileOutputStream writerStream=<span class="keyword">new</span> FileOutputStream(file,<span class="keyword">true</span>);</span><br><span class="line">        BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(writerStream, <span class="string">"UTF-8"</span>));<span class="comment">//UTF-8或者GB2312【并且要与上面读入的一致】  </span></span><br><span class="line">        bw.write(value);</span><br><span class="line">        bw.close();</span><br><span class="line">        sc.close();</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>下文将分别讲</p><h1 id="创建File对象"><a href="#创建File对象" class="headerlink" title="创建File对象"></a>创建File对象</h1><p>该部分代码如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建File对象</span></span><br><span class="line">File file=<span class="keyword">new</span> File(<span class="string">"text.txt"</span>);</span><br><span class="line"><span class="comment">//创建文件【如果该文件存在，这一步可省略】</span></span><br><span class="line">file.createNewFile();</span><br></pre></td></tr></tbody></table></figure><p><code>text.txt</code>可以替换成你文件的路径</p><p><code>file.createNewFile();</code>会按照路径尝试创建该文件，如果该文件存在就不会重复创建。</p><h1 id="读取内容"><a href="#读取内容" class="headerlink" title="读取内容"></a>读取内容</h1><p>该部分代码及部分注释如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//读取内容,同时避免中文乱码</span></span><br><span class="line">InputStreamReader fReader = <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(file),<span class="string">"UTF-8"</span>);<span class="comment">//UTF-8或者GB2312【并且要与下面写入的一致】</span></span><br><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(fReader);</span><br><span class="line"><span class="comment">//输出每一行内容</span></span><br><span class="line">String line;</span><br><span class="line">System.out.println(<span class="string">"------当前文件中的内容------"</span>);</span><br><span class="line"><span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) {</span><br><span class="line">            System.out.println(line);</span><br><span class="line">        }</span><br><span class="line">br.close();</span><br></pre></td></tr></tbody></table></figure><p>这里特别注意可能出现的中文乱码的问题</p><p>首先要保证读写两个功能使用的字符集最好一致，否则仍有可能出现乱码</p><p>另外，手动在txt文件中输入中文，貌似我这么操作的情况下用<code>UTF-8</code>读取时中文会变成<code>?</code>，使用<code>GB2312</code>则可以正常显示中文😂。</p><h1 id="写入内容"><a href="#写入内容" class="headerlink" title="写入内容"></a>写入内容</h1><p>该部分代码及部分注释如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//写入内容,同时避免中文乱码</span></span><br><span class="line">Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入一行内容："</span>);</span><br><span class="line">String value=sc.nextLine();</span><br><span class="line">FileOutputStream writerStream=<span class="keyword">new</span> FileOutputStream(file,<span class="keyword">true</span>);</span><br><span class="line">        BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(writerStream, <span class="string">"UTF-8"</span>));<span class="comment">//UTF-8或者GB2312【并且要与上面读入的一致】  </span></span><br><span class="line">        bw.write(value);</span><br><span class="line">        bw.close();</span><br><span class="line">        sc.close();</span><br></pre></td></tr></tbody></table></figure><p>同样要注意可能出现的中文乱码问题，具体见上文</p><p><code>FileOutputStream writerStream=new FileOutputStream(file,true);</code>的<code>true</code>表示在原来的内容上追加，若该值为<code>false</code>则表示覆盖原内容。</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>暂时就写到这了，如有错误，欢迎大佬留言指正🤣。</p><p>欢迎访问我的小破站<a href="https://www.226yzy.com/">https://www.226yzy.com/</a> 或者GitHub版镜像 <a href="https://226yzy.github.io/">https://226yzy.github.io/</a> 或Gitee版镜像<a href="https://yzy226.gitee.io/">https://yzy226.gitee.io/</a></p><p>我的Github：<a href="https://github.com/226YZY">226YZY (星空下的YZY) (github.com)</a></p><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 探索实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 文档操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo中使用ECharts动态图表尝试</title>
      <link href="/2022/012347381.html"/>
      <url>/2022/012347381.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>前段时间，在接触了ECharts，感觉它的效果非常合我意，所以打算看看能不能通过hexo在写博客的时候使用。但可惜好像没法直接用（虽然可以专门另写一个js，但是感觉不在文章内容不在md文件中不太好）。虽然自己尝试失败了，但我在Hexo官网中查到了有这种插件，所以就有了本文。（头一次想起来<a href="https://hexo.io/zh-cn/">Hexo官网</a>可以找一些有用的插件，差点以为以后不会再打开了🤣）</p><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote><h1 id="引入Apache-ECharts"><a href="#引入Apache-ECharts" class="headerlink" title="引入Apache ECharts"></a>引入Apache ECharts</h1><p>首先在官方的教程中需要在<code>head</code>中引入<code>echarts.js</code>，EChart的官网：【<a href="https://echarts.apache.org/zh/index.html">Apache ECharts官网</a>】</p><blockquote><p>因为echarts.js 必须在渲染 echarts 实例的 JavaScript 前引入。插件中其实有实现在每个 echarts 实例前都引入<code>echarts.js</code>，所以是可以不用在head中引入（地图这种还是需要自己引入的）具体见下文补充</p></blockquote><p>在butterfly主题中，我们可以在主题配置文件的<code>inject</code>中如下配置</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src="https://cdn.jsdelivr.net/npm/echarts@5.3.0/dist/echarts.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src="https://cdn.jsdelivr.net/npm/echarts@4.7.0/map/js/china.min.js"&gt;&lt;/script&gt;</span> <span class="comment"># 绘制地图需要另外添加 china.js</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>注：如果不需要使用中国地图上面的<code>- &lt;script src="https://cdn.jsdelivr.net/npm/echarts@4.7.0/map/js/china.min.js"&gt;&lt;/script&gt;</code>可以不用添加</p></blockquote><p>或者</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src="https://unpkg.com/echarts@5.3.0/dist/echarts.min.js"&gt;&lt;/script&gt;</span> <span class="comment">#ECharts动态图表</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src="https://unpkg.com/echarts@4.7.0/map/js/china.js"&gt;&lt;/script&gt;</span> <span class="comment"># 绘制地图需要另外添加 china.js</span></span><br></pre></td></tr></tbody></table></figure><div class="tip home faa-horizontal animated"><p>【2022-02-15记】我发现其实插件中是有引入<code>echarts.js</code>，所以可以不用像上面一样引入<code>echarts.js</code>,但是插件中使用版本很老(是3.8.0，现在最新的都5.3.0了，新一点的视觉效果也有优化嘛😂)，所以建议大家去把插件中的CDN换成较新的版本</p></div><p>具体需要修改的文件路径是<code>node_modules\hexo-tag-echarts3\template.html</code>中第二行的</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/echarts/3.8.0/echarts.common.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>将上面的CDN换成较新的版本</p><p>比如，当前最新版本是5.3.0</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/echarts@5.3.0/dist/echarts.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">//或者</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/echarts@5.3.0/dist/echarts.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br></pre></td></tr></tbody></table></figure><p>然后替换即可</p><blockquote><p>不过如果你使用多的话，插件在每个 echarts 实例前都引入<code>echarts.js</code>的做法就有点重复加载相同资源了，不如在head中引入，然后把插件中的CDN给删了🌠</p></blockquote><h2 id="地图资源"><a href="#地图资源" class="headerlink" title="地图资源"></a>地图资源</h2><p>地图是<code>echarts.js</code>中没有的，所以需要额外引入。好在ECharts还是提供了中国地图、世界地图，以及各省地图</p><p>对应的CDN可以通过这个链接来找<a href="https://cdn.jsdelivr.net/npm/echarts@4.7.0/map/js/">https://cdn.jsdelivr.net/npm/echarts@4.7.0/map/js/</a></p><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><h2 id="Echarts的插件"><a href="#Echarts的插件" class="headerlink" title="Echarts的插件"></a>Echarts的插件</h2><p>我从<a href="https://hexo.io/zh-cn/">Hexo官网</a>找到了这个插件</p><p>安装命令如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-echarts3 --save</span><br></pre></td></tr></tbody></table></figure><p>这个插件也可以在GitHub上找到：<a href="https://github.com/kchen0x/hexo-tag-echarts3">kchen0x/hexo-tag-echarts3: A simple plugin for inserting ECharts 3 by using tags in Hexo. (github.com)</a></p><h2 id="Chart-js的插件"><a href="#Chart-js的插件" class="headerlink" title="Chart.js的插件"></a>Chart.js的插件</h2><p>如果你不喜欢<code>Echarts</code>的风格，也可以看看<code>Chart.js</code>的，这是它的官网：【<a href="https://chartjs.bootcss.com/">Chart.js | 开源的 HTML5 图表工具 (bootcss.com)</a>】</p><p>（发现这个是看了这位大佬的<a href="https://shen-yu.gitee.io/2020/chartjs/">在 Hexo 中插入 Chart 动态图表 | 岛 (gitee.io)</a>，原本以为找到的是ECharts的😅）</p><p>安装命令如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-chart --save</span><br></pre></td></tr></tbody></table></figure><ul><li><p>使用示例</p><p>由于我不使用该插件，所以该插件的基本使用引用了该插件作者的描述，具体可以见其原文【原文：<a href="https://shen-yu.gitee.io/2020/chartjs/">在 Hexo 中插入 Chart 动态图表 | 岛 (gitee.io)</a>】</p><blockquote><p>安装插件之后在文章内使用 chart 的 tag 就可以了</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% chart 90% 300 %}</span><br><span class="line">\\TODO option goes here</span><br><span class="line">{% endchart %}</span><br></pre></td></tr></tbody></table></figure><p>其中 <code>chart</code> 是标签名，<code>endchart</code> 是结束标签，不需要更改，<code>90%</code> 是图表容器的相对宽度，默认是<code>100%</code>，<code>300</code> 是图表容器的高度，默认是按正常比例缩放的，你可以通过设置 <code>options</code> 里面的 <code>aspectRatio</code> 属性来调整宽高比例，另外还有许多属性可以自定义，你可以查看 <a href="https://www.chartjs.org/docs/latest/general/responsive.html">官方文档</a>。在标签之间的部分，都是需要自己填充的图表数据和属性。</p></blockquote></li></ul><h1 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h1><div class="tip home faa-horizontal animated"><p>我还是倾向于使用<code>ECharts</code>的，所以以下内容是有关<code>ECharts</code>的</p></div><h2 id="插件作者的示例"><a href="#插件作者的示例" class="headerlink" title="插件作者的示例"></a>插件作者的示例</h2><p>插件作者使用示例如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% echarts 400 '85%' %}</span><br><span class="line">\\TODO echarts option goes here</span><br><span class="line">{% endecharts %}</span><br></pre></td></tr></tbody></table></figure><p>作者也留下了他的Demo<a href="https://kchen.cc/2016/11/05/echarts-in-hexo/">在 Hexo 中插入 ECharts 动态图表 - KChen’s Blog</a></p><h2 id="我结合ECharts官方示例的尝试"><a href="#我结合ECharts官方示例的尝试" class="headerlink" title="我结合ECharts官方示例的尝试"></a>我结合ECharts官方示例的尝试</h2><p>以下内容，代码及其属性描述主要是来自ECharts官方【<a href="https://echarts.apache.org/zh/index.html">Apache ECharts官网</a>】</p><p>接下来是我的使用尝试</p><p>【我的个人博客www.226yzy.com】</p><h3 id="基础柱状图"><a href="#基础柱状图" class="headerlink" title="基础柱状图"></a>基础柱状图</h3><p><strong>效果：</strong><br></p><div id="echarts1500" style="width: 85%;height: 400px;margin: 0 auto"></div><!-- <script src="https://unpkg.com/echarts@5.3.0/dist/echarts.min.js"></script> --><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts1500'));        // 指定图表的配置项和数据        var option = option = {  xAxis: {    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']  },  yAxis: {},  series: [    {      type: 'bar',      data: [23, 24, 18, 25, 27, 28, 25]    }  ]};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script><p></p><div class="tabs" id="tags"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tags-1">代码</button></li><li class="tab"><button type="button" data-href="#tags-2">更多/官方描述</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tags-1"><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">{% echarts 400 '85%' %}</span><br><span class="line">option = {</span><br><span class="line">  xAxis: {</span><br><span class="line">    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']</span><br><span class="line">  },</span><br><span class="line">  yAxis: {},</span><br><span class="line">  series: [</span><br><span class="line">    {</span><br><span class="line">      type: 'bar',</span><br><span class="line">      data: [23, 24, 18, 25, 27, 28, 25]</span><br><span class="line">    }</span><br><span class="line">  ]</span><br><span class="line">};</span><br><span class="line">{% endecharts %}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tags-2"><blockquote><p><a href="https://echarts.apache.org/handbook/zh/how-to/chart-types/bar/basic-bar">https://echarts.apache.org/handbook/zh/how-to/chart-types/bar/basic-bar</a></p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="基础折线图"><a href="#基础折线图" class="headerlink" title="基础折线图"></a>基础折线图</h3><p><strong>效果：</strong></p><div id="echarts4518" style="width: 85%;height: 400px;margin: 0 auto"></div><!-- <script src="https://unpkg.com/echarts@5.3.0/dist/echarts.min.js"></script> --><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts4518'));        // 指定图表的配置项和数据        var option = option = {  xAxis: {    type: 'category',    data: ['A', 'B', 'C']  },  yAxis: {    type: 'value'  },  series: [    {      data: [120, 200, 150],      type: 'line'    }  ]};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script><div class="tabs" id="tags"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tags-1">代码</button></li><li class="tab"><button type="button" data-href="#tags-2">更多/官方描述</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tags-1"><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">{% echarts 400 '85%' %}</span><br><span class="line">option = {</span><br><span class="line">  xAxis: {</span><br><span class="line">    type: 'category',</span><br><span class="line">    data: ['A', 'B', 'C']</span><br><span class="line">  },</span><br><span class="line">  yAxis: {</span><br><span class="line">    type: 'value'</span><br><span class="line">  },</span><br><span class="line">  series: [</span><br><span class="line">    {</span><br><span class="line">      data: [120, 200, 150],</span><br><span class="line">      type: 'line'</span><br><span class="line">    }</span><br><span class="line">  ]</span><br><span class="line">};</span><br><span class="line">{% endecharts %}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tags-2"><blockquote><p><a href="https://echarts.apache.org/handbook/zh/how-to/chart-types/line/basic-line">https://echarts.apache.org/handbook/zh/how-to/chart-types/line/basic-line</a></p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="基础饼图"><a href="#基础饼图" class="headerlink" title="基础饼图"></a>基础饼图</h3><p><strong>效果：</strong></p><div id="echarts5067" style="width: 85%;height: 400px;margin: 0 auto"></div><!-- <script src="https://unpkg.com/echarts@5.3.0/dist/echarts.min.js"></script> --><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts5067'));        // 指定图表的配置项和数据        var option = option = {  series: [    {      type: 'pie',      data: [        {          value: 335,          name: '直接访问'        },        {          value: 234,          name: '联盟广告'        },        {          value: 1548,          name: '搜索引擎'        }      ]    }  ]};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script><div class="tabs" id="tags"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tags-1">代码</button></li><li class="tab"><button type="button" data-href="#tags-2">更多/官方描述</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tags-1"><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">{% echarts 400 '85%' %}</span><br><span class="line">option = {</span><br><span class="line">  series: [</span><br><span class="line">    {</span><br><span class="line">      type: 'pie',</span><br><span class="line">      data: [</span><br><span class="line">        {</span><br><span class="line">          value: 335,</span><br><span class="line">          name: '直接访问'</span><br><span class="line">        },</span><br><span class="line">        {</span><br><span class="line">          value: 234,</span><br><span class="line">          name: '联盟广告'</span><br><span class="line">        },</span><br><span class="line">        {</span><br><span class="line">          value: 1548,</span><br><span class="line">          name: '搜索引擎'</span><br><span class="line">        }</span><br><span class="line">      ]</span><br><span class="line">    }</span><br><span class="line">  ]</span><br><span class="line">};</span><br><span class="line">{% endecharts %}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tags-2"><blockquote><p><a href="https://echarts.apache.org/handbook/zh/how-to/chart-types/scatter/basic-scatter">https://echarts.apache.org/handbook/zh/how-to/chart-types/scatter/basic-scatter</a></p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="基础散点图"><a href="#基础散点图" class="headerlink" title="基础散点图"></a>基础散点图</h3><p><strong>效果：</strong></p><div id="echarts2262" style="width: 85%;height: 400px;margin: 0 auto"></div><!-- <script src="https://unpkg.com/echarts@5.3.0/dist/echarts.min.js"></script> --><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts2262'));        // 指定图表的配置项和数据        var option = option = {  xAxis: {    data: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']  },  yAxis: {},  series: [    {      type: 'scatter',      data: [220, 182, 191, 234, 290, 330, 310]    }  ]};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script><div class="tabs" id="tags"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tags-1">代码</button></li><li class="tab"><button type="button" data-href="#tags-2">更多/官方描述</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tags-1"><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">{% echarts 400 '85%' %}</span><br><span class="line">option = {</span><br><span class="line">  xAxis: {</span><br><span class="line">    data: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']</span><br><span class="line">  },</span><br><span class="line">  yAxis: {},</span><br><span class="line">  series: [</span><br><span class="line">    {</span><br><span class="line">      type: 'scatter',</span><br><span class="line">      data: [220, 182, 191, 234, 290, 330, 310]</span><br><span class="line">    }</span><br><span class="line">  ]</span><br><span class="line">};</span><br><span class="line">{% endecharts %}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tags-2"><blockquote><p><a href="https://echarts.apache.org/handbook/zh/how-to/chart-types/line/basic-line">https://echarts.apache.org/handbook/zh/how-to/chart-types/line/basic-line</a></p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://kchen.cc/2016/11/05/echarts-in-hexo/">在 Hexo 中插入 ECharts 动态图表 - KChen’s Blog</a></p><p><a href="https://echarts.apache.org/handbook/zh/get-started">Handbook - Apache ECharts</a></p><p><a href="https://chartjs.bootcss.com/docs/">Chart.js · GitBook (bootcss.com)</a></p><p><a href="https://shen-yu.gitee.io/2020/chartjs/">在 Hexo 中插入 Chart 动态图表 | 岛 (gitee.io)</a></p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>暂时就上面这些吧</p><p>欢迎访问我的小破站 <a href="https://www.226yzy.com/">https://www.226yzy.com/</a> 或者【GitHub版镜像 <a href="https://226yzy.github.io/">https://226yzy.github.io/</a> 或Gitee版镜像 <a href="https://yzy226.gitee.io/">https://yzy226.gitee.io/</a> 】</p><p>我的Github：<a href="https://github.com/226YZY">https://github.com/226YZY</a></p><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> ECharts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【随笔】通过必应的工具发现别的网站未经允许的转载</title>
      <link href="/2022/012242042.html"/>
      <url>/2022/012242042.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>前几天，我在手机上一不小心搜到了我写的一篇博客，本着好奇心以及疑惑的驱使，我打开查看了一下。虽然整篇内容并没有缺胳膊少腿，但是这个网站并没有注明任何转载信息（上面标明的作者也不是我，要不是这篇博客中我自己添了不少与我有关的链接，真的看不出来原作者是谁😝）【我也不是不同意转载，但好歹也要注明转载来源吧】</p><p>不过，还好那个网站所有者还是比较有良心，有留下有关的联系方式（别的黑心网站就不可能了，连备案可能都没有，所有者的任何信息你差不多），在跟网站所有者沟通后，他撤下了我那篇，并承诺完善相关内容【后来我再访问的时候，也确实看到了这些文章都有了转载来源👍】</p><p>这种情况还是要重视吧，不然哪天一大堆不明真相的群众，从什么乱七八糟的网站上过来说你抄袭🤣</p><p>(我现在被盗的文章来源应该是我的转在自己博客园账号上的,感觉以后转博客园上还是要特别留意一下)</p><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p> 本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote><h1 id="必应网站管理员工具"><a href="#必应网站管理员工具" class="headerlink" title="必应网站管理员工具"></a>必应网站管理员工具</h1><p>像上面一样自己发现还是太偶然了，昨天我打开必应的网站管理者工具<a href="https://www.bing.com/webmasters/home">Home - Bing Webmaster Tools</a>想看一下SEO等其他有关数据时，发现反向链接中多了我好几个从来没见过的网站。点开访问，果然基本都是把我那篇给弄过去的。</p><p>当然能通过必应的网站管理者工具的反向链接查找到的，都是被扒过去后你藏在其中的本站链接未被去除的。（要是弄过去后，把你的有关内容去的一干二净的“孤儿”，那也只能。。。【拿某一段到搜索引擎上查一查，说不定能发现那些“孤儿”】）</p><p>虽然有自己藏在其中的有关信息还在，但是像这种网站是爬了很多来源的文章，对于哪些没有防备的文章，访问者将无法得知原作者的任何信息。而且这些网站的文章上面的作者注明都是与那个网站有关，与原作者半毛钱关系都没有。而且有些周围还一堆广告，拿你的东西来盈利还不自觉注明转载来源的，我只能说：恶心！恶心！恶心啊！🤮</p><h1 id="一些应对办法"><a href="#一些应对办法" class="headerlink" title="一些应对办法"></a>一些应对办法</h1><blockquote><p>可能不全或不完善，欢迎大佬指出</p></blockquote><p>那些恶心人的操作是管不住的,只能自己有所防备</p><h2 id="添加转载说明及作者有关信息"><a href="#添加转载说明及作者有关信息" class="headerlink" title="添加转载说明及作者有关信息"></a>添加转载说明及作者有关信息</h2><p>最好在不影响阅读的情况下在文章前面添加这些信息，然后可以在文章尾部在来一次。如果不嫌麻烦，在文章中适当添一些有关信息那是最好的。而且。。。还能水水字数🤭</p><p>【我的个人博客www.226yzy.com】</p><h2 id="图片防盗链"><a href="#图片防盗链" class="headerlink" title="图片防盗链"></a>图片防盗链</h2><p>有一些图床（比如聚合图床<a href="https://www.superbed.cn/">聚合图床 - 免费无限图片上传 (superbed.cn)</a>）是可以开启防盗链的（可能要会员😅）。这样被盗的文章中引用该图片资源的图片将无法正常显示</p><div class="tip home faa-horizontal animated"><p>【所以，像给友链的有关图片时，最好用自己肯定不会用防盗链的来源】</p></div><h2 id="图片水印"><a href="#图片水印" class="headerlink" title="图片水印"></a>图片水印</h2><p>这个加水印嘛，能用则用。盗的人想处理，估计要下点功夫（所以水印位置，不要太固定）</p><ul><li>图床</li></ul><p>图床有的有这种功能（可能要会员😅）</p><ul><li>插件</li></ul><blockquote><p>这个我没用过,就找网上几篇参考吧，可能就对博客源文件中的图片有效</p></blockquote><p><a href="https://cloud.tencent.com/developer/article/1558511">Hexo 文章图片添加水印，不用云处理 - 云+社区 - 腾讯云 (tencent.com)</a></p><p><a href="https://www.cnblogs.com/linx/p/12762472.html">hexo 图片添加水印（png, jpeg, jpg, gif） - 极·简 - 博客园 (cnblogs.com)</a></p><ul><li>自己手动给图片加水印</li></ul><p>这个自己P图可能真的太麻烦</p><p>我找到了几个在线编辑的</p><p><a href="https://www.gaitubao.com/shuiyin/">在线给图片加水印、照片上添加文字、图片加LOGO工具 - 改图宝 (gaitubao.com)</a></p><p><a href="http://watermark.dxcweb.com/">在线图片加水印，canvas加水印,防止身份证复印件被盗 (dxcweb.com)</a></p><h2 id="在代码的注释中添加有关信息（如果有的话）"><a href="#在代码的注释中添加有关信息（如果有的话）" class="headerlink" title="在代码的注释中添加有关信息（如果有的话）"></a>在代码的注释中添加有关信息（如果有的话）</h2><p>在不影响使用的情况下，可以添一点。</p><h2 id="标签外挂"><a href="#标签外挂" class="headerlink" title="标签外挂"></a>标签外挂</h2><p>我好像我现在使用的标签外挂，别的主题不知道能不能用。反正这个用了还能美化页面，挺好的。</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>暂时就上面这些吧</p><p>欢迎访问我的小破站<a href="https://www.226yzy.com/">https://www.226yzy.com/</a> 或者GitHub版镜像 <a href="https://226yzy.github.io/">https://226yzy.github.io/</a> 或Gitee版镜像<a href="https://yzy226.gitee.io/">https://yzy226.gitee.io/</a></p><p>我的Github：<a href="https://github.com/226YZY">226YZY (星空下的YZY) (github.com)</a></p><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 警示 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【暂不公开】YZY的ACM模板整理-java版</title>
      <link href="/2022/011424656.html"/>
      <url>/2022/011424656.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="3b252a8543c64825bd1cd3cb5eaddbb1a1ac5dabd1e9e47f0ff5b9519dead65f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换Butterfly主题及其美化记录</title>
      <link href="/2022/010948485.html"/>
      <url>/2022/010948485.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>本文记录我从matery主题转butterfly主题的记录（matery还是很优秀的，感谢它能成为我的入门主题）</p><blockquote><p>其实换主题已经有一段时间了，由于期末一下没太多时间整理，一耽搁，有些修改可能忘了,我就把能想起来的先记录下来，以备不时之需（所以，后续不定时更新）</p></blockquote><p>由于想要增添一些新东西，原来使用的matery主题现有的布局，我认为再增添上东西后会影响布局的美观。在寻找解决方案的过程中，我发现了butterfly这个主题。该主题不但内容丰富、布局美观，并且自带了昼夜切换以及其侧边栏有较高的可拓展性。经过深思熟虑后，觉得将主题更换为butterfly主题。</p><blockquote><p>建议自己新建一个CSS文件，然后在主题配置文件的<code>head</code>中引入、 </p></blockquote><hr><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote><p>更好的阅读体验欢迎访问原文<a href="https://226yzy.com/2022/010948485.html">更换Butterfly主题记录 | 星空下的YZY (226yzy.com)</a></p><h1 id="butterfly主题基础"><a href="#butterfly主题基础" class="headerlink" title="butterfly主题基础"></a>butterfly主题基础</h1><p>该主题的样板网站上有主题作者的详细的基础教程</p><p>传送门🚪 <a href="https://butterfly.js.org/">Butterfly - A Simple and Card UI Design theme for Hexo</a></p><p>不得不说作者大大非常用心，这几篇教程不止基础修改配置，还有一些进阶魔改的内容，跟着做下来可DIY的地方非常多</p><h1 id="添加访客地图"><a href="#添加访客地图" class="headerlink" title="添加访客地图"></a>添加访客地图</h1><blockquote><p>这里不推荐使用主题作者提到的那个地图，至少可以很明显看出来藏南地区有问题</p></blockquote><p>这里推荐使用<a href="https://www.revolvermaps.com/?target=gallery">https://www.revolvermaps.com/?target=gallery</a></p><blockquote><p>这里需要注意使用无国旗标注的版本，不然台湾省那还是会有问题。维护国家主权和领土完整、坚持一个中国的原则是每个公民应尽的责任和义务。</p></blockquote><h1 id="将评论更换为waline"><a href="#将评论更换为waline" class="headerlink" title="将评论更换为waline"></a>将评论更换为waline</h1><p>更详细的操作请阅览官方文档<a href="https://waline.js.org/">Waline | Waline</a></p><p>需要用到这个网站<a href="https://vercel.com/">https://vercel.com/</a></p><h1 id="将评论更换为Twikoo"><a href="#将评论更换为Twikoo" class="headerlink" title="将评论更换为Twikoo"></a>将评论更换为Twikoo</h1><p>完整教程参考<a href="https://twikoo.js.org/">Twikoo 中文文档</a></p><p>同样需要用到这个网站<a href="https://vercel.com/">https://vercel.com/</a></p><h1 id="Aplayer-音乐播放器的缩进"><a href="#Aplayer-音乐播放器的缩进" class="headerlink" title="Aplayer 音乐播放器的缩进"></a>Aplayer 音乐播放器的缩进</h1><p>在主题配置文件的<code>bottom</code>中添加如下（当然把相关信息填成你自己的），如果添加后没效果，可能是插件没安装，其他相关的可以查看其中文文档<a href="https://aplayer.js.org/#/zh-Hans/">首页 - APlayer</a></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- &lt;div class="aplayer no-destroy" data-id="6804316983" data-server="netease" data-type="playlist" data-fixed="true" data-mini="true" data-listFolded="true" data-order="random" data-preload="auto" data-autoplay="false" muted&gt;&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure><p>加入Aplayer音乐播放器后，发现没有直接是matery主题那样侧栏伸缩的效果。后来我找到了Akilar大佬的解决方案<a href="https://akilar.top/posts/ebf20e02/">Custom Beautify | Akilarの糖果屋</a></p><p>在主题目录下<code>source\css\custom.css</code>添加如下代码</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span><span class="selector-class">.aplayer-fixed</span><span class="selector-class">.aplayer-narrow</span> <span class="selector-class">.aplayer-body</span> {</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">66px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="comment">/* 默认情况下缩进左侧66px，只留一点箭头部分 */</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.aplayer</span><span class="selector-class">.aplayer-fixed</span><span class="selector-class">.aplayer-narrow</span> <span class="selector-class">.aplayer-body</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="comment">/* 鼠标悬停是左侧缩进归零，完全显示按钮 */</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="看板娘"><a href="#看板娘" class="headerlink" title="看板娘"></a>看板娘</h1><p>这个我在matery主题的时候就弄过了,你直接将这三行添加至主题配置文件的<code>bottom</code>中</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- &lt;script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line">- &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css" /&gt;</span><br><span class="line">- &lt;script src="https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/autoload.min.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="滚动条"><a href="#滚动条" class="headerlink" title="滚动条"></a>滚动条</h1><p>美化滚动条嘛，我比较喜欢蓝白相间的。将下面的代码加入到你自己的CSS中即可</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 滚动条 */</span></span><br><span class="line">::-webkit-scrollbar-thumb {</span><br><span class="line">  background-color: <span class="number">#2ab1ff</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">-webkit-linear-gradient</span>(</span><br><span class="line">    <span class="number">45deg</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">25%</span>,</span><br><span class="line">    transparent <span class="number">25%</span>,</span><br><span class="line">    transparent <span class="number">50%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">50%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">75%</span>,</span><br><span class="line">    transparent <span class="number">75%</span>,</span><br><span class="line">    transparent</span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3em</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-track {</span><br><span class="line">  background-color: <span class="number">#ffffff</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3em</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar {</span><br><span class="line">  width: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">15px</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="修改字体"><a href="#修改字体" class="headerlink" title="修改字体"></a>修改字体</h1><p>在你的CSS文件中按这个格式添加你的字体，然后在主题配置文件的相关配置中引用</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@font-face{</span><br><span class="line">    font-family:'DIYJH' ;  </span><br><span class="line">    src:url('/fonts/FZZJ-JHTJW.TTF'); </span><br><span class="line">    font-display : swap;</span><br><span class="line">  }  </span><br></pre></td></tr></tbody></table></figure><p>如果你的字体文件过大又舍不得不用，可以参考我另一篇文章，将字体进行精简<a href="https://226yzy.com/2021/122648049.html">字体精简及其相关资源 | 星空下的YZY (226yzy.com)</a></p><h1 id="自动提交网站至百度"><a href="#自动提交网站至百度" class="headerlink" title="自动提交网站至百度"></a>自动提交网站至百度</h1><p>具体参考自<a href="https://www.antmoe.com/posts/2db95804/#自动提交网址给百度">自动提交网址给百度 | 小康博客 (antmoe.com)</a></p><p>不过小康大佬给的代码库地址似乎没法用了</p><p>如果不嫌弃可以用我这个代码库地址</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/226yzy/Hexo-BaiduPush.git</span><br></pre></td></tr></tbody></table></figure><h1 id="为底部栏添加跳动的鱼背景"><a href="#为底部栏添加跳动的鱼背景" class="headerlink" title="为底部栏添加跳动的鱼背景"></a>为底部栏添加跳动的鱼背景</h1><p>底部栏些许单调，有一次看到了底部跳动的鱼的效果还不错（效果可参考本站底部栏）</p><blockquote><p>引用自<a href="https://weilining.github.io/206.html">jQuery 插件 养鱼 | Ln’s Blog (weilining.github.io)</a></p></blockquote><p>在主题文件下的js文件中新建一个<code>fishes.js</code>的js文件,然后在其中添加</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br></pre></td><td class="code"><pre><span class="line">fish();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fish</span>(<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    $(<span class="string">"footer"</span>).append(</span><br><span class="line">      <span class="string">'&lt;div class="container" id="jsi-flying-fish-container"&gt;&lt;/div&gt;'</span></span><br><span class="line">    ),</span><br><span class="line">    $(<span class="string">".container"</span>).css({</span><br><span class="line">      <span class="attr">width</span>: <span class="string">"100%"</span>,</span><br><span class="line">      <span class="attr">height</span>: <span class="string">"160px"</span>,</span><br><span class="line">      <span class="attr">margin</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">padding</span>: <span class="number">0</span>,</span><br><span class="line">    }),</span><br><span class="line">    $(<span class="string">"#footer-wrap"</span>).css({</span><br><span class="line">      <span class="attr">position</span>: <span class="string">"absolute"</span>,</span><br><span class="line">      <span class="string">"text-align"</span>: <span class="string">"center"</span>,</span><br><span class="line">      <span class="attr">top</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">right</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">left</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">bottom</span>: <span class="number">0</span>,</span><br><span class="line">    }),</span><br><span class="line">    <span class="built_in">this</span></span><br><span class="line">  );</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> RENDERER = {</span><br><span class="line">  <span class="attr">POINT_INTERVAL</span>: <span class="number">5</span>,</span><br><span class="line">  <span class="attr">FISH_COUNT</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">MAX_INTERVAL_COUNT</span>: <span class="number">50</span>,</span><br><span class="line">  <span class="attr">INIT_HEIGHT_RATE</span>: <span class="number">0.5</span>,</span><br><span class="line">  <span class="attr">THRESHOLD</span>: <span class="number">50</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">this</span>.setParameters();</span><br><span class="line">    <span class="built_in">this</span>.reconstructMethods();</span><br><span class="line">    <span class="built_in">this</span>.setup();</span><br><span class="line">    <span class="built_in">this</span>.bindEvent();</span><br><span class="line">    <span class="built_in">this</span>.render();</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">setParameters</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">this</span>.$window = $(<span class="built_in">window</span>);</span><br><span class="line">    <span class="built_in">this</span>.$container = $(<span class="string">"#jsi-flying-fish-container"</span>);</span><br><span class="line">    <span class="built_in">this</span>.$canvas = $(<span class="string">"&lt;canvas /&gt;"</span>);</span><br><span class="line">    <span class="built_in">this</span>.context = <span class="built_in">this</span>.$canvas</span><br><span class="line">      .appendTo(<span class="built_in">this</span>.$container)</span><br><span class="line">      .get(<span class="number">0</span>)</span><br><span class="line">      .getContext(<span class="string">"2d"</span>);</span><br><span class="line">    <span class="built_in">this</span>.points = [];</span><br><span class="line">    <span class="built_in">this</span>.fishes = [];</span><br><span class="line">    <span class="built_in">this</span>.watchIds = [];</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">createSurfacePoints</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> count = <span class="built_in">Math</span>.round(<span class="built_in">this</span>.width / <span class="built_in">this</span>.POINT_INTERVAL);</span><br><span class="line">    <span class="built_in">this</span>.pointInterval = <span class="built_in">this</span>.width / (count - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">this</span>.points.push(<span class="keyword">new</span> SURFACE_POINT(<span class="built_in">this</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; count; i++) {</span><br><span class="line">      <span class="keyword">var</span> point = <span class="keyword">new</span> SURFACE_POINT(<span class="built_in">this</span>, i * <span class="built_in">this</span>.pointInterval),</span><br><span class="line">        previous = <span class="built_in">this</span>.points[i - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">      point.setPreviousPoint(previous);</span><br><span class="line">      previous.setNextPoint(point);</span><br><span class="line">      <span class="built_in">this</span>.points.push(point);</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">reconstructMethods</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">this</span>.watchWindowSize = <span class="built_in">this</span>.watchWindowSize.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.jdugeToStopResize = <span class="built_in">this</span>.jdugeToStopResize.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.startEpicenter = <span class="built_in">this</span>.startEpicenter.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.moveEpicenter = <span class="built_in">this</span>.moveEpicenter.bind(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.render = <span class="built_in">this</span>.render.bind(<span class="built_in">this</span>);</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">setup</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">this</span>.points.length = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.fishes.length = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.watchIds.length = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.intervalCount = <span class="built_in">this</span>.MAX_INTERVAL_COUNT;</span><br><span class="line">    <span class="built_in">this</span>.width = <span class="built_in">this</span>.$container.width();</span><br><span class="line">    <span class="built_in">this</span>.height = <span class="built_in">this</span>.$container.height();</span><br><span class="line">    <span class="built_in">this</span>.fishCount =</span><br><span class="line">      (((<span class="built_in">this</span>.FISH_COUNT * <span class="built_in">this</span>.width) / <span class="number">500</span>) * <span class="built_in">this</span>.height) / <span class="number">500</span>;</span><br><span class="line">    <span class="built_in">this</span>.$canvas.attr({ <span class="attr">width</span>: <span class="built_in">this</span>.width, <span class="attr">height</span>: <span class="built_in">this</span>.height });</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.skyGradient = <span class="built_in">this</span>.context.createLinearGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.skyGradient.addColorStop(<span class="number">0</span>, <span class="string">"hsl(180, 80%, 70%)"</span>);</span><br><span class="line">    <span class="built_in">this</span>.skyGradient.addColorStop(<span class="number">1</span>, <span class="string">"hsl(180, 80%, 90%)"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.seaGradient = <span class="built_in">this</span>.context.createLinearGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.seaGradient.addColorStop(<span class="number">0</span>, <span class="string">"hsl(180, 80%, 60%)"</span>);</span><br><span class="line">    <span class="built_in">this</span>.seaGradient.addColorStop(<span class="number">0.5</span>, <span class="string">"hsl(180, 80%, 50%)"</span>);</span><br><span class="line">    <span class="built_in">this</span>.seaGradient.addColorStop(<span class="number">1</span>, <span class="string">"hsl(210, 80%, 50%)"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.fishes.push(<span class="keyword">new</span> FISH(<span class="built_in">this</span>));</span><br><span class="line">    <span class="built_in">this</span>.createSurfacePoints();</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">watchWindowSize</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">this</span>.clearTimer();</span><br><span class="line">    <span class="built_in">this</span>.tmpWidth = <span class="built_in">this</span>.$window.width();</span><br><span class="line">    <span class="built_in">this</span>.tmpHeight = <span class="built_in">this</span>.$window.height();</span><br><span class="line">    <span class="built_in">this</span>.watchIds.push(<span class="built_in">setTimeout</span>(<span class="built_in">this</span>.jdugeToStopResize, <span class="built_in">this</span>.WATCH_INTERVAL));</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">clearTimer</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">this</span>.watchIds.length &gt; <span class="number">0</span>) {</span><br><span class="line">      <span class="built_in">clearTimeout</span>(<span class="built_in">this</span>.watchIds.pop());</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">jdugeToStopResize</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> width = <span class="built_in">this</span>.$window.width(),</span><br><span class="line">      height = <span class="built_in">this</span>.$window.height(),</span><br><span class="line">      stopped = width == <span class="built_in">this</span>.tmpWidth &amp;&amp; height == <span class="built_in">this</span>.tmpHeight;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.tmpWidth = width;</span><br><span class="line">    <span class="built_in">this</span>.tmpHeight = height;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (stopped) {</span><br><span class="line">      <span class="built_in">this</span>.setup();</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">bindEvent</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">this</span>.$window.on(<span class="string">"resize"</span>, <span class="built_in">this</span>.watchWindowSize);</span><br><span class="line">    <span class="built_in">this</span>.$container.on(<span class="string">"mouseenter"</span>, <span class="built_in">this</span>.startEpicenter);</span><br><span class="line">    <span class="built_in">this</span>.$container.on(<span class="string">"mousemove"</span>, <span class="built_in">this</span>.moveEpicenter);</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">getAxis</span>: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> offset = <span class="built_in">this</span>.$container.offset();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> {</span><br><span class="line">      <span class="attr">x</span>: event.clientX - offset.left + <span class="built_in">this</span>.$window.scrollLeft(),</span><br><span class="line">      <span class="attr">y</span>: event.clientY - offset.top + <span class="built_in">this</span>.$window.scrollTop(),</span><br><span class="line">    };</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">startEpicenter</span>: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>{</span><br><span class="line">    <span class="built_in">this</span>.axis = <span class="built_in">this</span>.getAxis(event);</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">moveEpicenter</span>: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> axis = <span class="built_in">this</span>.getAxis(event);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">this</span>.axis) {</span><br><span class="line">      <span class="built_in">this</span>.axis = axis;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">this</span>.generateEpicenter(axis.x, axis.y, axis.y - <span class="built_in">this</span>.axis.y);</span><br><span class="line">    <span class="built_in">this</span>.axis = axis;</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">generateEpicenter</span>: <span class="function"><span class="keyword">function</span> (<span class="params">x, y, velocity</span>) </span>{</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      y &lt; <span class="built_in">this</span>.height / <span class="number">2</span> - <span class="built_in">this</span>.THRESHOLD ||</span><br><span class="line">      y &gt; <span class="built_in">this</span>.height / <span class="number">2</span> + <span class="built_in">this</span>.THRESHOLD</span><br><span class="line">    ) {</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">var</span> index = <span class="built_in">Math</span>.round(x / <span class="built_in">this</span>.pointInterval);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= <span class="built_in">this</span>.points.length) {</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">this</span>.points[index].interfere(y, velocity);</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">controlStatus</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, count = <span class="built_in">this</span>.points.length; i &lt; count; i++) {</span><br><span class="line">      <span class="built_in">this</span>.points[i].updateSelf();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, count = <span class="built_in">this</span>.points.length; i &lt; count; i++) {</span><br><span class="line">      <span class="built_in">this</span>.points[i].updateNeighbors();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.fishes.length &lt; <span class="built_in">this</span>.fishCount) {</span><br><span class="line">      <span class="keyword">if</span> (--<span class="built_in">this</span>.intervalCount == <span class="number">0</span>) {</span><br><span class="line">        <span class="built_in">this</span>.intervalCount = <span class="built_in">this</span>.MAX_INTERVAL_COUNT;</span><br><span class="line">        <span class="built_in">this</span>.fishes.push(<span class="keyword">new</span> FISH(<span class="built_in">this</span>));</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    requestAnimationFrame(<span class="built_in">this</span>.render);</span><br><span class="line">    <span class="built_in">this</span>.controlStatus();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.context.fillStyle = <span class="built_in">this</span>.skyGradient;</span><br><span class="line">    <span class="built_in">this</span>.context.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.width, <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.context.fillStyle = <span class="built_in">this</span>.seaGradient;</span><br><span class="line">    <span class="built_in">this</span>.context.beginPath();</span><br><span class="line">    <span class="built_in">this</span>.context.moveTo(<span class="number">0</span>, <span class="built_in">this</span>.height);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, count = <span class="built_in">this</span>.points.length; i &lt; count; i++) {</span><br><span class="line">      <span class="built_in">this</span>.points[i].render(<span class="built_in">this</span>.context);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">this</span>.context.lineTo(<span class="built_in">this</span>.width, <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.context.closePath();</span><br><span class="line">    <span class="built_in">this</span>.context.fill();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, count = <span class="built_in">this</span>.fishes.length; i &lt; count; i++) {</span><br><span class="line">      <span class="built_in">this</span>.fishes[i].render(<span class="built_in">this</span>.context);</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">};</span><br><span class="line"><span class="keyword">var</span> SURFACE_POINT = <span class="function"><span class="keyword">function</span> (<span class="params">renderer, x</span>) </span>{</span><br><span class="line">  <span class="built_in">this</span>.renderer = renderer;</span><br><span class="line">  <span class="built_in">this</span>.x = x;</span><br><span class="line">  <span class="built_in">this</span>.init();</span><br><span class="line">};</span><br><span class="line">SURFACE_POINT.prototype = {</span><br><span class="line">  <span class="attr">SPRING_CONSTANT</span>: <span class="number">0.03</span>,</span><br><span class="line">  <span class="attr">SPRING_FRICTION</span>: <span class="number">0.9</span>,</span><br><span class="line">  <span class="attr">WAVE_SPREAD</span>: <span class="number">0.3</span>,</span><br><span class="line">  <span class="attr">ACCELARATION_RATE</span>: <span class="number">0.01</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">this</span>.initHeight = <span class="built_in">this</span>.renderer.height * <span class="built_in">this</span>.renderer.INIT_HEIGHT_RATE;</span><br><span class="line">    <span class="built_in">this</span>.height = <span class="built_in">this</span>.initHeight;</span><br><span class="line">    <span class="built_in">this</span>.fy = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.force = { <span class="attr">previous</span>: <span class="number">0</span>, <span class="attr">next</span>: <span class="number">0</span> };</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">setPreviousPoint</span>: <span class="function"><span class="keyword">function</span> (<span class="params">previous</span>) </span>{</span><br><span class="line">    <span class="built_in">this</span>.previous = previous;</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">setNextPoint</span>: <span class="function"><span class="keyword">function</span> (<span class="params">next</span>) </span>{</span><br><span class="line">    <span class="built_in">this</span>.next = next;</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">interfere</span>: <span class="function"><span class="keyword">function</span> (<span class="params">y, velocity</span>) </span>{</span><br><span class="line">    <span class="built_in">this</span>.fy =</span><br><span class="line">      <span class="built_in">this</span>.renderer.height *</span><br><span class="line">      <span class="built_in">this</span>.ACCELARATION_RATE *</span><br><span class="line">      (<span class="built_in">this</span>.renderer.height - <span class="built_in">this</span>.height - y &gt;= <span class="number">0</span> ? -<span class="number">1</span> : <span class="number">1</span>) *</span><br><span class="line">      <span class="built_in">Math</span>.abs(velocity);</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">updateSelf</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">this</span>.fy += <span class="built_in">this</span>.SPRING_CONSTANT * (<span class="built_in">this</span>.initHeight - <span class="built_in">this</span>.height);</span><br><span class="line">    <span class="built_in">this</span>.fy *= <span class="built_in">this</span>.SPRING_FRICTION;</span><br><span class="line">    <span class="built_in">this</span>.height += <span class="built_in">this</span>.fy;</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">updateNeighbors</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.previous) {</span><br><span class="line">      <span class="built_in">this</span>.force.previous =</span><br><span class="line">        <span class="built_in">this</span>.WAVE_SPREAD * (<span class="built_in">this</span>.height - <span class="built_in">this</span>.previous.height);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.next) {</span><br><span class="line">      <span class="built_in">this</span>.force.next = <span class="built_in">this</span>.WAVE_SPREAD * (<span class="built_in">this</span>.height - <span class="built_in">this</span>.next.height);</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="keyword">function</span> (<span class="params">context</span>) </span>{</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.previous) {</span><br><span class="line">      <span class="built_in">this</span>.previous.height += <span class="built_in">this</span>.force.previous;</span><br><span class="line">      <span class="built_in">this</span>.previous.fy += <span class="built_in">this</span>.force.previous;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.next) {</span><br><span class="line">      <span class="built_in">this</span>.next.height += <span class="built_in">this</span>.force.next;</span><br><span class="line">      <span class="built_in">this</span>.next.fy += <span class="built_in">this</span>.force.next;</span><br><span class="line">    }</span><br><span class="line">    context.lineTo(<span class="built_in">this</span>.x, <span class="built_in">this</span>.renderer.height - <span class="built_in">this</span>.height);</span><br><span class="line">  },</span><br><span class="line">};</span><br><span class="line"><span class="keyword">var</span> FISH = <span class="function"><span class="keyword">function</span> (<span class="params">renderer</span>) </span>{</span><br><span class="line">  <span class="built_in">this</span>.renderer = renderer;</span><br><span class="line">  <span class="built_in">this</span>.init();</span><br><span class="line">};</span><br><span class="line">FISH.prototype = {</span><br><span class="line">  <span class="attr">GRAVITY</span>: <span class="number">0.4</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">this</span>.direction = <span class="built_in">Math</span>.random() &lt; <span class="number">0.5</span>;</span><br><span class="line">    <span class="built_in">this</span>.x = <span class="built_in">this</span>.direction</span><br><span class="line">      ? <span class="built_in">this</span>.renderer.width + <span class="built_in">this</span>.renderer.THRESHOLD</span><br><span class="line">      : -<span class="built_in">this</span>.renderer.THRESHOLD;</span><br><span class="line">    <span class="built_in">this</span>.y = <span class="built_in">this</span>.getRandomValue(</span><br><span class="line">      (<span class="built_in">this</span>.renderer.height * <span class="number">6</span>) / <span class="number">10</span>,</span><br><span class="line">      (<span class="built_in">this</span>.renderer.height * <span class="number">9</span>) / <span class="number">10</span></span><br><span class="line">    );</span><br><span class="line">    <span class="built_in">this</span>.previousY = <span class="built_in">this</span>.y;</span><br><span class="line">    <span class="built_in">this</span>.vx = <span class="built_in">this</span>.getRandomValue(<span class="number">4</span>, <span class="number">10</span>) * (<span class="built_in">this</span>.direction ? -<span class="number">1</span> : <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">this</span>.vy = <span class="built_in">this</span>.getRandomValue(-<span class="number">5</span>, -<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">this</span>.ay = <span class="built_in">this</span>.getRandomValue(-<span class="number">0.2</span>, -<span class="number">0.05</span>);</span><br><span class="line">    <span class="built_in">this</span>.theta = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.phi = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.isOut = <span class="literal">false</span>;</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">getRandomValue</span>: <span class="function"><span class="keyword">function</span> (<span class="params">min, max</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> min + (max - min) * <span class="built_in">Math</span>.random();</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">controlStatus</span>: <span class="function"><span class="keyword">function</span> (<span class="params">context</span>) </span>{</span><br><span class="line">    <span class="built_in">this</span>.previousY = <span class="built_in">this</span>.y;</span><br><span class="line">    <span class="built_in">this</span>.x += <span class="built_in">this</span>.vx;</span><br><span class="line">    <span class="built_in">this</span>.y += <span class="built_in">this</span>.vy;</span><br><span class="line">    <span class="built_in">this</span>.vy += <span class="built_in">this</span>.ay;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.y &lt; <span class="built_in">this</span>.renderer.height * <span class="built_in">this</span>.renderer.INIT_HEIGHT_RATE) {</span><br><span class="line">      <span class="built_in">this</span>.vy += <span class="built_in">this</span>.GRAVITY;</span><br><span class="line">      <span class="built_in">this</span>.isOut = <span class="literal">true</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">this</span>.isOut) {</span><br><span class="line">        <span class="built_in">this</span>.ay = <span class="built_in">this</span>.getRandomValue(-<span class="number">0.2</span>, -<span class="number">0.05</span>);</span><br><span class="line">      }</span><br><span class="line">      <span class="built_in">this</span>.isOut = <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">this</span>.isOut) {</span><br><span class="line">      <span class="built_in">this</span>.theta += <span class="built_in">Math</span>.PI / <span class="number">20</span>;</span><br><span class="line">      <span class="built_in">this</span>.theta %= <span class="built_in">Math</span>.PI * <span class="number">2</span>;</span><br><span class="line">      <span class="built_in">this</span>.phi += <span class="built_in">Math</span>.PI / <span class="number">30</span>;</span><br><span class="line">      <span class="built_in">this</span>.phi %= <span class="built_in">Math</span>.PI * <span class="number">2</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">this</span>.renderer.generateEpicenter(</span><br><span class="line">      <span class="built_in">this</span>.x + (<span class="built_in">this</span>.direction ? -<span class="number">1</span> : <span class="number">1</span>) * <span class="built_in">this</span>.renderer.THRESHOLD,</span><br><span class="line">      <span class="built_in">this</span>.y,</span><br><span class="line">      <span class="built_in">this</span>.y - <span class="built_in">this</span>.previousY</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      (<span class="built_in">this</span>.vx &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">this</span>.x &gt; <span class="built_in">this</span>.renderer.width + <span class="built_in">this</span>.renderer.THRESHOLD) ||</span><br><span class="line">      (<span class="built_in">this</span>.vx &lt; <span class="number">0</span> &amp;&amp; <span class="built_in">this</span>.x &lt; -<span class="built_in">this</span>.renderer.THRESHOLD)</span><br><span class="line">    ) {</span><br><span class="line">      <span class="built_in">this</span>.init();</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="keyword">function</span> (<span class="params">context</span>) </span>{</span><br><span class="line">    context.save();</span><br><span class="line">    context.translate(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y);</span><br><span class="line">    context.rotate(<span class="built_in">Math</span>.PI + <span class="built_in">Math</span>.atan2(<span class="built_in">this</span>.vy, <span class="built_in">this</span>.vx));</span><br><span class="line">    context.scale(<span class="number">1</span>, <span class="built_in">this</span>.direction ? <span class="number">1</span> : -<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    context.fillStyle = <span class="string">"hsl(180, 30%, 80%)"</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.moveTo(-<span class="number">30</span>, <span class="number">0</span>);</span><br><span class="line">    context.bezierCurveTo(-<span class="number">20</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">40</span>, <span class="number">0</span>);</span><br><span class="line">    context.bezierCurveTo(<span class="number">15</span>, -<span class="number">10</span>, -<span class="number">20</span>, -<span class="number">15</span>, -<span class="number">30</span>, <span class="number">0</span>);</span><br><span class="line">    context.fill();</span><br><span class="line"></span><br><span class="line">    context.save();</span><br><span class="line">    context.translate(<span class="number">40</span>, <span class="number">0</span>);</span><br><span class="line">    context.scale(<span class="number">0.9</span> + <span class="number">0.2</span> * <span class="built_in">Math</span>.sin(<span class="built_in">this</span>.theta), <span class="number">1</span>);</span><br><span class="line">    context.fillStyle = <span class="string">"hsl(180, 30%, 80%)"</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.moveTo(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    context.quadraticCurveTo(<span class="number">5</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">8</span>);</span><br><span class="line">    context.quadraticCurveTo(<span class="number">12</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">0</span>);</span><br><span class="line">    context.quadraticCurveTo(<span class="number">12</span>, -<span class="number">5</span>, <span class="number">20</span>, -<span class="number">8</span>);</span><br><span class="line">    context.quadraticCurveTo(<span class="number">5</span>, -<span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    context.fill();</span><br><span class="line">    context.restore();</span><br><span class="line"></span><br><span class="line">    context.save();</span><br><span class="line">    context.translate(-<span class="number">3</span>, <span class="number">0</span>);</span><br><span class="line">    context.rotate(<span class="built_in">Math</span>.PI / <span class="number">3</span> + (<span class="built_in">Math</span>.PI / <span class="number">10</span>) * <span class="built_in">Math</span>.sin(<span class="built_in">this</span>.phi));</span><br><span class="line">    context.fillStyle = <span class="string">"hsl(220, 80%, 40%)"</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.moveTo(-<span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    context.bezierCurveTo(-<span class="number">10</span>, -<span class="number">10</span>, -<span class="number">10</span>, -<span class="number">30</span>, <span class="number">0</span>, -<span class="number">40</span>);</span><br><span class="line">    context.bezierCurveTo(<span class="number">12</span>, -<span class="number">25</span>, <span class="number">8</span>, -<span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    context.closePath();</span><br><span class="line">    context.fill();</span><br><span class="line">    context.restore();</span><br><span class="line"></span><br><span class="line">    context.strokeStyle = <span class="string">"hsl(220, 80%, 40%)"</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.arc(-<span class="number">15</span>, -<span class="number">3</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">    context.stroke();</span><br><span class="line"></span><br><span class="line">    context.fillStyle = <span class="string">"hsl(220, 80%, 40%)"</span>;</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.arc(-<span class="number">15</span>, -<span class="number">3</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">    context.fill();</span><br><span class="line">    context.restore();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.controlStatus(context);</span><br><span class="line">  },</span><br><span class="line">};</span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">  RENDERER.init();</span><br><span class="line">});</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>主题配置文件的<code>bottom</code>中引入</p><blockquote><p>如果没有引入过<code>jquery</code>的话也需要引入一下</p></blockquote><p>其他参考：<a href="https://codepen.io/K-T/pen/qQZwzQ">flying fishes (codepen.io)</a></p><h1 id="鼠标光标"><a href="#鼠标光标" class="headerlink" title="鼠标光标"></a>鼠标光标</h1><p>美化鼠标光标，这个我在matery主题时简单弄过，后来看到Akilar大佬整理过，我用的如下</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*光标*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 全局默认鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-tag">html</span> {</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">'../coursor/guangbiao.ico'</span>), auto <span class="meta">!important</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 悬停图片时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">img</span> {</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">'../coursor/Comix_White_Link.cur'</span>), auto <span class="meta">!important</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 选择链接标签时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">'../coursor/Comix_White_Link.cur'</span>), auto;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 选中输入框时的鼠标指针 */</span></span><br><span class="line"><span class="comment">/* input:hover {</span></span><br><span class="line"><span class="comment">  cursor: url('../coursor/Comix_White_Text.cur'), auto;</span></span><br><span class="line"><span class="comment">} */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 悬停按钮时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">'../coursor/Comix_White_Link.cur'</span>), auto;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 悬停列表标签时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">i</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">'../coursor/Comix_White_Link.cur'</span>), auto;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 悬停页脚链接标签（例如页脚徽标）时的鼠标指针 */</span></span><br><span class="line"><span class="selector-id">#footer-wrap</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">'../coursor/Comix_White_Link.cur'</span>), auto;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 悬停页码时的鼠标指针 */</span></span><br><span class="line"><span class="selector-id">#pagination</span> <span class="selector-class">.page-number</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">'../coursor/Comix_White_Link.cur'</span>), auto;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 悬停菜单栏时的鼠标指针 */</span></span><br><span class="line"><span class="selector-id">#nav</span> <span class="selector-class">.site-page</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">'../coursor/Comix_White_Link.cur'</span>), auto;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h1><p>matery主题中自带了文章加密功能</p><p>这个虽然一般情况用不到，但有些供自己参考的试验性内容，还是有可能使用的</p><blockquote><p>注该文章加密后，代码块一键复制的效果将会没有</p></blockquote><ul><li>安装文章加密插件</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></tbody></table></figure><p>然后文章头部信息中加入<code>password</code>属性</p><p>如果对原版配置内容不满意，可以在主题配置文件中自定义</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">encrypt:</span><br><span class="line">  enable: true</span><br><span class="line">  default_abstract: 这是一篇加密文章，内容可能是个人试验内容水平有限暂不公开。如果你确实想看，请与我联系。</span><br><span class="line">  default_message: 输入密码，查看文章。</span><br></pre></td></tr></tbody></table></figure><blockquote><p>如果想特定的文章做特殊处理，可在文章头部信息中添加<code>abstract</code>来写提示内容</p></blockquote><h1 id="页面加载"><a href="#页面加载" class="headerlink" title="页面加载"></a>页面加载</h1><p>matery主题时参考过<a href="https://notes.zhangxiaocai.cn/posts/7496029d.html">Matery 添加加载动画 | 斯莫笔记 (zhangxiaocai.cn)</a></p><p>现在Butterfly主题参考的是<a href="https://akilar.top/posts/f99b208/">Akilarの糖果屋 - Akilar.top</a></p><h1 id="浮动动画"><a href="#浮动动画" class="headerlink" title="浮动动画"></a>浮动动画</h1><p>这个还是参考Akilar大佬的<a href="https://akilar.top/posts/abab51cf/">Akilarの糖果屋 - Akilar.top</a></p><p>大佬还是强啊，懂的多</p><h1 id="小冰插件包"><a href="#小冰插件包" class="headerlink" title="小冰插件包"></a>小冰插件包</h1><p>大佬的插件包：<a href="https://zfe.space/post/hexo-butterfly-orchid.html">小冰插件包 butterfly-orchid 1.0 | 小冰博客 (zfe.space)</a></p><p>有六个插件，可按需使用</p><h1 id="友链朋友圈"><a href="#友链朋友圈" class="headerlink" title="友链朋友圈"></a>友链朋友圈</h1><p>你还在为看这么多大佬的博客烦恼吗，那友链朋友圈就非常适合你了</p><p>该项目<a href="https://hexo-circle-of-friends-doc.vercel.app/#/">文档</a>及<a href="https://github.com/Rock-Candy-Tea/hexo-circle-of-friends">GitHub上的源码</a></p><p>页面效果参考<a href="https://226yzy.com/fcircle/index.html">https://226yzy.com/fcircle/index.html</a></p><p>不过这个流程较长，建议参考制作这个项目的大佬们的教程</p><p>比如小冰大佬的</p><p><a href="https://zfe.space/post/friend-link-circle.html">基于hexo的友链朋友圈 Beta1.5 | 小冰博客 (zfe.space)</a></p><blockquote><p>【2022-02-12记】最近大佬们的友链朋友圈项目有大版本更新，冰老师的方案似乎有受到影响，没法继续更新最新内容，前端方案目前推荐<a href="https://immmmm.com/">林木木</a>大佬的<a href="https://immmmm.com/hi-friends-circle/">f方案</a></p></blockquote><p>或者贰猹大佬的</p><p><a href="https://noionion.top/47095.html">友链朋友圈食用说明书 | 贰猹の小窝 (noionion.top)</a></p><blockquote><p>上面两篇参考的部署的API不同，前端页面效果也不同，按自己喜好取用</p></blockquote><p>另外matery主题的朋友也可以参考另一位大佬的教程</p><p><a href="https://hesifan.top/posts/21326.html">hexo-matery添加友链朋友圈 | FanHeart (hesifan.top)</a></p><h1 id="随机文章"><a href="#随机文章" class="headerlink" title="随机文章"></a>随机文章</h1><p>参考自<a href="https://guole.fun/posts/butterfly-custom/">标签: Butterfly美化 | Guo Le’s Blog</a></p><p>在博客根目录<code>/scripts</code>(没有请自行创建) 下新建 <code>random.js</code> 文件，通过路径<code>/random/</code>就会随机跳转一篇文章。</p><p><code>random.js</code> 内容如下</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.generator.register(<span class="string">'random'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">locals</span>) </span>{</span><br><span class="line">  <span class="keyword">const</span> config = hexo.config.random || {}</span><br><span class="line">  <span class="keyword">const</span> posts = []</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> post <span class="keyword">of</span> locals.posts.data) {</span><br><span class="line">    <span class="keyword">if</span> (post.random !== <span class="literal">false</span>) posts.push(post.path)</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> {</span><br><span class="line">    <span class="attr">path</span>: config.path || <span class="string">'random/index.html'</span>,</span><br><span class="line">    <span class="attr">data</span>: <span class="string">`&lt;html&gt;&lt;head&gt;&lt;script&gt;var posts=<span class="subst">${<span class="built_in">JSON</span>.stringify(posts)}</span>;window.open('/'+posts[Math.floor(Math.random() * posts.length)],"_self")&lt;/script&gt;&lt;/head&gt;&lt;/html&gt;`</span></span><br><span class="line">  }</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p>可以在博客配置文件<code>_config.yml</code>添加以下配置：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">random:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="comment"># 随机链接路径，默认"random/index.html"</span></span><br></pre></td></tr></tbody></table></figure><p>如果不想随机跳转到某篇文章，可以在这篇文章 md 文件头部，添加：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">random: false</span><br></pre></td></tr></tbody></table></figure><h1 id="星空和流星背景特效"><a href="#星空和流星背景特效" class="headerlink" title="星空和流星背景特效"></a>星空和流星背景特效</h1><p>暗夜模式下星空和流星背景特效</p><blockquote><p>采用大佬的方案<a href="https://blog.justlovesmile.top/posts/6a260bf6.html">Hexo博客 | 如何让你的博客拥有星空背景和流星特效 | Justlovesmile’s BLOG</a></p></blockquote><ul><li><p>插入Canvas标签<br>首先打开Butterfly主题配置文件<code>_config.yml</code>文件或者使用HTML直接插入，找到配置文件对应的inject部分，插入<code>&lt;canvas id="universe"&gt;&lt;/canvas&gt;</code></p></li><li><p>创建JS文件<br>在butterfly/source/js/创建一个universe.js文件，或者添加到自己的js文件中</p></li></ul><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dark</span>(<span class="params"></span>) </span>{<span class="built_in">window</span>.requestAnimationFrame=<span class="built_in">window</span>.requestAnimationFrame||<span class="built_in">window</span>.mozRequestAnimationFrame||<span class="built_in">window</span>.webkitRequestAnimationFrame||<span class="built_in">window</span>.msRequestAnimationFrame;<span class="keyword">var</span> n,e,i,h,t=<span class="number">.05</span>,s=<span class="built_in">document</span>.getElementById(<span class="string">"universe"</span>),o=!<span class="number">0</span>,a=<span class="string">"180,184,240"</span>,r=<span class="string">"226,225,142"</span>,d=<span class="string">"226,225,224"</span>,c=[];<span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>{n=<span class="built_in">window</span>.innerWidth,e=<span class="built_in">window</span>.innerHeight,i=<span class="number">.216</span>*n,s.setAttribute(<span class="string">"width"</span>,n),s.setAttribute(<span class="string">"height"</span>,e)}<span class="function"><span class="keyword">function</span> <span class="title">u</span>(<span class="params"></span>)</span>{h.clearRect(<span class="number">0</span>,<span class="number">0</span>,n,e);<span class="keyword">for</span>(<span class="keyword">var</span> t=c.length,i=<span class="number">0</span>;i&lt;t;i++){<span class="keyword">var</span> s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}<span class="function"><span class="keyword">function</span> <span class="title">y</span>(<span class="params"></span>)</span>{<span class="built_in">this</span>.reset=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{<span class="built_in">this</span>.giant=m(<span class="number">3</span>),<span class="built_in">this</span>.comet=!<span class="built_in">this</span>.giant&amp;&amp;!o&amp;&amp;m(<span class="number">10</span>),<span class="built_in">this</span>.x=l(<span class="number">0</span>,n-<span class="number">10</span>),<span class="built_in">this</span>.y=l(<span class="number">0</span>,e),<span class="built_in">this</span>.r=l(<span class="number">1.1</span>,<span class="number">2.6</span>),<span class="built_in">this</span>.dx=l(t,<span class="number">6</span>*t)+(<span class="built_in">this</span>.comet+<span class="number">1</span>-<span class="number">1</span>)*t*l(<span class="number">50</span>,<span class="number">120</span>)+<span class="number">2</span>*t,<span class="built_in">this</span>.dy=-l(t,<span class="number">6</span>*t)-(<span class="built_in">this</span>.comet+<span class="number">1</span>-<span class="number">1</span>)*t*l(<span class="number">50</span>,<span class="number">120</span>),<span class="built_in">this</span>.fadingOut=<span class="literal">null</span>,<span class="built_in">this</span>.fadingIn=!<span class="number">0</span>,<span class="built_in">this</span>.opacity=<span class="number">0</span>,<span class="built_in">this</span>.opacityTresh=l(<span class="number">.2</span>,<span class="number">1</span>-<span class="number">.4</span>*(<span class="built_in">this</span>.comet+<span class="number">1</span>-<span class="number">1</span>)),<span class="built_in">this</span>.do=l(<span class="number">5e-4</span>,<span class="number">.002</span>)+<span class="number">.001</span>*(<span class="built_in">this</span>.comet+<span class="number">1</span>-<span class="number">1</span>)},<span class="built_in">this</span>.fadeIn=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{<span class="built_in">this</span>.fadingIn&amp;&amp;(<span class="built_in">this</span>.fadingIn=!(<span class="built_in">this</span>.opacity&gt;<span class="built_in">this</span>.opacityTresh),<span class="built_in">this</span>.opacity+=<span class="built_in">this</span>.do)},<span class="built_in">this</span>.fadeOut=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{<span class="built_in">this</span>.fadingOut&amp;&amp;(<span class="built_in">this</span>.fadingOut=!(<span class="built_in">this</span>.opacity&lt;<span class="number">0</span>),<span class="built_in">this</span>.opacity-=<span class="built_in">this</span>.do/<span class="number">2</span>,(<span class="built_in">this</span>.x&gt;n||<span class="built_in">this</span>.y&lt;<span class="number">0</span>)&amp;&amp;(<span class="built_in">this</span>.fadingOut=!<span class="number">1</span>,<span class="built_in">this</span>.reset()))},<span class="built_in">this</span>.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{<span class="keyword">if</span>(h.beginPath(),<span class="built_in">this</span>.giant)h.fillStyle=<span class="string">"rgba("</span>+a+<span class="string">","</span>+<span class="built_in">this</span>.opacity+<span class="string">")"</span>,h.arc(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="number">2</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">1</span>);<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.comet){h.fillStyle=<span class="string">"rgba("</span>+d+<span class="string">","</span>+<span class="built_in">this</span>.opacity+<span class="string">")"</span>,h.arc(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="number">1.5</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">1</span>);<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;<span class="number">30</span>;t++)h.fillStyle=<span class="string">"rgba("</span>+d+<span class="string">","</span>+(<span class="built_in">this</span>.opacity-<span class="built_in">this</span>.opacity/<span class="number">20</span>*t)+<span class="string">")"</span>,h.rect(<span class="built_in">this</span>.x-<span class="built_in">this</span>.dx/<span class="number">4</span>*t,<span class="built_in">this</span>.y-<span class="built_in">this</span>.dy/<span class="number">4</span>*t-<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>),h.fill()}<span class="keyword">else</span> h.fillStyle=<span class="string">"rgba("</span>+r+<span class="string">","</span>+<span class="built_in">this</span>.opacity+<span class="string">")"</span>,h.rect(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="built_in">this</span>.r,<span class="built_in">this</span>.r);h.closePath(),h.fill()},<span class="built_in">this</span>.move=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{<span class="built_in">this</span>.x+=<span class="built_in">this</span>.dx,<span class="built_in">this</span>.y+=<span class="built_in">this</span>.dy,!<span class="number">1</span>===<span class="built_in">this</span>.fadingOut&amp;&amp;<span class="built_in">this</span>.reset(),(<span class="built_in">this</span>.x&gt;n-n/<span class="number">4</span>||<span class="built_in">this</span>.y&lt;<span class="number">0</span>)&amp;&amp;(<span class="built_in">this</span>.fadingOut=!<span class="number">0</span>)},<span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{o=!<span class="number">1</span>},<span class="number">50</span>)}<span class="function"><span class="keyword">function</span> <span class="title">m</span>(<span class="params">t</span>)</span>{<span class="keyword">return</span> <span class="built_in">Math</span>.floor(<span class="number">1e3</span>*<span class="built_in">Math</span>.random())+<span class="number">1</span>&lt;<span class="number">10</span>*t}<span class="function"><span class="keyword">function</span> <span class="title">l</span>(<span class="params">t,i</span>)</span>{<span class="keyword">return</span> <span class="built_in">Math</span>.random()*(i-t)+t}f(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,f,!<span class="number">1</span>),<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{h=s.getContext(<span class="string">"2d"</span>);<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;i;t++)c[t]=<span class="keyword">new</span> y,c[t].reset();u()}(),<span class="function"><span class="keyword">function</span> <span class="title">t</span>(<span class="params"></span>)</span>{<span class="built_in">document</span>.getElementsByTagName(<span class="string">'html'</span>)[<span class="number">0</span>].getAttribute(<span class="string">'data-theme'</span>)==<span class="string">'dark'</span>&amp;&amp;u(),<span class="built_in">window</span>.requestAnimationFrame(t)}()};</span><br><span class="line">dark()</span><br></pre></td></tr></tbody></table></figure><ul><li>CSS样式</li></ul><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 背景宇宙星光  */</span></span><br><span class="line"><span class="selector-id">#universe</span>{</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="引入阿里图标库的彩色图标"><a href="#引入阿里图标库的彩色图标" class="headerlink" title="引入阿里图标库的彩色图标"></a>引入阿里图标库的彩色图标</h1><p>首先要注意的是彩色图标一个项目最多40个，同时要在对应的项目设置中的字体格式勾选彩色</p><p>（如果在使用过程中发现图标加载不出，只有一个<code>/</code>样的东西，那有可能是对应的位置的CSS设置了字体加粗）</p><h1 id="封面节日挂件效果"><a href="#封面节日挂件效果" class="headerlink" title="封面节日挂件效果"></a>封面节日挂件效果</h1><p>参考自<a href="https://akilar.top/posts/23fdf850/">糖果屋微调合集 | Akilarの糖果屋</a></p><h1 id="归档页面时间轴添加十二生肖图标"><a href="#归档页面时间轴添加十二生肖图标" class="headerlink" title="归档页面时间轴添加十二生肖图标"></a>归档页面时间轴添加十二生肖图标</h1><p>参考自<a href="https://akilar.top/posts/22257072/">Archive Beautify | Akilarの糖果屋</a></p><h1 id="主页的分类磁贴"><a href="#主页的分类磁贴" class="headerlink" title="主页的分类磁贴"></a>主页的分类磁贴</h1><p>参考自<a href="https://akilar.top/posts/a9131002/">Akilarの糖果屋 - Akilar.top</a></p><h1 id="侧栏悬浮卡片控制按钮"><a href="#侧栏悬浮卡片控制按钮" class="headerlink" title="侧栏悬浮卡片控制按钮"></a>侧栏悬浮卡片控制按钮</h1><p>参考自<a href="https://akilar.top/posts/451ac5f8/">Butterfly主题美化日记 | Akilarの糖果屋</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android登录页面制作记录</title>
      <link href="/2022/010757003.html"/>
      <url>/2022/010757003.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>期末了，期末大作业也来了，本篇将记录我的登录页面制作。如有不完善或错误的地方，欢迎大佬指出Orz</p><blockquote><p>具体判断用户名与名匹配，因为各自情况不同，本篇不不涉及</p></blockquote><h1 id="UI布局"><a href="#UI布局" class="headerlink" title="UI布局"></a>UI布局</h1><h2 id="主体布局"><a href="#主体布局" class="headerlink" title="主体布局"></a>主体布局</h2><p>布局采用了线性布局，xml的代码如下（记录时）</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"登录"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"#1097DF"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"35dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">        &gt;</span><span class="tag">&lt;/<span class="name">TextView</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:drawableLeft</span>=<span class="string">"@drawable/yonghu"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"300dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/etuser"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">"请输入用户名"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/edittext_style"</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">EditText</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:drawableLeft</span>=<span class="string">"@drawable/mima"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"300dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/etpwd"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">"请输入密码"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">"textPassword"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:background</span>=<span class="string">"@drawable/edittext_style"</span></span></span><br><span class="line"><span class="tag">        &gt;</span><span class="tag">&lt;/<span class="name">EditText</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">CheckBox</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"300dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/checkbox"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"#2196F3"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"记住密码"</span></span></span><br><span class="line"><span class="tag">        &gt;</span><span class="tag">&lt;/<span class="name">CheckBox</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginRight</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"登录"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/Login_btn"</span></span></span><br><span class="line"><span class="tag">        &gt;</span><span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">"Back"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"退出"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/Back_btn"</span></span></span><br><span class="line"><span class="tag">        &gt;</span><span class="tag">&lt;/<span class="name">Button</span>&gt;</span><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>上面有用到两个图标资源（即<code>android:drawableLeft="@drawable/mima"</code>和<code>android:drawableLeft="@drawable/yonghu"</code>），本篇不提供，可以去<a href="https://www.iconfont.cn/">iconfont-阿里巴巴矢量图标库</a>挑选自己喜欢的图标</p></blockquote><h2 id="EditText样式修改"><a href="#EditText样式修改" class="headerlink" title="EditText样式修改"></a>EditText样式修改</h2><p>输入框我做了样式修改，请在<code>drawable</code>文件夹下新建xml文件<code>edittext_style</code>，其代码为</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#D5EDE9E9"</span>&gt;</span><span class="tag">&lt;/<span class="name">solid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"10dp"</span>&gt;</span><span class="tag">&lt;/<span class="name">corners</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>这部分样式修改主要是将<code>EditText</code>即可输入文本框的背景设为淡灰色，并设置圆角。</p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p>基本效果图如下</p><p><img src="C:\Users\Dell\Desktop\T7qj2j.png" alt="T7qj2j.png"></p><h1 id="其他文件"><a href="#其他文件" class="headerlink" title="其他文件"></a>其他文件</h1><p>为后续演示跳转，我们再新建一个简单的xml文件<code>index</code>，内容如下</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">"Hello World"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">TextView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>以及对应的java代码，新建一个java文件<code>Idex</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mylogindemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.index);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p><code>package com.example.mylogindemo;</code>根据自己的项目名，自行修改</p></blockquote><p>另外记得在文件夹maxifests下的<code>AndroidManifest</code>中添加（application标签内）</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".Index"</span>&gt;</span><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h1 id="JAVA代码"><a href="#JAVA代码" class="headerlink" title="JAVA代码"></a>JAVA代码</h1><p>该部分总览如下，具体可见我在代码中的注释</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mylogindemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.ActionBar;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.SharedPreferences;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.text.Editable;</span><br><span class="line"><span class="keyword">import</span> android.text.TextWatcher;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.CheckBox;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>{</span><br><span class="line">    EditText etuser,etpwd;</span><br><span class="line">    Button thelogin;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        etuser=findViewById(R.id.etuser);<span class="comment">//用户名输入框</span></span><br><span class="line">        etpwd=findViewById(R.id.etpwd);<span class="comment">//密码输入框</span></span><br><span class="line">        thelogin=findViewById(R.id.Login_btn);<span class="comment">//登录按钮</span></span><br><span class="line">        ActionBar bar=getSupportActionBar();</span><br><span class="line">        bar.setTitle(<span class="string">"登录演示"</span>);</span><br><span class="line">        View theview=getLayoutInflater().inflate(R.layout.activity_main,<span class="keyword">null</span>);</span><br><span class="line">        Read(theview);</span><br><span class="line">        <span class="comment">//登录按钮点击侦听</span></span><br><span class="line">        thelogin.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() {</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>{</span><br><span class="line">                Login(theview);</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">        <span class="comment">//用户名输入框或密码输入框为空时</span></span><br><span class="line">        <span class="keyword">if</span>(etpwd.getText().toString().length()==<span class="number">0</span>||etuser.getText().toString().length()==<span class="number">0</span>){</span><br><span class="line">            thelogin.setClickable(<span class="keyword">false</span>);<span class="comment">//设置按钮不可点击</span></span><br><span class="line">            thelogin.setBackgroundColor(Color.parseColor(<span class="string">"#abddff"</span>));<span class="comment">//按钮颜色换成偏淡一点的蓝色</span></span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//监听文本变化</span></span><br><span class="line">        TextWatcher textWatcher=<span class="keyword">new</span> TextWatcher() {</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeTextChanged</span><span class="params">(CharSequence charSequence, <span class="keyword">int</span> i, <span class="keyword">int</span> i1, <span class="keyword">int</span> i2)</span> </span>{</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTextChanged</span><span class="params">(CharSequence charSequence, <span class="keyword">int</span> i, <span class="keyword">int</span> i1, <span class="keyword">int</span> i2)</span> </span>{</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterTextChanged</span><span class="params">(Editable editable)</span> </span>{</span><br><span class="line">                <span class="keyword">if</span>(etpwd.getText().toString().length()==<span class="number">0</span>||etuser.getText().toString().length()==<span class="number">0</span>){</span><br><span class="line">                    thelogin.setClickable(<span class="keyword">false</span>);</span><br><span class="line">                    thelogin.setBackgroundColor(Color.parseColor(<span class="string">"#abddff"</span>));</span><br><span class="line">                }<span class="keyword">else</span>{</span><br><span class="line">                    thelogin.setClickable(<span class="keyword">true</span>);</span><br><span class="line">                    thelogin.setBackgroundColor(Color.parseColor(<span class="string">"#077AF4"</span>));</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        };</span><br><span class="line">        etpwd.addTextChangedListener(textWatcher);</span><br><span class="line">        etuser.addTextChangedListener(textWatcher);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//登录</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Login</span><span class="params">(View view)</span></span>{</span><br><span class="line">        String theuser =etuser.getText().toString();</span><br><span class="line">        String thepwd=etpwd.getText().toString();</span><br><span class="line">        CheckBox checkbox=findViewById(R.id.checkbox);</span><br><span class="line">        <span class="comment">//侦听复选框</span></span><br><span class="line">        checkbox.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() {</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>{</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">        Save(theuser,thepwd);</span><br><span class="line">        Intent it = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, Index.class);</span><br><span class="line">        startActivity(it);</span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"登录成功"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//存储用户名与密码</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Save</span><span class="params">(String username,String password)</span></span>{</span><br><span class="line">        SharedPreferences preferences=getSharedPreferences(<span class="string">"yzyDemo"</span>,MODE_PRIVATE);</span><br><span class="line">        SharedPreferences.Editor editor=preferences.edit();</span><br><span class="line">        editor.putString(<span class="string">"username"</span>,username);</span><br><span class="line">        editor.putString(<span class="string">"password"</span>,password);</span><br><span class="line">        editor.commit();</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//读取存储的用户名与密码</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Read</span><span class="params">(View view)</span></span>{</span><br><span class="line">        SharedPreferences preferences=getSharedPreferences(<span class="string">"yzyDemo"</span>,MODE_PRIVATE);</span><br><span class="line">        String user =preferences.getString(<span class="string">"username"</span>,<span class="string">""</span>); <span class="comment">//获取已保存的用户名和密码</span></span><br><span class="line">        String pass=preferences.getString(<span class="string">"password"</span>,<span class="string">""</span>);</span><br><span class="line">        etuser.setText(user);</span><br><span class="line">        etpwd.setText(pass);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//退出</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Back</span><span class="params">(View view)</span></span>{</span><br><span class="line">        finish();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 探索实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字体精简及其相关资源</title>
      <link href="/2021/122648049.html"/>
      <url>/2021/122648049.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>最近发现我用的字体文件很大，但又舍不得不用，所以想精简一下字体文件(精简后的文件仅供个人使用不对外传播)</p><p>本文顺便将用过的资源整理，以备未来不时之需。</p><p>（因为本文内容的原因，统计字数有点多，不是在水哈🤣）</p><h1 id="相关参考资源及工具参考"><a href="#相关参考资源及工具参考" class="headerlink" title="相关参考资源及工具参考"></a>相关参考资源及工具参考</h1><ul><li>在线工具及其相关</li></ul><p><a href="https://www.tun6.com/projects/font_subset//">字体文件精简_在线工具_Tun6</a></p><p><a href="https://github.com/fonttools/fonttools">fonttools/fonttools: A library to manipulate font files from Python. (github.com)</a></p><ul><li>在线查看字体文件及其相关</li></ul><p><a href="https://kekee000.github.io/fonteditor/">FontEditor (kekee000.github.io)</a></p><p><a href="https://github.com/ecomfe/fonteditor">ecomfe/fonteditor: 在线字体编辑器 (github.com)</a></p><ul><li>其他博客内容</li></ul><p><a href="https://www.jianshu.com/p/81f2b9a75182">如何精简字体包 - 简书 (jianshu.com)</a></p><p><a href="https://efe.baidu.com/blog/fontmin-getting-started/">Fontmin 快速指南 | EFE Tech (baidu.com)</a></p><p><a href="https://blog.csdn.net/yyzc2/article/details/102721040">(3条消息) 3500个常用汉字列表_开发者的博客-CSDN博客_3500个常用汉字表</a></p><p><a href="https://blog.csdn.net/Jason_yesly/article/details/84108420">(3条消息) 各类常用符号<em>一立方星空-CSDN博客</em>常用符号</a></p><p><a href="http://ecomfe.github.io/fontmin/en#feature">Fontmin - Solution Of Font Subsetting (ecomfe.github.io)</a></p><h1 id="ASCII可见字符"><a href="#ASCII可见字符" class="headerlink" title="ASCII可见字符"></a>ASCII可见字符</h1><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!"#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~</span><br></pre></td></tr></tbody></table></figure><h1 id="汉字"><a href="#汉字" class="headerlink" title="汉字"></a>汉字</h1><h2 id="常用标点符号"><a href="#常用标点符号" class="headerlink" title="常用标点符号"></a>常用标点符号</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">。？！，、；：“”‘’…（）《》〈〉【】.,:;!?-'_"'()[]&lt;&gt;|&amp;~;+-*/=</span><br></pre></td></tr></tbody></table></figure><h2 id="3500常用汉字"><a href="#3500常用汉字" class="headerlink" title="3500常用汉字"></a>3500常用汉字</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一乙二十丁厂七卜人入八九几儿了力乃刀又三于干亏士工土才寸下大丈与万上小口巾山千乞川亿个勺久凡及夕丸么广亡门义之尸弓己已子卫也女飞刃习叉马乡丰王井开夫天无元专云扎艺木五支厅不太犬区历尤友匹车巨牙屯比互切瓦止少日中冈贝内水见午牛手毛气升长仁什片仆化仇币仍仅斤爪反介父从今凶分乏公仓月氏勿欠风丹匀乌凤勾文六方火为斗忆订计户认心尺引丑巴孔队办以允予劝双书幻玉刊示末未击打巧正扑扒功扔去甘世古节本术可丙左厉右石布龙平灭轧东卡北占业旧帅归且旦目叶甲申叮电号田由史只央兄叼叫另叨叹四生失禾丘付仗代仙们仪白仔他斥瓜乎丛令用甩印乐句匆册犯外处冬鸟务包饥主市立闪兰半汁汇头汉宁穴它讨写让礼训必议讯记永司尼民出辽奶奴加召皮边发孕圣对台矛纠母幼丝式刑动扛寺吉扣考托老执巩圾扩扫地扬场耳共芒亚芝朽朴机权过臣再协西压厌在有百存而页匠夸夺灰达列死成夹轨邪划迈毕至此贞师尘尖劣光当早吐吓虫曲团同吊吃因吸吗屿帆岁回岂刚则肉网年朱先丢舌竹迁乔伟传乒乓休伍伏优伐延件任伤价份华仰仿伙伪自血向似后行舟全会杀合兆企众爷伞创肌朵杂危旬旨负各名多争色壮冲冰庄庆亦刘齐交次衣产决充妄闭问闯羊并关米灯州汗污江池汤忙兴宇守宅字安讲军许论农讽设访寻那迅尽导异孙阵阳收阶阴防奸如妇好她妈戏羽观欢买红纤级约纪驰巡寿弄麦形进戒吞远违运扶抚坛技坏扰拒找批扯址走抄坝贡攻赤折抓扮抢孝均抛投坟抗坑坊抖护壳志扭块声把报却劫芽花芹芬苍芳严芦劳克苏杆杠杜材村杏极李杨求更束豆两丽医辰励否还歼来连步坚旱盯呈时吴助县里呆园旷围呀吨足邮男困吵串员听吩吹呜吧吼别岗帐财针钉告我乱利秃秀私每兵估体何但伸作伯伶佣低你住位伴身皂佛近彻役返余希坐谷妥含邻岔肝肚肠龟免狂犹角删条卵岛迎饭饮系言冻状亩况床库疗应冷这序辛弃冶忘闲间闷判灶灿弟汪沙汽沃泛沟没沈沉怀忧快完宋宏牢究穷灾良证启评补初社识诉诊词译君灵即层尿尾迟局改张忌际陆阿陈阻附妙妖妨努忍劲鸡驱纯纱纳纲驳纵纷纸纹纺驴纽奉玩环武青责现表规抹拢拔拣担坦押抽拐拖拍者顶拆拥抵拘势抱垃拉拦拌幸招坡披拨择抬其取苦若茂苹苗英范直茄茎茅林枝杯柜析板松枪构杰述枕丧或画卧事刺枣雨卖矿码厕奔奇奋态欧垄妻轰顷转斩轮软到非叔肯齿些虎虏肾贤尚旺具果味昆国昌畅明易昂典固忠咐呼鸣咏呢岸岩帖罗帜岭凯败贩购图钓制知垂牧物乖刮秆和季委佳侍供使例版侄侦侧凭侨佩货依的迫质欣征往爬彼径所舍金命斧爸采受乳贪念贫肤肺肢肿胀朋股肥服胁周昏鱼兔狐忽狗备饰饱饲变京享店夜庙府底剂郊废净盲放刻育闸闹郑券卷单炒炊炕炎炉沫浅法泄河沾泪油泊沿泡注泻泳泥沸波泼泽治怖性怕怜怪学宝宗定宜审宙官空帘实试郎诗肩房诚衬衫视话诞询该详建肃录隶居届刷屈弦承孟孤陕降限妹姑姐姓始驾参艰线练组细驶织终驻驼绍经贯奏春帮珍玻毒型挂封持项垮挎城挠政赴赵挡挺括拴拾挑指垫挣挤拼挖按挥挪某甚革荐巷带草茧茶荒茫荡荣故胡南药标枯柄栋相查柏柳柱柿栏树要咸威歪研砖厘厚砌砍面耐耍牵残殃轻鸦皆背战点临览竖省削尝是盼眨哄显哑冒映星昨畏趴胃贵界虹虾蚁思蚂虽品咽骂哗咱响哈咬咳哪炭峡罚贱贴骨钞钟钢钥钩卸缸拜看矩怎牲选适秒香种秋科重复竿段便俩贷顺修保促侮俭俗俘信皇泉鬼侵追俊盾待律很须叙剑逃食盆胆胜胞胖脉勉狭狮独狡狱狠贸怨急饶蚀饺饼弯将奖哀亭亮度迹庭疮疯疫疤姿亲音帝施闻阀阁差养美姜叛送类迷前首逆总炼炸炮烂剃洁洪洒浇浊洞测洗活派洽染济洋洲浑浓津恒恢恰恼恨举觉宣室宫宪突穿窃客冠语扁袄祖神祝误诱说诵垦退既屋昼费陡眉孩除险院娃姥姨姻娇怒架贺盈勇怠柔垒绑绒结绕骄绘给络骆绝绞统耕耗艳泰珠班素蚕顽盏匪捞栽捕振载赶起盐捎捏埋捉捆捐损都哲逝捡换挽热恐壶挨耻耽恭莲莫荷获晋恶真框桂档桐株桥桃格校核样根索哥速逗栗配翅辱唇夏础破原套逐烈殊顾轿较顿毙致柴桌虑监紧党晒眠晓鸭晃晌晕蚊哨哭恩唤啊唉罢峰圆贼贿钱钳钻铁铃铅缺氧特牺造乘敌秤租积秧秩称秘透笔笑笋债借值倚倾倒倘俱倡候俯倍倦健臭射躬息徒徐舰舱般航途拿爹爱颂翁脆脂胸胳脏胶脑狸狼逢留皱饿恋桨浆衰高席准座脊症病疾疼疲效离唐资凉站剖竞部旁旅畜阅羞瓶拳粉料益兼烤烘烦烧烛烟递涛浙涝酒涉消浩海涂浴浮流润浪浸涨烫涌悟悄悔悦害宽家宵宴宾窄容宰案请朗诸读扇袜袖袍被祥课谁调冤谅谈谊剥恳展剧屑弱陵陶陷陪娱娘通能难预桑绢绣验继球理捧堵描域掩捷排掉堆推掀授教掏掠培接控探据掘职基著勒黄萌萝菌菜萄菊萍菠营械梦梢梅检梳梯桶救副票戚爽聋袭盛雪辅辆虚雀堂常匙晨睁眯眼悬野啦晚啄距跃略蛇累唱患唯崖崭崇圈铜铲银甜梨犁移笨笼笛符第敏做袋悠偿偶偷您售停偏假得衔盘船斜盒鸽悉欲彩领脚脖脸脱象够猜猪猎猫猛馅馆凑减毫麻痒痕廊康庸鹿盗章竟商族旋望率着盖粘粗粒断剪兽清添淋淹渠渐混渔淘液淡深婆梁渗情惜惭悼惧惕惊惨惯寇寄宿窑密谋谎祸谜逮敢屠弹随蛋隆隐婚婶颈绩绪续骑绳维绵绸绿琴斑替款堪搭塔越趁趋超提堤博揭喜插揪搜煮援裁搁搂搅握揉斯期欺联散惹葬葛董葡敬葱落朝辜葵棒棋植森椅椒棵棍棉棚棕惠惑逼厨厦硬确雁殖裂雄暂雅辈悲紫辉敞赏掌晴暑最量喷晶喇遇喊景践跌跑遗蛙蛛蜓喝喂喘喉幅帽赌赔黑铸铺链销锁锄锅锈锋锐短智毯鹅剩稍程稀税筐等筑策筛筒答筋筝傲傅牌堡集焦傍储奥街惩御循艇舒番释禽腊脾腔鲁猾猴然馋装蛮就痛童阔善羡普粪尊道曾焰港湖渣湿温渴滑湾渡游滋溉愤慌惰愧愉慨割寒富窜窝窗遍裕裤裙谢谣谦属屡强粥疏隔隙絮嫂登缎缓编骗缘瑞魂肆摄摸填搏塌鼓摆携搬摇搞塘摊蒜勤鹊蓝墓幕蓬蓄蒙蒸献禁楚想槐榆楼概赖酬感碍碑碎碰碗碌雷零雾雹输督龄鉴睛睡睬鄙愚暖盟歇暗照跨跳跪路跟遣蛾蜂嗓置罪罩错锡锣锤锦键锯矮辞稠愁筹签简毁舅鼠催傻像躲微愈遥腰腥腹腾腿触解酱痰廉新韵意粮数煎塑慈煤煌满漠源滤滥滔溪溜滚滨粱滩慎誉塞谨福群殿辟障嫌嫁叠缝缠静碧璃墙撇嘉摧截誓境摘摔聚蔽慕暮蔑模榴榜榨歌遭酷酿酸磁愿需弊裳颗嗽蜻蜡蝇蜘赚锹锻舞稳算箩管僚鼻魄貌膜膊膀鲜疑馒裹敲豪膏遮腐瘦辣竭端旗精歉熄熔漆漂漫滴演漏慢寨赛察蜜谱嫩翠熊凳骡缩慧撕撒趣趟撑播撞撤增聪鞋蕉蔬横槽樱橡飘醋醉震霉瞒题暴瞎影踢踏踩踪蝶蝴嘱墨镇靠稻黎稿稼箱箭篇僵躺僻德艘膝膛熟摩颜毅糊遵潜潮懂额慰劈操燕薯薪薄颠橘整融醒餐嘴蹄器赠默镜赞篮邀衡膨雕磨凝辨辩糖糕燃澡激懒壁避缴戴擦鞠藏霜霞瞧蹈螺穗繁辫赢糟糠燥臂翼骤鞭覆蹦镰翻鹰警攀蹲颤瓣爆疆壤耀躁嚼嚷籍魔灌蠢霸露囊罐匕刁丐歹戈夭仑讥冗邓艾夯凸卢叭叽皿凹囚矢乍尔冯玄邦迂邢芋芍吏夷吁吕吆屹廷迄臼仲伦伊肋旭匈凫妆亥汛讳讶讹讼诀弛阱驮驯纫玖玛韧抠扼汞扳抡坎坞抑拟抒芙芜苇芥芯芭杖杉巫杈甫匣轩卤肖吱吠呕呐吟呛吻吭邑囤吮岖牡佑佃伺囱肛肘甸狈鸠彤灸刨庇吝庐闰兑灼沐沛汰沥沦汹沧沪忱诅诈罕屁坠妓姊妒纬玫卦坷坯拓坪坤拄拧拂拙拇拗茉昔苛苫苟苞茁苔枉枢枚枫杭郁矾奈奄殴歧卓昙哎咕呵咙呻咒咆咖帕账贬贮氛秉岳侠侥侣侈卑刽刹肴觅忿瓮肮肪狞庞疟疙疚卒氓炬沽沮泣泞泌沼怔怯宠宛衩祈诡帚屉弧弥陋陌函姆虱叁绅驹绊绎契贰玷玲珊拭拷拱挟垢垛拯荆茸茬荚茵茴荞荠荤荧荔栈柑栅柠枷勃柬砂泵砚鸥轴韭虐昧盹咧昵昭盅勋哆咪哟幽钙钝钠钦钧钮毡氢秕俏俄俐侯徊衍胚胧胎狰饵峦奕咨飒闺闽籽娄烁炫洼柒涎洛恃恍恬恤宦诫诬祠诲屏屎逊陨姚娜蚤骇耘耙秦匿埂捂捍袁捌挫挚捣捅埃耿聂荸莽莱莉莹莺梆栖桦栓桅桩贾酌砸砰砾殉逞哮唠哺剔蚌蚜畔蚣蚪蚓哩圃鸯唁哼唆峭唧峻赂赃钾铆氨秫笆俺赁倔殷耸舀豺豹颁胯胰脐脓逛卿鸵鸳馁凌凄衷郭斋疹紊瓷羔烙浦涡涣涤涧涕涩悍悯窍诺诽袒谆祟恕娩骏琐麸琉琅措捺捶赦埠捻掐掂掖掷掸掺勘聊娶菱菲萎菩萤乾萧萨菇彬梗梧梭曹酝酗厢硅硕奢盔匾颅彪眶晤曼晦冕啡畦趾啃蛆蚯蛉蛀唬唾啤啥啸崎逻崔崩婴赊铐铛铝铡铣铭矫秸秽笙笤偎傀躯兜衅徘徙舶舷舵敛翎脯逸凰猖祭烹庶庵痊阎阐眷焊焕鸿涯淑淌淮淆渊淫淳淤淀涮涵惦悴惋寂窒谍谐裆袱祷谒谓谚尉堕隅婉颇绰绷综绽缀巢琳琢琼揍堰揩揽揖彭揣搀搓壹搔葫募蒋蒂韩棱椰焚椎棺榔椭粟棘酣酥硝硫颊雳翘凿棠晰鼎喳遏晾畴跋跛蛔蜒蛤鹃喻啼喧嵌赋赎赐锉锌甥掰氮氯黍筏牍粤逾腌腋腕猩猬惫敦痘痢痪竣翔奠遂焙滞湘渤渺溃溅湃愕惶寓窖窘雇谤犀隘媒媚婿缅缆缔缕骚瑟鹉瑰搪聘斟靴靶蓖蒿蒲蓉楔椿楷榄楞楣酪碘硼碉辐辑频睹睦瞄嗜嗦暇畸跷跺蜈蜗蜕蛹嗅嗡嗤署蜀幌锚锥锨锭锰稚颓筷魁衙腻腮腺鹏肄猿颖煞雏馍馏禀痹廓痴靖誊漓溢溯溶滓溺寞窥窟寝褂裸谬媳嫉缚缤剿赘熬赫蔫摹蔓蔗蔼熙蔚兢榛榕酵碟碴碱碳辕辖雌墅嘁踊蝉嘀幔镀舔熏箍箕箫舆僧孵瘩瘟彰粹漱漩漾慷寡寥谭褐褪隧嫡缨撵撩撮撬擒墩撰鞍蕊蕴樊樟橄敷豌醇磕磅碾憋嘶嘲嘹蝠蝎蝌蝗蝙嘿幢镊镐稽篓膘鲤鲫褒瘪瘤瘫凛澎潭潦澳潘澈澜澄憔懊憎翩褥谴鹤憨履嬉豫缭撼擂擅蕾薛薇擎翰噩橱橙瓢蟥霍霎辙冀踱蹂蟆螃螟噪鹦黔穆篡篷篙篱儒膳鲸瘾瘸糙燎濒憾懈窿缰壕藐檬檐檩檀礁磷了瞬瞳瞪曙蹋蟋蟀嚎赡镣魏簇儡徽爵朦臊鳄糜癌懦豁臀藕藤瞻嚣鳍癞瀑襟璧戳攒孽蘑藻鳖蹭蹬簸簿蟹靡癣羹鬓攘蠕巍鳞糯譬霹躏髓蘸镶瓤矗</span><br></pre></td></tr></tbody></table></figure><h2 id="二级字表（3000字）"><a href="#二级字表（3000字）" class="headerlink" title="二级字表（3000字）"></a>二级字表（3000字）</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">乂乜兀弋孑孓幺亓韦廿丏卅仄厄仃仉仂兮刈爻卞闩讣尹夬爿毋邗邛艽艿札叵匝丕匜劢卟叱叻仨仕仟仡仫仞卮氐犰刍邝邙汀讦讧讪讫尻阡尕弁驭匡耒玎玑邢圩圬圭扦圪圳圹扪圮圯芊芍芄芨芑芎芗亘厍夼戍尥乩旯曳岌屺凼囡钇缶氘氖牝伎伛伢佤仵伥伧伉伫囟氽汆刖夙旮刎犷犸舛凫邬汕汔汐汲汜汊忖忏讴讵祁讷聿艮厾阱阮阪丞妁牟纡纣纥纨_抟抔扽圻坂坍坞捑褴竞寇儡萝能栖擒绕d苌苁芩芪芡芟苄苎苡杌杓杞杈忑孛邴邳矶奁豕忒欤轫迓邶忐卣邺旰呋呒呓呔呖呃旸吡町虬呗吽吣吲帏歧岈岘岑岚兕囵囫钊钋钌迕氙氚牤佞邱攸佚佝佟佗伽彷佘佥孚豸坌肟邸奂劬狄狁鸠邹饨饩饪饫饬亨庑庋疔疖肓闱闳闵羌炀沣沅沔沤沌沏沚汩汨沂汾沨汴汶沆沩泐怃怄忡忤忾怅忻忪怆忭忸诂诃诅诋诌诏诒孜陇陀陂陉妍妩妪妣妊妗妫妞姒妤邵劭刭甬邰纭纰纴纶纾玮玡玭玠玢玥玦盂忝匦坩抨拤拈垆抻劼拃拊坼坻坨坭抿坳耶苷苯苤茏苫苜苴苒苘茌苻苓茚茆茑茓茔茕茀苕枥枇杪杳枧杵枨枞枋杻杷杼矸砀刳奄瓯殁郏轭郅鸢盱昊昙杲昃咂呸昕昀旻昉炅咔畀虮咀呷黾呱呤咚咆咛呶呣呦咝岢岿岬岫帙岣峁刿迥岷剀帔峄沓囹罔钍钎钏钒钕钗邾迮牦竺迤佶佬佰侑侉臾岱侗侃侏侩佻佾侪佼佯侬帛阜侔徂舠刽郄怂籴瓮戗肼䏝肽肱肫剁迩郇狙狎狍狒咎炙枭饯饴冽冼庖疠疝疡兖妾劾炜熰炖炘炝炔泔沭泷泸泱泅泗泠泺泖泫泮沱泯泓泾怙怵怦怛怏怍㤘怩怫怿宕穹宓诓诔诖诘戾诙戽郓衩祆祎祉祇祊诛诜诟诠诣诤诧诨诩戕孢亟陔妲妯姗帑弩孥驽虱迦迨绀绁绂驷驸绉绌驿骀甾珏珐珂珑玳珀顸珉珈拮垭挝垣挞垤赳贲垱垌挢郝垧垓挦垠茜荚荑贳荜莒茼茴茱莛荞茯荏荇荃荟荀茗荠茭茨垩荥荦荨荩剋荪茹荬柰栉柯柘栊柩枰栌柙枵柚枳柞柝栀柢栎枸柈柁枷柽剌酊郦甭砗砘砒斫砭砜奎耷虺殂殇殄殆轱轲轳轶轸虿毖觇尜哐眄眍𠳐郢眇眊眈禺哂咴曷昴昱昵咦哓哔畎毗呲胄畋畈虼虻盅咣哕剐郧咻囿咿哌哙哚咯咩咤哝哏哞峙峣罘帧峒峤峋峥贶钚钛钡钣钤钨钫钯氡氟牯郜秕秭竽笈笃俦俨俅俪叟垡牮俣俚皈俑俟逅徇徉舢俞郗俎郤爰郛瓴胨胪胛胂胙胍胗胝朐胫鸨匍狨狯飑狩狲訇逄昝饷饸饹胤孪娈弈奕庥疬疣疥疭庠竑彦飒闼闾闿阂羑迸籼酋炳炻炽炯烀炷烃洱洹洧洌浃浈洇洄洙涎洎洫浍洮洵浒浔浕洳恸恓恹恫恺恻恂恪恽宥扃衲衽衿袂祛祜祓祚诮祗祢诰诳鸩昶郡咫弭牁胥陛陟娅姮娆姝姣姘姹怼羿炱矜绔骁骅绗绛骈耖挈珥珙顼珰珩珧珣珞琤珲敖恚埔埕埘埙埚挹耆耄埒捋贽垸捃盍荸莆莳莴莪莠莓莜莅荼莩荽莸荻莘莎莞䓖莨鸪莼栲栳郴桓桡桎桢桤梃栝桕桁桧桅栟桉栩逑逋彧鬲豇酐逦厝孬砝砹砺砧砷砟砼砥砣剞砻轼轾辂鸫趸龀鸬虔逍眬唛晟眩眙哧哽唔晁晏鸮趵趿畛蚨蚜蚍蚋蚬蚝蚧唢圄唣唏盎唑崂崃罡罟峪觊赅钰钲钴钵钹钺钽钼钿铀铂铄铆铈铉铊铋铌铍铎氩氤氦毪舐秣秫盉笄笕笊笏笆俸倩俵偌俳俶倬倏恁倭倪俾倜隼隽倌倥臬皋郫倨衄颀徕舫釜奚衾胯胱胴胭脍胼朕脒胺鸱玺鸲狷猁狳猃狺逖桀袅饽凇栾挛亳疳疴疸疽痈疱痂痉衮凋颃恣旆旄旃阃阄訚阆恙粑朔郸烜烨烩烊剡郯烬涑浯涞涟娑涅涠浞涓浥涔浜浠浣浚悚悭悝悒悌悛宸窈剜诹冢诼袒袢祯诿谀谂谄谇屐屙陬勐奘牂蚩陲姬娠娌娉娲娩娴娣娓婀畚逡绠骊绡骋绥绦绨骎邕鸶彗耜焘舂琏琇麸揶埴埯捯掳掴埸埵赧埤捭逵埝堋堍掬鸷掖捽掊堉掸捩掮悫埭埽掇掼聃菁萁菘堇萘萋菽菖萜萸萑棻菔菟萏萃菏菹菪菅菀萦菰菡梵梿梏觋桴桷梓棁桫棂啬郾匮敕豉鄄酞酚戛硎硭硒硖硗硐硇硌鸸瓠匏厩龚殒殓殍赉雩辄堑眭眦啧晡晤眺眵眸圊喏喵啉勖晞唵晗冕啭畦趺啮跄蚶蛄蛎蛆蚰蛊圉蚱蛉蛏蚴啁啕唿啐唼唷啖啵啶啷唳啜帻崚崦帼崮崤崆赇赈赊铑铒铗铙铟铠铡铢铣铤铧铨铩铪铫铬铮铯铰铱铳铵铷氪牾鸹秾逶笺筇笸笪笮笠笥笤笳笾笞偾偃偕偈傀偬偻皑皎鸻徜舸舻舴舷龛翎脬脘脲匐猗猡猞猝斛猕馗馃馄鸾孰庹庾痔痍疵翊旌旎袤阇阈阉阊阋阍阏羟粝粕敝焐烯焓烽焖烷焗渍渚淇淅淞渎涿淖挲淠涸渑淦淝淬涪淙涫渌淄惬悻悱惝惘悸惆惚惇惮窕谌谏扈皲谑裆袷裉谒谔谕谖谗谙谛谝逯郿隈粜隍隗婧婊婕娼婢婵胬袈翌恿欸绫骐绮绯绱骒绲骓绶绺绻绾骖缁耠琫琵琶琪瑛琦琥琨靓琰琮琯琬琛琚辇鼋揳堞搽揸揠堙趄揖颉塄揿耋揄蛩蛰塆摒揆掾聒葑葚靰靸葳葺葸萼葆葩葶蒌萱戟葭楮棼椟棹椤棰赍椋椁椪棣椐鹁覃酤酢酡鹂厥殚殛雯雱辊辋椠辍辎斐睄睑睇睃戢喋嗒喃喱喹晷喈跖跗跞跚跎跏跆蛱蛲蛭蛳蛐蛔蛞蛴蛟蛘喁喟啾嗖喑嗟喽嗞喀喔喙嵘嵖崴遄詈嵎崽嵬嵛嵯嵝嵫幄嵋铻铼铿锃锂锆锇锉锏锑锒锔锕掣矬氰毳毽犊犄犋鹄犍嵇黍稃稂筚筵筌傣傈舄牍傥傧遑傩遁徨媭畲弑颌翕釉鹆舜貂腈腌腓腆腴腑腚腱鱿鲀鲂颍猢猹猥飓觞觚猱颎飧馇馊亵脔裒痣痨痦痞痤痫痧赓竦瓿啻颏鹇阑阒阕粞遒孳焯焜焙焱鹈湛渫湮湎湜渭湍湫溲湟溆湲湔湉渥湄滁愠惺愦惴愀愎愔喾寐谟扉裢裎裥祾祺谠幂谡谥谧遐孱弼巽骘媪媛婷巯翚皴婺骛缂缃缄彘缇缈缌缑缒缗飨耢瑚瑁瑜瑗瑄瑕遨骜韫髡塬鄢趔趑摅摁蜇搋搪搐搛搠摈彀搦搡蓁戡蓍鄞靳蓐蓦鹋蒽蓓蓖蓊蒯蓟蓑蒿蒺蓠蒟蒡蒹蒴蒗蓥颐楔楠楂楝楫楸椴槌楯皙榈槎榉楦楣楹椽裘剽甄酮酰酯酩蜃碛碓硼碉碚碇碜鹌辏龃龅訾粲虞睚嗪韪嗷嗉睨睢雎睥嘟嗑嗫嗬嗔嗝戥嗄煦暄遢暌跬跶跸跐跣跹跻蛸蜊蜍蜉蜣畹蛹嗣嗯嗥嗲嗳嗌嗨嗐嗤嗵罨嵊嵩嵴骰锗锛锜锝锞锟锢锨锩锭锱雉氲犏歃稞稗稔筠筢筮筲筱牒煲敫徭愆艄觎毹貊貅貉颔腠腩腼腭腧塍媵詹鲅鲆鲇鲈稣鲋鲐肄鹐飕觥遛馐鹑亶瘃痱痼痿瘐瘁瘆麂裔歆旒雍阖阗阙羧豢粳猷煳煜煨煅煊煸煺滟溱溘漭滢溥溧溽裟溻溷滗滫溴滏滃滦溏滂滓溟滪愫慑慄慊鲎骞窦窠窣裱褚裨裾裰禊谩谪媾嫫媲嫒嫔媸缙缜缛辔骝缟缡缢缣骟耥璈瑶瑭獒觏慝嫠韬叆髦摽墁撂摞撄翥踅摭墉墒榖轂綦蔫蔷靺靼鞅靿甍蔸蔟蔺戬蕖蔻蓿斡鹕蓼榛榧榻榫榭槔榱槁槟槠榷僰酽酶酹厮碡碴碣碲磋臧豨殡霆霁辕蜚裴翡龇龈睿睽嘞嘈嘌嘁嘎暧暝踌踉蜞蜥蜮蝈蜴蜱蜩蜷蜿螂蜢嘘嘡鹗嘣嘤嘚嗾嘧罴罱幔嶂幛赙罂骷骶鹘锲锴锶锷锸锵镁镂犒箐箦箧箍箸箬箅箪箔箜箢箓毓僖儆僳僭劁僮魃魆睾艋鄱膈膑鲑鲔鲚鲛鲟獐觫雒夤馑銮塾麽瘌瘊瘘瘙廖韶旖膂阚鄯鲞粼粽糁槊鹚熘熥潢漤漕滹漯漶潋潴漪漉漳漩澉潍慵搴窨寤綮谮褡褙褓褛褊谯谰谲暨屣鹛嫣嫱嫖嫦嫚嫘嫡鼐翟瞀鹜骠缥缦缧缨骢缪缫耦耧瑾璜璀璎璁璋璇奭髯髫撷撅赭撸鋆撙撺墀聩觐鞑蕙鞒蕈蕨蕤蕞蕺瞢蕃蕲赜槿樯槭樗樘樊槲醌醅靥魇餍磔磙霈辘龉龊觑瞌瞋瞑嘭噎噶颙暹噘踔踝踟踒踬踮踯踺踞蝽蝾蝻蝰蝮螋蝓蝣蝼噗嘬颚噍噢噙噜噌噔颛幞幡嶙嶝骺骼骸镊镉镌镍镏镒镓镔稷箴篑篁篌篆牖儋徵磐虢鹞膘滕鲠鲡鲢鲣鲥鲧鲩獗獠觯馓馔麾廛瘛瘼瘢瘠齑羯羰𥻗遴糌糍糅熜熵熠澍澌潸潦潲鋈潟潼潽潺憬憧寮窳谳褴褟褫谵熨屦嬉勰戮蝥缬缮缯骣畿耩耨耪璞璟靛璠璘聱螯髻髭髹擀熹甏擞縠磬颞蕻鞘颟薤薨檠薏薮薜薅樾橛橇樵檎橹樽樨橼墼橐翮醛醐醍醚磺磲赝飙殪霖霏霓錾辚臻遽氅瞟瞠瞰嚄嚆噤暾蹀踹踵踽蹉蹁螨蟒螈螅螭螠螟噱噬噫噻噼罹圜䦃镖镗镘镚镛镝镞镠氇氆憩穑篝篥篦篪篙盥劓翱魉魈徼歙膳膦膙鲮鲱鲲鲳鲴鲵鲷鲻獴獭獬邂鹧廨赟瘰廪瘿瘵瘴癃瘳斓麇麈嬴壅羲糗瞥甑燎燠燔燧濑濉潞澧澹澥澶濂褰寰窸褶禧嬖犟隰嬗颡缱缲缳璨璩璐璪螫擤壕觳罄擢薹鞡鞬薷薰藓藁檄檩懋醢翳礅磴鹩龋龌豳壑黻嚏嚅蹑蹒蹊蟥螬螵疃螳蟑嚓羁罽罾嶷黜黝髁髀镡镢镣镦镧镩镪镫罅黏簌篾篼簖簋鼢黛儡鹪鼾皤魍龠繇貘邈貔臌膻臆臃鲼鲽鳀鳃鳅鳇鳊螽燮鹫襄糜縻膺癍麋懑濡濮濞濠濯蹇謇邃襁檗擘孺隳嬷蟊鹬鍪鏊鳌鬈鬃瞽鞯鞨鞫鞧鞣藜藠藩醪蹙礓燹餮瞿曛颢曜躇蹚鹭蟛蟪蟠蟮鹮黠黟髅髂镬镭镯馥簟簪鼬雠艟鳎鳏鳐癞癔癜癖糨蹩鎏懵彝邋鬏攉攒鞲鞴藿蘧蘅麓醮醯酃霪霭霨黼嚯蹰蹶蹽蹼蹴蹾蹿蠖蠓蟾蠊黢髋髌镲籀籁齁魑艨鳓鳔鳕鳗鳙麒鏖羸㸆瀚瀣瀛襦谶襞骥缵瓒攘蘩蘖醴霰酆矍曦躅鼍巉黩黥黪镳镴黧纂璺鼯臜鳜鳝鳟獾孀骧瓘鼙醺礴颦曩鳢癫麝夔爝灏禳鐾羼蠡耱懿蘸鹳霾氍饕躐髑镵穰饔鬻鬟趱攫攥颧躜鼹癯麟蠲蠹躞衢鑫灞襻纛鬣攮囔馕戆爨齉</span><br></pre></td></tr></tbody></table></figure><h1 id="常用序号"><a href="#常用序号" class="headerlink" title="常用序号"></a>常用序号</h1><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳</span><br><span class="line"></span><br><span class="line">⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛</span><br><span class="line"></span><br><span class="line">⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇</span><br><span class="line"></span><br><span class="line">❶ ❷ ❸ ❹ ❺ ❻ ❼ ❽ ❾ ❿ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴</span><br><span class="line"></span><br><span class="line">Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ</span><br><span class="line"></span><br><span class="line">ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ</span><br><span class="line"></span><br><span class="line">⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵</span><br><span class="line"></span><br><span class="line">Ⅰ Ⅱ Ⅲ Ⅳ Ⅴ Ⅵ Ⅶ Ⅷ Ⅸ Ⅹ Ⅺ Ⅻ ⅰ ⅱ ⅲ ⅳ ⅴ ⅵ ⅶ ⅷ ⅸ ⅹ</span><br><span class="line"></span><br><span class="line">№ ㈠ ㈡ ㈢ ㈣ ㈤ ㈥ ㈦ ㈧ ㈨ ㈩</span><br><span class="line"></span><br><span class="line">零 壹 贰 叁 肆 伍 陆 柒 捌 玖 拾 佰 仟</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字体精简 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue工程项目构建</title>
      <link href="/2021/122227789.html"/>
      <url>/2021/122227789.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>创建一个Vue工程项目前，我们主要需要安装<code>node.js</code>、<code>vue-cli</code></p><h1 id="安装node-js和npm"><a href="#安装node-js和npm" class="headerlink" title="安装node.js和npm"></a>安装node.js和npm</h1><blockquote><p>简单的说 Node.js 就是运行在服务端的 JavaScript。</p><p>Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。</p><p>Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。</p><p>——引自菜鸟教程</p></blockquote><p>node.js官网下载<a href="https://nodejs.org/en/">Node.js (nodejs.org)</a></p><p>或者访问node.js中文网<a href="http://nodejs.cn/">Node.js 中文网 (nodejs.cn)</a></p><ul><li>通过cmd检查node.js安装是否成功</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></tbody></table></figure><p>如果出现版本号信息说明安装成功，例如出现<code>v16.13.0</code></p><blockquote><p>npm是javascript的包管理工具,是和Node.js一起发布的，只要安装了Node.js，npm也安装好了</p></blockquote><p>检查npm安装是否成功</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></tbody></table></figure><ul><li>使用npm安装包示例</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &lt;包名&gt; [参数]</span><br></pre></td></tr></tbody></table></figure><p><code>-g</code>表示全局安装</p><h1 id="淘宝npm-镜像-可选但推荐"><a href="#淘宝npm-镜像-可选但推荐" class="headerlink" title="淘宝npm 镜像(可选但推荐)"></a>淘宝npm 镜像(可选但推荐)</h1><p>由于国内直接使用 npm 的官方镜像比较慢，所以这里推荐使用淘宝npm镜像</p><p>安装命令如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install cnpm -g --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></tbody></table></figure><p>这样你以后就可以将<code>npm</code>替换成<code>cnpm</code>以加快下载速度</p><blockquote><p>下文将同时提供npm和cnpm的命令，请自行按需复制</p></blockquote><h1 id="全局安装vue和vue-cli"><a href="#全局安装vue和vue-cli" class="headerlink" title="全局安装vue和vue-cli"></a>全局安装vue和vue-cli</h1><ul><li>安装vue</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install vue -g</span><br><span class="line"></span><br><span class="line">cnpm install vue -g</span><br></pre></td></tr></tbody></table></figure><ul><li>安装vue-cli</li></ul><blockquote><p>vue-cli是vue官方出品的快速构建单页应用的脚手架</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-cli -g</span><br><span class="line"></span><br><span class="line">cnpm install vue-cli -g</span><br></pre></td></tr></tbody></table></figure><h1 id="创建前端工程项目"><a href="#创建前端工程项目" class="headerlink" title="创建前端工程项目"></a>创建前端工程项目</h1><p>按以下顺序操作</p><ul><li><p>新建项目文件夹</p></li><li><p>用cd命令切换进入该文件夹</p></li><li><p>输入命令</p></li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack &lt;项目名&gt;</span><br></pre></td></tr></tbody></table></figure><ul><li>根据提示输入配置信息</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">项目名（自定义）</span><br><span class="line">项目描述（自定义）</span><br><span class="line">作者（自定义）</span><br><span class="line">Vue build方式选择(回车即可)</span><br><span class="line">是否安装vue-router（选yes）</span><br><span class="line">ESLint预设置方式选择（选no）</span><br><span class="line">是否安装单元测试模块（选no）</span><br><span class="line">是否安装e2e测试（选no）</span><br><span class="line">选择项目运行方式（选npm）</span><br></pre></td></tr></tbody></table></figure><h1 id="运行前端工程项目"><a href="#运行前端工程项目" class="headerlink" title="运行前端工程项目"></a>运行前端工程项目</h1><p>按步骤进行</p><ul><li><p>进入项目文件夹</p></li><li><p>安装项目所需要的依赖包</p></li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line"></span><br><span class="line">cnpm install</span><br></pre></td></tr></tbody></table></figure><ul><li>运行vue项目</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br><span class="line"></span><br><span class="line">cnpm run dev</span><br></pre></td></tr></tbody></table></figure><blockquote><p>此时注意不要关闭命令窗口</p></blockquote><p>输入命令窗口提示的网址</p><p>一般为</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080</span><br></pre></td></tr></tbody></table></figure><h1 id="vue工程项目结构"><a href="#vue工程项目结构" class="headerlink" title="vue工程项目结构"></a>vue工程项目结构</h1><h2 id="主要目录"><a href="#主要目录" class="headerlink" title="主要目录"></a>主要目录</h2><ul><li><p>根目录：存放index.html及项目配置文件</p></li><li><p>src:源代码文件（.vue、.js等）</p></li><li><p>components： 存放组件文件</p></li><li><p>static：存放所用图片、js、css等资源</p></li><li><p>build：编译配置文件</p></li><li><p>config：webpack配置文件</p></li><li><p>node_modules：存放下载的webpack模板包</p></li></ul><h2 id="主要文件"><a href="#主要文件" class="headerlink" title="主要文件"></a>主要文件</h2><ul><li><p>App.vue和main.js入口文件，相当于挂载点和Vue实例代码</p></li><li><p>router.js：路由配置</p></li></ul><h2 id="重要命令"><a href="#重要命令" class="headerlink" title="重要命令"></a>重要命令</h2><ul><li>组件导入</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import 组件名 from '组件地址‘</span><br><span class="line">或</span><br><span class="line">import ‘路径及文件名</span><br></pre></td></tr></tbody></table></figure><ul><li>组件导出</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export  {组件名}或default {</span><br><span class="line">相关定于或代码</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将项目上传至GitHub</title>
      <link href="/2021/122151725.html"/>
      <url>/2021/122151725.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>前段时间我将自己做的2040小游戏从本地上传至了GitHub上，本篇将记录上传过程与方法</p><p>我的2048小游戏GitHub仓库链接<a href="https://github.com/226YZY/my2048game">226YZY/my2048game: 我的简易2048小游戏 (github.com)</a></p><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote><h1 id="创建repository-仓库"><a href="#创建repository-仓库" class="headerlink" title="创建repository(仓库)"></a>创建repository(仓库)</h1><p>如果不是纯小白，那么大概率GitHub的账号应该还是有的吧😂</p><p>那么接下来，创建一个未来放代码的地方，在你的GitHub主页上找到<code>repository</code>，然后点击，然后如下图，点击<code>New</code>按钮。</p><p><img src="https://s4.ax1x.com/2021/12/21/TK4Lgs.png" alt="GitHub新建仓库"></p><blockquote><p>如果不在这个页面，可以点击你右上角头像，在弹出的菜单中选择<code>Your profile</code></p></blockquote><p><img src="https://s4.ax1x.com/2021/12/21/TKI6ld.png" alt="GitHub切换主页概述页面"></p><p>点击<code>New</code>之后，在<code>Repository name</code>写入你的项目名，项目名输入成后，最下面的<code>Create repository</code>按钮变深绿，说明可以创建了，点击即可。</p><p><img src="https://s4.ax1x.com/2021/12/21/TKT0Re.png" alt="TKT0Re.png"></p><p>创建成后如下图所示</p><p><img src="https://s4.ax1x.com/2021/12/21/TKHn9U.png" alt="创建成功"></p><blockquote><p>GitHub提示了命令，但要执行这些命令，你需要在本地安装Git并且给GitHub配置密钥，所以上面的提示的命令留到后续步骤完成再执行。</p></blockquote><h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><p>官方下载地址：<a href="https://link.zhihu.com/?target=http%3A//git-scm.com/download/">http://git-scm.com/download/</a> 根据你自己的系统 下载对应版本。</p><blockquote><p>除了安装目录可以改到C盘以外，其它的基本默认即可</p></blockquote><h1 id="配置SSH密钥"><a href="#配置SSH密钥" class="headerlink" title="配置SSH密钥"></a>配置SSH密钥</h1><h2 id="本地生成SSH密钥"><a href="#本地生成SSH密钥" class="headerlink" title="本地生成SSH密钥"></a>本地生成SSH密钥</h2><p>我们需要本地的SSH密钥，操作命令如下<code>（注意信息替换成你自己的）</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "你要设置的名字"</span><br><span class="line">git config --global user.email "你要设置的邮箱"</span><br><span class="line">ssh-keygen -t rsa -C "你刚刚设置的邮箱"</span><br></pre></td></tr></tbody></table></figure><p>生成的文件位置在<code>C:\Users\（你的用户名)\.ssh</code></p><p>在这个目录下有一个<code>id_rsa.pub</code>这就是我们后面要用的SSH公钥，打开，复制里面的内容，后面有用</p><p><img src="https://s4.ax1x.com/2021/12/18/TAwBWt.png" alt="SSH公钥文件位置"></p><blockquote><p>上面的<code>id_rsa</code>为私钥，注意千万不要外泄</p></blockquote><h2 id="GitHub-账号配置SSH公钥"><a href="#GitHub-账号配置SSH公钥" class="headerlink" title="GitHub 账号配置SSH公钥"></a>GitHub 账号配置SSH公钥</h2><p>还是点击右上角头像 ，跳出的菜单中点击<code>Settings</code>,然后左侧栏点击<code>SSH and GPG keys</code>，再找到<code>New SSH key</code>按钮，点击即可新建SSH key</p><p><img src="https://s4.ax1x.com/2021/12/21/TMeXt0.png" alt="GitHub账户SSH key配置"></p><p>然后新出来的页面中的key输入框中输入前面复制的<code>id_rsa.pub</code>文件的内容</p><p><img src="https://s4.ax1x.com/2021/12/21/TMurlT.png" alt="GitHub账户添加SSH key"></p><p>至此SSH密钥部分完成</p><h1 id="上传本地项目"><a href="#上传本地项目" class="headerlink" title="上传本地项目"></a>上传本地项目</h1><p>现在可以对本地项目进行操作了</p><p>命令总览如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init //把这个目录变成Git可以管理的仓库</span><br><span class="line">git add . //将项目的所有文件添加到仓库中('.'可以换成具体的目录)</span><br><span class="line">git commit -m "注释语句"  //文件提交到仓库(注释语句可以自己写对这次提交的描述)</span><br><span class="line">git remote add origin git@github.com:226YZY/text.git //关联远程仓库('text'换成你自己的项目名)</span><br><span class="line">git push -u origin master //把本地库的所有内容推送到远程库上</span><br></pre></td></tr></tbody></table></figure><h2 id="本地仓库"><a href="#本地仓库" class="headerlink" title="本地仓库"></a>本地仓库</h2><ul><li>将项目所在目录变成Git可以管理的仓库</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></tbody></table></figure><blockquote><p>这条命令执行后，会产生一个<code>.git</code>文件，该文件不要随意修改,因为该文件是用于跟踪管理版本库的</p></blockquote><ul><li>将项目的所有文件添加到仓库中</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></tbody></table></figure><ul><li>把文件提交到仓库</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m "注释语句"</span><br></pre></td></tr></tbody></table></figure><h2 id="关联github仓库"><a href="#关联github仓库" class="headerlink" title="关联github仓库"></a>关联github仓库</h2><ul><li>关联远程仓库(‘text’换成你自己的项目名)</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:226YZY/text.git</span><br></pre></td></tr></tbody></table></figure><ul><li>把本地库的所有内容推送到远程库上</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></tbody></table></figure><p>头一次应该还需要输入一次<code>yes</code></p><h2 id="查看是否上传成功"><a href="#查看是否上传成功" class="headerlink" title="查看是否上传成功"></a>查看是否上传成功</h2><p>至此，可以去GitHub上查看对应的库是否将项目成功上传</p><p>希望各位成功吼😆</p><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 探索实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客部署至服务器</title>
      <link href="/2021/121818354.html"/>
      <url>/2021/121818354.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前想给自己折腾出一个个人博客网站的时候，除了域名，还在阿里云买了一个一年的轻量级应用服务器。由于当时想让这个博客长期存在，并且也了解到了Hexo+GitHub的方案，所以我手头的两个域名（226yzy.top和226yzy.com），前者解析到了服务器上，后者我留给了GitHub，用于自定义域名（226yzy.com这个域名本来备案了，这样一搞，由于没解析到阿里云的服务器，阿里云的备案接入也就停止了，这个域名备案无了😭😭😭）。</p><p>不过服务器那边我就放了一个简单的网页或者一些资料，基本上还是属于闲置的状态。最近又苦于网站访问速度过于龟速，于是想着不妨尝试学习一下将Hexo博客部署到服务器。（这样如果我之后真的忍不下去这龟速访问速度，那就将226yzy.com这个域名重新备案解析到服务器上😝）</p><p>然后，我在网上寻找解决方案的时候，找到了黑石大佬写的博客<a href="https://www.heson10.com/posts/51315.html">Hexo 部署至云服务器（宝塔面板） - 黑石博客 - Hexo博客 (heson10.com)</a>，正好我的服务器上也很早就装了宝塔面板。不过，黑石大佬的这篇博客2020年12月18日的可能有点过时，文中所给的路径有些不合适（宝塔现在好像不允许网站的根目录设置在/var文件下” ）</p><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote><p>更好的阅读体验欢迎访问原文<a href="https://226yzy.com/2021/121818354.html">原文</a></p><h1 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h1><p>首先你肯定要有服务器啦，然后Hexo也应该在本地弄好。</p><p>写这篇的时候发现黑石大佬也参考了这篇博客<a href="https://hjxlog.com/posts/20191130a1.html#1-前言">将Hexo部署到阿里云轻量服务器（保姆级教程） | HJX’s Site (hjxlog.com)</a>,里面部署Hexo的流程都挺详细的</p><p>服务器的话<code>宝塔面板</code>是个好东西，方便明了。</p><p>由于太早之前就在服务器上装好宝塔面板了，一下也忘了具体流程。可以参考网上其它教程博客，应该还是挺多的。以及宝塔官网<a href="https://www.bt.cn/">https://www.bt.cn/</a></p><p>啊，对了还有本地Git也要装一下，Git官网<a href="https://git-scm.com/">https://git-scm.com/</a></p><h1 id="配置SSH密钥"><a href="#配置SSH密钥" class="headerlink" title="配置SSH密钥"></a>配置SSH密钥</h1><p>我们需要本地的SSH密钥，操作命令如下<code>（注意信息替换成你自己的）</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "你要设置的名字"</span><br><span class="line">git config --global user.email "你要设置的邮箱"</span><br><span class="line">ssh-keygen -t rsa -C "你刚刚设置的邮箱"</span><br></pre></td></tr></tbody></table></figure><blockquote><p>如果你在GitHubs上，或者Coding、Gitee等上面成功部署过，那么应该已经有弄过这个了</p></blockquote><p>生成的文件位置在<code>C:\Users\（你的用户名)\.ssh</code></p><p>在这个目录下有一个<code>id_rsa.pub</code>这就是我们后面要用的SSH公钥</p><p><img src="https://s4.ax1x.com/2021/12/18/TAwBWt.png" alt="SSH公钥文件位置"></p><blockquote><p>上面的<code>id_rsa</code>为私钥，注意千万不要外泄</p></blockquote><h1 id="服务器终端操作"><a href="#服务器终端操作" class="headerlink" title="服务器终端操作"></a>服务器终端操作</h1><p>现在开始在服务器上操作了，由于我安装了宝塔面板，所以就根据所以后面会基于宝塔面板记录</p><h2 id="打开终端与切换root用户"><a href="#打开终端与切换root用户" class="headerlink" title="打开终端与切换root用户"></a>打开终端与切换root用户</h2><p>在登入宝塔面板后，打开终端</p><p><img src="https://s4.ax1x.com/2021/12/18/TA08ts.png" alt="宝塔面板终端位置"></p><p>然后切换root用户</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su root</span><br></pre></td></tr></tbody></table></figure><p>切成功切换root用户后，会类似如下</p><p><img src="https://s4.ax1x.com/2021/12/18/TABEbF.png" alt="成功切换root用户"></p><p>下文中切换<code>git</code>用户后，root会变成git</p><blockquote><p>不过我的宝塔貌似一打开终端就是root用户🤣</p></blockquote><h2 id="安装Git并创建git-账户"><a href="#安装Git并创建git-账户" class="headerlink" title="安装Git并创建git 账户"></a>安装Git并创建git 账户</h2><ul><li>首先我们要在服务器上安装Git</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></tbody></table></figure><ul><li>然后是创建 git 账户并赋予权限</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br></pre></td></tr></tbody></table></figure><ul><li>赋予git账户权限</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 740 /etc/sudoers</span><br></pre></td></tr></tbody></table></figure><ul><li>编辑 <code>/etc/sudoers</code> 文件</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sudoers</span><br></pre></td></tr></tbody></table></figure><ul><li>按<code>i</code>键进入编辑模式，找到<code>root ALL=(ALL) ALL</code>，在其下方加入：</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git     ALL=(ALL)      ALL</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2021/12/18/TADao4.png" alt="erc/sudoers文件添加"></p><p>也就是添加在我蓝色标注的位置加上</p><p>输入完成后按<code>esc</code>，再输入<code>:wq</code>，保存退出。</p><ul><li>更变<code>/etc/sudoers</code>文件权限</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 400 /etc/sudoers</span><br></pre></td></tr></tbody></table></figure><ul><li>设置 git 账户密码</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd git</span><br></pre></td></tr></tbody></table></figure><blockquote><p>输入密码，输入的时候是看不到任何显示的，输完回车即可。</p><p>linux下输入密码是不显示*的</p></blockquote><p>密码设置成功后如下，蓝色划线提示</p><p><img src="https://s4.ax1x.com/2021/12/18/TADwFJ.png" alt="密码设置成功"></p><ul><li>切换至 <code>git 用户</code>，创建 <code>~/.ssh</code> 文件夹和 <code>~/.ssh/authorized_keys</code> 文件</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br><span class="line">mkdir ~/.ssh</span><br><span class="line">vim ~/.ssh/authorized_keys</span><br></pre></td></tr></tbody></table></figure><p>同样<code>i</code>进入编辑模式，把之前本地win10中生成的<code>id_rsa.pub</code>文件中的公钥复制进去，按<code>esc</code>后，输入<code>:wq</code>保存。</p><p>接着，更改权限：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 /home/git/.ssh/authorized_keys</span><br><span class="line">chmod 700 /home/git/.ssh</span><br></pre></td></tr></tbody></table></figure><ul><li><p>本地测试：</p><p>在电脑本地桌面，右键”Git Bash Here”，输入以下命令，执行输入yes后无报错说明配置成功了。</p></li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v git@服务器ip地址或域名</span><br></pre></td></tr></tbody></table></figure><h1 id="服务器创建Git仓库"><a href="#服务器创建Git仓库" class="headerlink" title="服务器创建Git仓库"></a>服务器创建Git仓库</h1><ul><li>切换到root账户</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su root</span><br></pre></td></tr></tbody></table></figure><ul><li>创建仓库目录<br>在var目录下创建repo作为Git仓库目录并添加权限，输入：</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/repo</span><br><span class="line">chown -R git:git /var/repo</span><br><span class="line">chmod -R 755 /var/repo</span><br></pre></td></tr></tbody></table></figure><ul><li>创建网根目录</li></ul><blockquote><p>注意这里就跟黑石大佬给的路径不一样了，黑石大佬给的路径现在宝塔面板好像不允许了😆</p><p>例如我是<code>/www/wwwroot/blog.226yzy.top</code>，如果是看黑石大佬的博客过来的，可以尝试将黑石大佬给的路径<code>/var/hexo</code>都改成<code>/www/wwwroot/hexo</code>,当然这个<code>hexo</code>你也可以改成别的。</p><p>下文我就以<code>/www/wwwroot/hexo</code>的路径来记录操作</p></blockquote><p>创建 hexo 目录作为网站根目录</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /www/wwwroot/hexo</span><br><span class="line">chown -R git:git /www/wwwroot/hexo</span><br><span class="line">chmod -R 755 /www/wwwroot/hexo</span><br></pre></td></tr></tbody></table></figure><ul><li>创建一个空白的 git 仓库</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /var/repo</span><br><span class="line">git init --bare hexo.git</span><br></pre></td></tr></tbody></table></figure><ul><li>编辑一个 Git 钩子</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /var/repo/hexo.git/hooks/post-receive</span><br></pre></td></tr></tbody></table></figure><p>按<code>i</code>进入编辑模式，添加下面的代码，按<code>esc</code>输入<code>:wq</code> 保存</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">git --work-tree=/www/wwwroot/hexo --git-dir=/var/repo/hexo.git checkout -f</span><br></pre></td></tr></tbody></table></figure><ul><li>更改权限</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R git:git /var/repo/hexo.git/hooks/post-receive</span><br><span class="line">chmod +x /var/repo/hexo.git/hooks/post-receive</span><br></pre></td></tr></tbody></table></figure><h1 id="宝塔网站配置"><a href="#宝塔网站配置" class="headerlink" title="宝塔网站配置"></a>宝塔网站配置</h1><p>接下来就是配置网站域名了</p><p>先点网站，然后点击添加站点</p><p>域名添你自己要添的（当然是你自己有的域名）</p><blockquote><p>添加的域名记得后续在DNS配置一下解析</p></blockquote><p>根目录就填<code>/www/wwwroot/hexo</code>（或者你自己改的目录）</p><p>其他FTP、数据库、PHP版本啥的，视你自己的需求而定，可以不用，默认即可</p><p>示例如图：</p><p><img src="https://s4.ax1x.com/2021/12/18/TEV5cV.png" alt="宝塔网站配置"></p><p>弄好后，那个SSL证书也可以弄一下，宝塔好像有免费的😆，能<code>https</code>总比http更好更安全</p><h1 id="Hexo三连"><a href="#Hexo三连" class="headerlink" title="Hexo三连"></a>Hexo三连</h1><p>最后就是Hexo的一键三连了😊</p><p>在本地博客文件根目录下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d </span><br></pre></td></tr></tbody></table></figure><blockquote><p><del>可惜，这个每次上传好像要输入一次你前面设的密码，我也还在寻找方法如何本地免密上传</del></p><p>2021.12.29记</p><p>每次上传需要输入密码的问题已解决，详情见下文</p></blockquote><p>上传成功后，如果可以正常访问你设的域名就大功告成啦✌✌✌</p><h1 id="解决每次上传需要输入密码的问题"><a href="#解决每次上传需要输入密码的问题" class="headerlink" title="解决每次上传需要输入密码的问题"></a>解决每次上传需要输入密码的问题</h1><p>2021.12.29，我打开阿里云服务器的工作台，点击远程链接后，我看到了密钥管理，我突然意识到了问题出哪</p><h2 id="重新配置密钥"><a href="#重新配置密钥" class="headerlink" title="重新配置密钥"></a>重新配置密钥</h2><p>如果你以前在阿里云服务器工作台上上传过与现在不一样的密钥(我本地确实换过一次密钥)，那请更新一下这个密钥，上文中的操作貌似对这个不起作用</p><p><img src="https://s4.ax1x.com/2021/12/29/TgfunS.png" alt="密钥管理"></p><h2 id="配置密钥后上传失败"><a href="#配置密钥后上传失败" class="headerlink" title="配置密钥后上传失败"></a>配置密钥后上传失败</h2><p>类似于下图</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBhtK.png" alt="报错"></p><p>还好，我以前上传Coding上的时候也出现过这样的问题</p><p>解决方法可见我的另一篇<a href="https://226yzy.com/2021/112156639.html">对于Git出现git@e.coding.net:(publickey).问题的解决 | 星空下的YZY (226yzy.com)</a></p><blockquote><p>注意把我那文章中提到的<code>*.coding.net</code>替换成你自己服务器的IP地址吼😆</p></blockquote><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://hjxlog.com/posts/20191130a1.html#1-%E5%89%8D%E8%A8%80">https://hjxlog.com/posts/20191130a1.html#1-%E5%89%8D%E8%A8%80</a></p><p><a href="https://www.heson10.com/posts/51315.html">https://www.heson10.com/posts/51315.html</a></p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>暂时就上面这些吧</p><p>欢迎访问我的小破站<a href="https://www.226yzy.com/">https://www.226yzy.com/</a> 或者GitHub版镜像<a href="https://226yzy.github.io/">https://226yzy.github.io/</a> 或Gitee版镜像 <a href="https://yzy226.gitee.io/">https://yzy226.gitee.io/</a></p><p>我的Github[226YZY (星空下的YZY) (github.com)</p><blockquote><p>【转载说明】本文优先发布于我的个人博客<a href="https://www.226yzy.com">www.226yzy.com</a> ，转载请注明出处并注明作者：星空下的YZY。</p><p>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>许可协议。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 软件UI界面基础</title>
      <link href="/2021/12157757.html"/>
      <url>/2021/12157757.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本篇主要为Android 软件UI界面基础</p><h1 id="常用控件"><a href="#常用控件" class="headerlink" title="常用控件"></a>常用控件</h1><p>Android提供了很多UI控件来帮助开发者开发应用程序，本节记录其中部分，比如TextView、EditText、Button、ImageView</p><h2 id="所有View共有的属性"><a href="#所有View共有的属性" class="headerlink" title="所有View共有的属性"></a>所有View共有的属性</h2><div class="table-container"><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td><strong>android:layout_width</strong>=”wrap_content”</td><td>宽度</td></tr><tr><td><strong>android:layout_height</strong>=”wrap_content”</td><td>高度</td></tr><tr><td><strong>android:gravity</strong>=”center”</td><td>内容的对齐方式</td></tr><tr><td><strong>android:layout_gravity</strong>=”center”</td><td>自己在相对父容器中的对齐方式</td></tr><tr><td><strong>android:layout_margin</strong>=”5dp”</td><td>边距：边线和外部容器的距离</td></tr><tr><td><strong>android:padding</strong>=”5dp”</td><td>空白：内容距边线的距离</td></tr></tbody></table></div><h3 id="高度与宽度值"><a href="#高度与宽度值" class="headerlink" title="高度与宽度值"></a>高度与宽度值</h3><div class="table-container"><table><thead><tr><th style="text-align:left">值</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left"><strong>wrap_content</strong></td><td style="text-align:left">根据内容大小定</td></tr><tr><td style="text-align:left"><strong>match_parent</strong></td><td style="text-align:left">撑满父容器</td></tr><tr><td style="text-align:left">10dp</td><td style="text-align:left">固定大小</td></tr></tbody></table></div><h3 id="gravity-layout-gravity-常用值"><a href="#gravity-layout-gravity-常用值" class="headerlink" title="gravity /  layout_gravity 常用值"></a>gravity /  layout_gravity 常用值</h3><div class="table-container"><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>bottom</td><td>下</td></tr><tr><td><strong>center</strong></td><td>中间</td></tr><tr><td>center_horizontal</td><td>横向中间</td></tr><tr><td>center_vertical</td><td>纵向中间</td></tr><tr><td>left</td><td>左</td></tr><tr><td>right</td><td>右</td></tr><tr><td>top</td><td>上</td></tr></tbody></table></div><h2 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a>TextView</h2><p><code>TextView</code>主要用于不可编辑的文字显示</p><ul><li><p>android:text  文字内容</p></li><li><p>android:textColor  字体颜色：颜色值表示法</p></li><li><p>android:background  背景色：可用颜色、图片</p></li><li><p>android:textSize   字体大小：大小的单位，sp,dp,px</p></li></ul><h2 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a>EditText</h2><p><code>EditText</code>继承自<code>TextView</code>，<code>EditText</code>最大的特点就是可以输入和修改文字的内容，是与用户交互的重要控件</p><ul><li>android:hint   该属性是给用户一个提示，在<code>EditText</code>中输入内容后，含有内容的情况下它将不会显示</li><li>android:textColorHint 设置提示文本属性</li><li>android:inputType  限制输入类型，具体参数可参考菜鸟教程<a href="https://www.runoob.com/w3cnote/android-tutorial-edittext.html">2.3.2 EditText(输入框)详解 | 菜鸟教程 (runoob.com)</a></li></ul><p>其它属性同样可以参考菜鸟教程的内容</p><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><p><code>Button</code>同样继承自<code>TextView</code>，拥有<code>TextView</code>所有的属性，主要用来监听用户的点击交互</p><ul><li>android:onClick   设置点击事件</li></ul><p>更多属性可参考<a href="https://www.runoob.com/w3cnote/android-tutorial-button-imagebutton.html">2.3.3 Button(按钮)与ImageButton(图像按钮) | 菜鸟教程 (runoob.com)</a></p><h2 id="ImageView"><a href="#ImageView" class="headerlink" title="ImageView"></a>ImageView</h2><p><code>ImageView</code>主要用于展示图片资源</p><ul><li>android:adjustViewBounds：设置ImageView是否调整自己的边界来保持所显示图片的长宽比。</li><li>android:maxHeight：设置ImageView的最大高度。</li><li>android:maxWidth：设置ImageView的最大宽度。</li><li>android:scaleType：设置所显示的图片如何缩放或移动以适应ImageView的大小。</li><li>android:src：设置ImageView所显示的Drawable对象的ID。</li></ul><h3 id="scaleType属性"><a href="#scaleType属性" class="headerlink" title="scaleType属性"></a>scaleType属性</h3><ul><li>matrix：使用matrix方式进行缩放。</li><li>fitXY：横向、纵向独立缩放，以适应该ImageView。</li><li>fitStart:保持纵横比缩放图片，并且将图片放在ImageView的左上角。</li><li>fitCenter：保持纵横比缩放图片，缩放完成后将图片放在ImageView的中央。</li><li>fitEnd：保持纵横比缩放图片，缩放完成后将图片放在ImageView的右下角。</li><li>center：把图片放在ImageView的中央，但是不进行任何缩放。</li><li>centerCrop：保持纵横比缩放图片，以使图片能完全覆盖ImageView。</li><li>centerInside：保持纵横比缩放图片，以使得ImageView能完全显示该图片。</li></ul><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"第二课安卓程序初探"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">"fitXY"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"200dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"200dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">"@drawable/avatar"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Hello World"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"星空下的YZY"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"欢迎访问我的博客"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"100dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">"Back"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"返回"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h1 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h1><p>Android中有六大布局,分别是: LinearLayout(线性布局)，RelativeLayout(相对布局)，TableLayout(表格布局) FrameLayout(帧布局)，AbsoluteLayout(绝对布局)，GridLayout(网格布局)。本节主要记录LinearLayout(线性布局)和RelativeLayout(相对布局)</p><h2 id="LinearLayout-线性布局"><a href="#LinearLayout-线性布局" class="headerlink" title="LinearLayout :线性布局"></a>LinearLayout :线性布局</h2><h3 id="orientation-方向"><a href="#orientation-方向" class="headerlink" title="orientation: 方向"></a>orientation: 方向</h3><ul><li><p>Horizontal：水平方向</p></li><li><p>Vertical：竖向</p></li></ul><h3 id="layout-weight属性"><a href="#layout-weight属性" class="headerlink" title="layout_weight属性"></a>layout_weight属性</h3><p>作用：父容器的剩余宽度（或高度），按容器中各子view所定义的layout_weight进行加权平均分配。</p><p>剩余宽度=父容器总宽度-所有子view的宽度和</p><h2 id="RelativeLayout-相对布局"><a href="#RelativeLayout-相对布局" class="headerlink" title="RelativeLayout:相对布局"></a>RelativeLayout:相对布局</h2><h3 id="相对布局特有属性"><a href="#相对布局特有属性" class="headerlink" title="相对布局特有属性"></a>相对布局特有属性</h3><ul><li>相对于容器的位置：</li></ul><p>​    居中：水平居中、垂直居中、容器居中</p><p>​    对齐：左对齐、右对齐、上对齐、下对齐</p><ul><li>相对于其它同级别子View的位置:</li></ul><p>​    对齐：左对齐、右对齐、上对齐、下对齐</p><p>​    从哪里开始：在上面、下面、左边、右边</p><blockquote><p><code>注</code>：相对布局容器内的子View的位置，在各子View中定义属性</p></blockquote><h3 id="相对于容器位置"><a href="#相对于容器位置" class="headerlink" title="相对于容器位置"></a>相对于容器位置</h3><ul><li>android:layout_alignParentLeft  相对于父靠左</li><li>android:layout_alignParentTop 相对于父靠上</li><li>android:layout_alignParentRight 相对于父靠右</li><li>android:layout_alignParentBottom 相对于父靠下</li><li>android:layout_centerInParent=”true” 相对于父既垂直又水平居中(中间位置)</li><li>android:layout_centerHorzontal=”true” 相对于父水平居中</li><li>android:layout_centerVertical=”true” 相对于父垂直居中</li></ul><h3 id="相对于同级子View位置"><a href="#相对于同级子View位置" class="headerlink" title="相对于同级子View位置"></a>相对于同级子View位置</h3><ul><li>android:layout_above 位于参考组件之上</li><li>android:layout_below 位于参考组件之下</li><li>android:layout_toLeftOf 位于参考组件左边</li><li>android:layout_toRight 位于参考组件右边</li><li>android:layout_alignLeft 对齐参考组件的左边界</li><li>android:layout alignRight 对齐参考组件的右边界</li><li>android:llayout_alignTop 对齐参考组件的上边界</li><li>android:layout_alignBottom 对齐参考组件的下边界</li></ul><h2 id="更多布局"><a href="#更多布局" class="headerlink" title="更多布局"></a>更多布局</h2><p>更多布局参考<a href="https://www.runoob.com/w3cnote/android-tutorial-intro.html">1.0 Android基础入门教程 | 菜鸟教程 (runoob.com)</a></p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><h2 id="在线资源"><a href="#在线资源" class="headerlink" title="在线资源"></a>在线资源</h2><p><a href="https://www.w3cschool.cn/uawnhh/">Android基础入门教程_w3cschool</a></p><p><a href="https://www.runoob.com/w3cnote/android-tutorial-intro.html">1.0 Android基础入门教程 | 菜鸟教程 (runoob.com)</a></p><p><a href="https://www.cnblogs.com/plokmju/p/android__ImageView.html">Android—UI之ImageView - 承香墨影 - 博客园 (cnblogs.com)</a></p><h2 id="参考书籍"><a href="#参考书籍" class="headerlink" title="参考书籍"></a>参考书籍</h2><p><code>安卓软件开发实践 / 周世凯，陈小龙，周国辉主编 . -哈尔滨：东北林业大学出版社，2020.8</code></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>参考了<code>林逢升</code>老师在超星上的资料</p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 基础 </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 触发器</title>
      <link href="/2021/121130800.html"/>
      <url>/2021/121130800.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本篇为我个人学习MySQL时的资料整理笔记</p><p>主要参考了<code>李福翠</code>老师在超星上的资料以及上课内容</p><p>还有有<code>MySQL5.7从零开始学：视频教学版 / 王英英，李小威编著. -北京：清华大学出版社，2018</code>这本书，以及网上其他博客(具体见文末参考文献)</p><h1 id="触发器简介"><a href="#触发器简介" class="headerlink" title="触发器简介"></a>触发器简介</h1><p>触发器(trigger)是一个特殊的存储过程，不同的是，执行存储过程要使用<code>call</code>语句来调用，而触发器不需要，并且需要手动启动。触发器主要用于监视某个表的insert、update以及delete等更新操作，这些操作可以分别激活该表的insert、update或者delete类型的触发程序运行，从而实现数据的自动维护。</p><h1 id="创建触发器"><a href="#创建触发器" class="headerlink" title="创建触发器"></a>创建触发器</h1><h2 id="创建触发器基础语法"><a href="#创建触发器基础语法" class="headerlink" title="创建触发器基础语法"></a>创建触发器基础语法</h2><p>使用<code>create trigger</code>语句可以创建一个触发器，</p><blockquote><p>这里就直接用多执行语句的语法了</p></blockquote><p>语法格式如下:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">delimiter //</span><br><span class="line"></span><br><span class="line">create trigger 触发器名 触发时间 触发事件</span><br><span class="line"> on 表名 for each row</span><br><span class="line">begin</span><br><span class="line">触发程序</span><br><span class="line">end</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">delimiter ;</span><br></pre></td></tr></tbody></table></figure><h2 id="触发时间"><a href="#触发时间" class="headerlink" title="触发时间"></a>触发时间</h2><p>触发器的触发时间有两种：<code>before</code>与<code>after</code>。</p><ul><li><p><code>before</code>表示在触发事件发生之前执行触发程序。</p></li><li><p><code>after</code>表示在触发事件发生之后执行触发器。</p></li></ul><h2 id="触发事件"><a href="#触发事件" class="headerlink" title="触发事件"></a>触发事件</h2><p><strong>MySQL的触发事件有三种：</strong></p><ul><li><p><code>insert</code>：将新记录插入表时激活触发程序，例如通过insert、load data和replace语句，可以激活触发程序运行。</p></li><li><p><code>update</code>：更改某一行记录时激活触发程序，例如通过update语句，可以激活触发程序运行。</p></li><li><p><code>delete</code>：从表中删除某一行记录时激活触发程序，例如通过delete和replace语句，可以激活触发程序运行。</p></li></ul><blockquote><p>LOAD DATA 语句用于将一个文件装入到一个数据表中，相当与一系列的 INSERT 操作。</p><p>REPLACE 语句一般来说和 INSERT 语句很像，只是在表中有 primary key 或 unique 索引时，如果插入的数据和原来 primary key 或 unique 索引一致时，会先删除原来的数据，然后增加一条新数据，也就是说，一条 REPLACE 语句有时候等价于一条。INSERT 语句，有时候等价于一条 DELETE 语句加上一条 INSERT 语句。<br>————————————————<br>版权声明：本文为CSDN博主「Jack小强」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/yjqyyjw/article/details/68943641">https://blog.csdn.net/yjqyyjw/article/details/68943641</a></p></blockquote><h2 id="六类触发器"><a href="#六类触发器" class="headerlink" title="六类触发器"></a>六类触发器</h2><ul><li><code>BEFORE INSERT</code> - 在将数据插入表格之前激活。</li><li><code>AFTER INSERT</code> - 将数据插入表格后激活。</li><li><code>BEFORE UPDATE</code> - 在更新表中的数据之前激活。</li><li><code>AFTER UPDATE</code> - 更新表中的数据后激活。</li><li><code>BEFORE DELETE</code> - 在从表中删除数据之前激活。</li><li><code>AFTER DELETE</code> - 从表中删除数据后激活。</li></ul><h2 id="for-each-row"><a href="#for-each-row" class="headerlink" title="for each row"></a>for each row</h2><p><code>for each row</code>表示行级触发器。</p><p>目前MySQL仅支持行级触发器，不支持语句级别（又叫做表级触发器）的触发器（例如create table等语句）。for each row表示更新（insert、update或者delete）操作影响的每一条记录都会执行一次触发程序。</p><h2 id="old关键字与new关键字"><a href="#old关键字与new关键字" class="headerlink" title="old关键字与new关键字"></a>old关键字与new关键字</h2><ul><li>old关键字</li></ul><p>当从表中删除某条旧记录时，在触发程序中可以使用<code>old</code>关键字表示旧记录，当需要访问旧记录的某个字段值时，可以使用<code>old.字段名</code>的方式访问。</p><ul><li>new关键字</li></ul><p>当向表插入新记录时，在触发程序中可以使用<code>new</code>关键字表示新记录，当需要访问新记录的某个字段值时，可以使用<code>new.字段名</code>的方式访问。</p><blockquote><p>在 INSERT 型触发器中，NEW 用来表示将要（BEFORE）或已经（AFTER）插入的新数据；<br>在 UPDATE 型触发器中，OLD 用来表示将要或已经被修改的原数据，NEW 用来表示将要或已经修改为的新数据；<br>在 DELETE 型触发器中，OLD 用来表示将要或已经被删除的原数据；</p><p><code>注意</code>：OLD 是只读的，而 NEW 则可以在触发器中使用 SET 赋值，这样不会再次触发触发器，造成循环调用（如每插入一个学生前，都在其学号前加“2013”）。<br>————————————————<br>版权声明：本文为CSDN博主「Jack小强」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/yjqyyjw/article/details/68943641">https://blog.csdn.net/yjqyyjw/article/details/68943641</a></p></blockquote><h1 id="查看触发器"><a href="#查看触发器" class="headerlink" title="查看触发器"></a>查看触发器</h1><p>这里介绍查看触发器的三种方法</p><h3 id="通过show-triggers语句"><a href="#通过show-triggers语句" class="headerlink" title="通过show triggers语句"></a>通过<code>show triggers</code>语句</h3><p>可以使用<code>show triggers</code>语句查看触发器信息</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show triggers;</span><br></pre></td></tr></tbody></table></figure><p>上面的命令，执行后看到的东西会相对比较混乱，可以在<code>show trigger</code>后面加上<code>\G</code>,这样可以使显示的信息比较工整有条理。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show triggers \G</span><br></pre></td></tr></tbody></table></figure><h3 id="查询information-schema数据库"><a href="#查询information-schema数据库" class="headerlink" title="查询information_schema数据库"></a>查询<code>information_schema</code>数据库</h3><p>MySQL中所有触发器的定义都存放在<code>information_schema</code>数据库下的triggers表中，查询<code>triggers</code>表，可以查看所有数据库中所有触发器的详细信息，查询语句如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from information_schema.triggers \G</span><br></pre></td></tr></tbody></table></figure><h3 id="使用show-create-trigger命令"><a href="#使用show-create-trigger命令" class="headerlink" title="使用show create trigger命令"></a>使用<code>show create trigger</code>命令</h3><p>例如查看触发器organization_delete_before_trigger的定义。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create trigger organization_delete_before_trigger \G</span><br></pre></td></tr></tbody></table></figure><h1 id="删除触发器"><a href="#删除触发器" class="headerlink" title="删除触发器"></a>删除触发器</h1><p>可以使用<code>drop trigger</code>语句将该触发器删除</p><p>语法格式如下:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop trigger 触发器名</span><br></pre></td></tr></tbody></table></figure><h1 id="修改触发器"><a href="#修改触发器" class="headerlink" title="修改触发器"></a>修改触发器</h1><p>要修改触发器，必须先将其删除，然后使用新代码重新创建。</p><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><blockquote><p>该部分引用了<code>李福翠</code>老师在超星上发布的课程资料</p></blockquote><h2 id="实践所用数据"><a href="#实践所用数据" class="headerlink" title="实践所用数据"></a>实践所用数据</h2><ul><li>建立数据库</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Create Database Student2 default character set utf8 default COLLATE utf8_bin;</span><br></pre></td></tr></tbody></table></figure><ul><li>使用当前数据库</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Use Student2;</span><br></pre></td></tr></tbody></table></figure><ul><li>建表</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Create Table Student(</span><br><span class="line">SNo char(20) primary key,</span><br><span class="line">SName char(20) ,</span><br><span class="line">SSex char(4)  default '男',</span><br><span class="line">Sage int</span><br><span class="line">) ENGINE=InnoDB;</span><br></pre></td></tr></tbody></table></figure><p>在已存在的学生表student中增加一个sdept（系）的新的属性列；</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">alter table Student add Dept char(20);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Create Table Course(</span><br><span class="line">CNo char(20) primary key,</span><br><span class="line">CName char(20) NOT NULL,</span><br><span class="line">CRedit float</span><br><span class="line">) ENGINE=InnoDB;</span><br><span class="line"></span><br><span class="line">Create Table SC(</span><br><span class="line">SNo char(20) NOT NULL,</span><br><span class="line">CNo char(20) NOT NULL,</span><br><span class="line">Grade float,</span><br><span class="line">Primary Key(SNo, CNo),</span><br><span class="line">Foreign Key(SNo) References Student(SNo) On Delete Cascade,</span><br><span class="line">Foreign Key(CNo) References Course(CNo)</span><br><span class="line">) ENGINE=InnoDB;</span><br></pre></td></tr></tbody></table></figure><ul><li>插入数据</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#学生表student的数据</span><br><span class="line">Insert Into Student Values('991201', '张三', '男', 22, '计算机科学与技术系');</span><br><span class="line">Insert Into Student Values('991202', '李四', '男', 21, '信息科学系');</span><br><span class="line">Insert Into Student Values('991101', '王五', '男', 23, '数理系');</span><br><span class="line">Insert Into Student Values('991102', '陈六', '男', 19, '计算机科学与技术系');</span><br><span class="line">Insert Into Student Values('991103', '吴七', '女', 24, '数理系');</span><br><span class="line">Insert Into Student Values('000101', '刘八', '女', 22, '信息科学系');</span><br><span class="line"></span><br><span class="line">#课程表course的数据</span><br><span class="line">Insert Into Course Values('1', '数学', 5);</span><br><span class="line">Insert Into Course Values('2', '数据结构', 4);</span><br><span class="line">Insert Into Course Values('3', '程序设计', 2);</span><br><span class="line">Insert Into Course Values('4', '数据库原理', 3);</span><br><span class="line">Insert Into Course Values('5', '操作系统', 3);</span><br><span class="line"></span><br><span class="line">#选课表SC的数据：</span><br><span class="line">Insert Into SC Values('991201', '1', 90);</span><br><span class="line">Insert Into SC Values('991201', '5', 80);</span><br><span class="line">Insert Into SC Values('991201', '3', 85);</span><br><span class="line">Insert Into SC Values('991201', '4', 90);</span><br><span class="line">Insert Into SC Values('991102', '1', 85);</span><br><span class="line">Insert Into SC Values('991102', '2', 98);</span><br><span class="line">Insert Into SC Values('000101', '2', 91);</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>1.对<code>student</code>表创建<code>delete</code>触发器，当删除某个学生记录时，同时在选课表<code>SC</code>中删除该学生的选课记录。</p><p>参考：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">select * from student ; </span><br><span class="line">select * from sc ; </span><br><span class="line"></span><br><span class="line">delimiter //</span><br><span class="line">create trigger t1 AFTER  delete  on student </span><br><span class="line">FOR EACH ROW   </span><br><span class="line"> BEGIN</span><br><span class="line">      Delete from  SC  WHERE sno = old.sno;</span><br><span class="line">END</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">delimiter ;</span><br><span class="line">delete from student where  SNo='000101';</span><br><span class="line">select * from student ; </span><br><span class="line">select * from sc ; </span><br></pre></td></tr></tbody></table></figure><p>2.在<code>student</code>表上定义了一个<code>update</code>触发程序，用于检查更新<code>sage</code>时将使用的新值，小于16时取得16,大于40时取40，并更改值。触发器创建成功后，将<code>student</code>表中的<code>SNO</code>值为<strong>991103的学生年龄修改为2</strong>。</p><p>参考：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">delimiter //</span><br><span class="line">create trigger upd_check before  update  on student </span><br><span class="line">   FOR EACH ROW </span><br><span class="line">    begin</span><br><span class="line">         if   new.sage&lt;16 then</span><br><span class="line">           set new.sage=16;</span><br><span class="line">        elseif  new.sage&gt;60 then</span><br><span class="line">           set new.sage=40;</span><br><span class="line">         end if;</span><br><span class="line">end;</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">delimiter ;</span><br><span class="line">select * from student; </span><br><span class="line">  update  student set sage=5 where sno='991103';</span><br><span class="line">  select * from student ;</span><br></pre></td></tr></tbody></table></figure><p>3.在<code>student</code>表上定义了一个<code>insert</code>触发程序，用于检查插入<code>ssex</code>时只能取男和女，输入其它时取<code>NULL</code>。触发器创建成功后，向<code>student</code>表中插入记录<strong>(‘000106’, ‘陈规则’, ‘五’, 22, ‘信息科学系’)</strong>。</p><p>参考：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">delimiter //</span><br><span class="line">create trigger ins_check before  insert  on student </span><br><span class="line">   FOR EACH ROW </span><br><span class="line">    begin</span><br><span class="line">         if new.ssex&lt;&gt;'男' and new.ssex &lt;&gt;'女' then</span><br><span class="line">           set new.ssex =null;</span><br><span class="line">          end if;</span><br><span class="line">end; </span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">delimiter ;</span><br><span class="line">select * from student;</span><br><span class="line">Insert Into Student Values('000106', '陈规则', '五', 22, '信息科学系');</span><br><span class="line">select * from student;</span><br></pre></td></tr></tbody></table></figure><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><h2 id="在线资源"><a href="#在线资源" class="headerlink" title="在线资源"></a>在线资源</h2><h3 id="其他博客"><a href="#其他博客" class="headerlink" title="其他博客"></a>其他博客</h3><p><a href="https://blog.csdn.net/yjqyyjw/article/details/68943641">【mysql】触发器的实例详解_Jack小强-CSDN博客</a></p><p><a href="https://www.yiibai.com/mysql/triggers.html">MySQL触发器 - MySQL教程™ (yiibai.com)</a></p><p><a href="https://www.begtut.com/mysql/mysql-triggers.html">MySQL 触发器 | 新手教程 (begtut.com)</a></p><p><a href="http://c.biancheng.net/view/7242.html">MySQL查看触发器 (biancheng.net)</a></p><h2 id="参考书籍"><a href="#参考书籍" class="headerlink" title="参考书籍"></a>参考书籍</h2><p><code>MySQL5.7从零开始学：视频教学版 / 王英英，李小威编著. -北京：清华大学出版社，2018</code></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>部分内容来自<code>李福翠</code>老师的上课内容及超星上的资料</p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> MySQL </tag>
            
            <tag> 触发器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue组件基础学习笔记</title>
      <link href="/2021/120927345.html"/>
      <url>/2021/120927345.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本篇将主要介绍Vue组件的相关内容，有些可能会较为简略</p><p>部分内容参考菜鸟教程<a href="https://www.runoob.com/w3cnote/vue-js-quickstart.html">Vue.js 入门教程 | 菜鸟教程 (runoob.com)</a>和Vue的官方文档<a href="https://v3.cn.vuejs.org/guide/introduction.html">介绍 | Vue.js (vuejs.org)</a>，另外参考书籍<code>梁灏，Vue.js实战[M] 北京：清华大学出版社，2017</code></p><blockquote><p><code>注：</code>由于个人能力有限，暂不会在Markdown中使用Vue相关内容</p><p>所以另外写了一个网页，作为效果参考。链接如下</p><p><a href="https://www.226yzy.com/demos/VueDemo/">https://www.226yzy.com/demos/VueDemo/</a></p></blockquote><h1 id="基本示例"><a href="#基本示例" class="headerlink" title="基本示例"></a>基本示例</h1><p>一个简单的示例</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0"&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">         </span><br><span class="line">        &lt;script&gt;</span><br><span class="line">        // 全局注册</span><br><span class="line">        Vue.component('hallo-world', {</span><br><span class="line">            //内容</span><br><span class="line">          template: '&lt;button&gt;Hello World&lt;/button&gt;'</span><br><span class="line">        })</span><br><span class="line">        // 创建根实例</span><br><span class="line">        new Vue({</span><br><span class="line">          el: '#app0'</span><br><span class="line">        })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>通过得出的效果可知，组件是可复用的 Vue 实例，所以它们与 <code>new Vue</code> 接收相同的选项，例如 <code>data</code>、<code>computed</code>、<code>watch</code>、<code>methods</code> 以及生命周期钩子等。仅有的例外是像 <code>el</code> 这样根实例特有的选项。</p><h2 id="函数示例"><a href="#函数示例" class="headerlink" title="函数示例"></a>函数示例</h2><p>上面没有啥数据绑定和事件响应，所以增加了下面的内容</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0-1"&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            // 全局注册</span><br><span class="line">            Vue.component('hallo-world', {</span><br><span class="line">                template: '&lt;button @click="x++"&gt;你点击了这个 {{x}} 次&lt;/button&gt;',</span><br><span class="line">                data:function(){</span><br><span class="line">                    return {</span><br><span class="line">                        x:0</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">            // 创建根实例</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app0-1'</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>当点击按钮时，每个组件都会各自独立维护它的 <code>x</code>。因为你每用一次组件，就会有一个它的新<strong>实例</strong>被创建。</p><p>另外，当我们定义这个 <code>&lt;hello-world/&gt;</code> 组件时，你可能会发现它的 <code>data</code> 并不是像这样直接提供一个对象</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data: {</span><br><span class="line">  x: 0</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>在组件中<strong><code>data</code> 选项必须是一个函数</strong>，因此每个实例可以维护一份被返回对象的独立的拷贝：</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data: function () {</span><br><span class="line">  return {</span><br><span class="line">    x: 0</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>如果你使用的是对象，请用以下代码试试会发生什么</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0-1-1"&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            var t={</span><br><span class="line">                x:0</span><br><span class="line">            }</span><br><span class="line">            // 全局注册</span><br><span class="line">            Vue.component('hallo-world', {</span><br><span class="line">                template: '&lt;button @click="x++"&gt;你点击了这个 {{x}} 次&lt;/button&gt;',</span><br><span class="line">                data: function () {</span><br><span class="line">                    return t</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">            // 创建根实例</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app0-1-1',</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>上面代码产生的效果是：点击一个按钮就会影响到其它按钮</p><h2 id="本例中的template"><a href="#本例中的template" class="headerlink" title="本例中的template"></a>本例中的template</h2><p>在<code>template</code>中，一般写成单行，否则会报错</p><p>如果要多行，那么可以在需要换行的那一行后面添加转义字符<code>\</code></p><p>对上一个代码换行修改示例如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0-1-0"&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            // 全局注册</span><br><span class="line">            Vue.component('hallo-world', {</span><br><span class="line">                template: '&lt;button @click="x++"&gt;\</span><br><span class="line">                        你点击了这个 {{x}} 次\</span><br><span class="line">    &lt;/button&gt;',</span><br><span class="line">                data: function () {</span><br><span class="line">                    return {</span><br><span class="line">                        x: 0</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">            // 创建根实例</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app0-1-0'</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="全局组件"><a href="#全局组件" class="headerlink" title="全局组件"></a>全局组件</h1><p>所有实例都能用全局组件。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0-1"&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            // 全局注册</span><br><span class="line">            Vue.component('hallo-world', {</span><br><span class="line">                template: '&lt;button @click="x++"&gt;你点击了这个 {{x}} 次&lt;/button&gt;',</span><br><span class="line">                data:function(){</span><br><span class="line">                    return {</span><br><span class="line">                        x:0</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">            // 创建根实例</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app0-1'</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>这个代码跟基本示例中的代码基本一样</p><h1 id="局部组件"><a href="#局部组件" class="headerlink" title="局部组件"></a>局部组件</h1><p>我们也可以在实例选项中注册局部组件，这样组件只能在这个实例中使用：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0-2"&gt;</span><br><span class="line">            &lt;runoob&gt;&lt;/runoob&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            var Child = {</span><br><span class="line">                template: '&lt;h1&gt;自定义组件!&lt;/h1&gt;'</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            // 创建根实例</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app0-2',</span><br><span class="line">                components: {</span><br><span class="line">                    // &lt;runoob&gt; 将只在父模板可用</span><br><span class="line">                    'runoob': Child</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="prop"><a href="#prop" class="headerlink" title="prop"></a>prop</h1><h2 id="通过-Prop-向子组件传递数据"><a href="#通过-Prop-向子组件传递数据" class="headerlink" title="通过 Prop 向子组件传递数据"></a>通过 Prop 向子组件传递数据</h2><p><code>prop</code> 是子组件用来接受父组件传递过来的数据的一个自定义属性。（也就是向组件传入数据）</p><p>父组件的数据需要通过 <code>props</code> 把数据传给子组件，子组件需要显式地用 <code>props</code> 选项声明 <code>prop</code>：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0-3"&gt;            &lt;child message="hello!"&gt;&lt;/child&gt;        &lt;/div&gt;        &lt;script&gt;            // 注册            Vue.component('child', {                // 声明 props                props: ['message'],                // 同样也可以在 vm 实例中像 "this.message" 这样使用                template: '&lt;span&gt;{{ message }}&lt;/span&gt;'            })            // 创建根实例            new Vue({                el: '#app0-3'            })        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>一个组件默认可以拥有任意数量的 prop，任何值都可以传递给任何 prop。在组件实例中访问这个值，就像访问 <code>data</code> 中的值一样。</p><h2 id="Prop-的大小写"><a href="#Prop-的大小写" class="headerlink" title="Prop 的大小写"></a>Prop 的大小写</h2><p>HTML 中的 attribute 名是大小写不敏感的，所以浏览器会把所有大写字符解释为小写字符。这意味着当你使用 DOM 中的模板时，camelCase (驼峰命名法) 的 prop 名需要使用其等价的 kebab-case (短横线分隔命名) 命名：</p><p>示例如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0-3-1"&gt;            &lt;blog-post post-title="hello!"&gt;&lt;/blog-post&gt;        &lt;/div&gt;        &lt;script&gt;            // 全局注册            Vue.component('blog-post', {                // 在 JavaScript 中是 camelCase 的                props: ['postTitle'],                template: '&lt;h3&gt;{{ postTitle }}&lt;/h3&gt;'            })            // 创建根实例            new Vue({                el: '#app0-3-1'            })        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="监听子组件事件"><a href="#监听子组件事件" class="headerlink" title="监听子组件事件"></a>监听子组件事件</h1><blockquote><p>参考自<code>菜鸟教程</code></p></blockquote><p>我们可以使用 <code>v-on</code>绑定自定义事件, 每个 Vue 实例都实现了事件接口(Events interface)，即：</p><ul><li>使用 <code>$on(eventName)</code> 监听事件</li><li>使用 <code>$emit(eventName)</code> 触发事件</li></ul><p>另外，父组件可以在使用子组件的地方直接用 <code>v-on</code>来监听子组件触发的事件。</p><p>下面示例来自菜鸟教程</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app"&gt;    &lt;div id="counter-event-example"&gt;      &lt;p&gt;{{ total }}&lt;/p&gt;      &lt;button-counter v-on:increment="incrementTotal"&gt;&lt;/button-counter&gt;      &lt;button-counter v-on:increment="incrementTotal"&gt;&lt;/button-counter&gt;    &lt;/div&gt;&lt;/div&gt; &lt;script&gt;Vue.component('button-counter', {  template: '&lt;button v-on:click="incrementHandler"&gt;{{ counter }}&lt;/button&gt;',  data: function () {    return {      counter: 0    }  },  methods: {    incrementHandler: function () {      this.counter += 1      this.$emit('increment')    }  },})new Vue({  el: '#counter-event-example',  data: {    total: 0  },  methods: {    incrementTotal: function () {      this.total += 1    }  }})&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="自定义组件的-v-model"><a href="#自定义组件的-v-model" class="headerlink" title="自定义组件的 v-model"></a>自定义组件的 v-model</h1><blockquote><p>参考自<code>菜鸟教程</code></p></blockquote><p>组件上的 v-model 默认会利用名为 value 的 prop 和名为 input 的事件。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input v-model="parentData"&gt;</span><br></pre></td></tr></tbody></table></figure><p>等价于：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input     :value="parentData"    @input="parentData = $event.target.value"&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><h2 id="在线资源"><a href="#在线资源" class="headerlink" title="在线资源"></a>在线资源</h2><h3 id="菜鸟教程"><a href="#菜鸟教程" class="headerlink" title="菜鸟教程"></a>菜鸟教程</h3><p><a href="https://www.runoob.com/w3cnote/vue-js-quickstart.html">Vue.js 入门教程 | 菜鸟教程 (runoob.com)</a></p><h3 id="Vue官方中文文档"><a href="#Vue官方中文文档" class="headerlink" title="Vue官方中文文档"></a>Vue官方中文文档</h3><p><a href="https://v3.cn.vuejs.org/guide/introduction.html">介绍 | Vue.js (vuejs.org)</a></p><h3 id="其他博客"><a href="#其他博客" class="headerlink" title="其他博客"></a>其他博客</h3><p><a href="https://blog.csdn.net/qq_37334135/article/details/89264348"> Vue快速入门_成都往右的博客-CSDN博客_vue入门</a></p><h2 id="参考书籍"><a href="#参考书籍" class="headerlink" title="参考书籍"></a>参考书籍</h2><p><code>[1]梁灏，Vue.js实战[M] 北京：清华大学出版社，2017</code></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>部分内容来自<code>姚军</code>老师的上课内容</p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> Vue </tag>
            
            <tag> 组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础学习笔记</title>
      <link href="/2021/120860549.html"/>
      <url>/2021/120860549.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本篇将记录我的Vue的学习,有些可能会较为简略</p><p>部分内容参考菜鸟教程<a href="https://www.runoob.com/w3cnote/vue-js-quickstart.html">Vue.js 入门教程 | 菜鸟教程 (runoob.com)</a>和Vue的官方文档<a href="https://v3.cn.vuejs.org/guide/introduction.html">介绍 | Vue.js (vuejs.org)</a>，另外参考书籍<code>梁灏，Vue.js实战[M] 北京：清华大学出版社，2017</code></p><blockquote><p><code>注：</code>由于个人能力有限，暂不会在Markdown中使用Vue相关内容</p><p>所以另外写了一个网页，作为效果参考。链接如下</p><p><a href="https://www.226yzy.com/demos/VueDemo/">https://www.226yzy.com/demos/VueDemo/</a></p></blockquote><h1 id="入门-Hello-World"><a href="#入门-Hello-World" class="headerlink" title="入门-Hello World"></a>入门-Hello World</h1><p>新的学习从<code>Hello World</code>开始🤣</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>{{ message }}<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="javascript">  <span class="attr">el</span>: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="javascript">  <span class="attr">data</span>: {</span></span><br><span class="line"><span class="javascript">    <span class="attr">message</span>: <span class="string">'Hello World'</span></span></span><br><span class="line"><span class="javascript">  }</span></span><br><span class="line"><span class="javascript">})</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>没有下载好的Vue.js,可以通过script加载CDN文件，引入最新稳定版本的Vue.js框架 。有的话，可以将路径修改为你自己下载好的Vue.js的相对路径</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h1 id="Vue实例与数据绑定"><a href="#Vue实例与数据绑定" class="headerlink" title="Vue实例与数据绑定"></a>Vue实例与数据绑定</h1><h2 id="实例与数据"><a href="#实例与数据" class="headerlink" title="实例与数据"></a>实例与数据</h2><p>Vue.js应用创建是通过构造函数Vue就可以创建一个Vue的根实例并启动Vue应用</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue({</span><br><span class="line">    // 选项</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p>上面的变量<code>app</code>代表了这个实例</p><p>然后，一个必不可少的选项就是<code>el</code></p><p><code>el</code>用于指定一个页面中已存在的DOM元素来挂载Vue实例</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app"&gt;&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">new Vue({</span><br><span class="line">  el: '#app'</span><br><span class="line">})</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h3><p>是 vue 的双向绑定的指令，能将页面上控件输入的值同步更新到相关绑定的data属性，也会在更新data绑定属性时候，更新页面上输入控件的值。</p><p>比如</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-0"&gt;</span><br><span class="line">            &lt;input v-model="value"&gt;</span><br><span class="line">            {{value}}</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app-0',</span><br><span class="line">                data: {</span><br><span class="line">                    value: 100,</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p><code>v-model</code>帮我们做的事就是，为<code>input</code> 的 <code>value</code> 值设置一个动态绑定，然后在输入框的 <code>input</code>事件触发后实时修改动态绑定的 <code>value</code> 的变量值。</p><h2 id="插值与表达式"><a href="#插值与表达式" class="headerlink" title="插值与表达式"></a>插值与表达式</h2><blockquote><p><code>注</code>这里HEXO渲染有点小问题</p></blockquote><p>使用双大括号<code>{{}}`是最基本的文本插值方法，它会自动将我们双向绑定的数据实时显示出来例子见前面的HelloWorld### v-text和v-html- `v-text`：将数据输出到元素内部，如果输出的数据有HTML代码，会作为普通文本输出- `v-html`：将数据输出到元素内部，如果输出的数据有HTML代码，会被渲染  </code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-0-0"&gt;</span><br><span class="line">            v-text: &lt;span v-text="value"&gt;&lt;/span&gt;</span><br><span class="line">            &lt;br&gt;</span><br><span class="line">            v-html: &lt;span v-html="value"&gt;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app-0-0',</span><br><span class="line">                data: {</span><br><span class="line">                    value: '&lt;a href="#"&gt;这是一个链接&lt;/a&gt;',</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><code>### v-pre如果想显示`{{}}</code>标签而不进行替换，使用<code>v-pre</code>即可跳过这个元素和他的子元素的编译过程<p></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-0-1"&gt;</span><br><span class="line">    &lt;span v-pre&gt;{{这里的内容不会被编译}}&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    new Vue({</span><br><span class="line">        el: '#app-0-1',</span><br><span class="line">    })</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h1><h2 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-1"&gt;</span><br><span class="line">        &lt;p v-if="aa"&gt;我是aa&lt;/p&gt;</span><br><span class="line">        &lt;p v-if="bb"&gt;我是bb&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    new Vue({</span><br><span class="line">      el: '#app-1',</span><br><span class="line">      data: {</span><br><span class="line">        aa: true,</span><br><span class="line">        bb: false</span><br><span class="line">      }</span><br><span class="line">    })</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="v-else"><a href="#v-else" class="headerlink" title="v-else"></a>v-else</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-2"&gt;</span><br><span class="line">        &lt;div v-if="aa&gt;bb"&gt;</span><br><span class="line">            aa大于bb</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div v-else&gt;</span><br><span class="line">            aa小于bb</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        new Vue({</span><br><span class="line">            el: '#app-2',</span><br><span class="line">            data: {</span><br><span class="line">                aa: 0,</span><br><span class="line">                bb: 1</span><br><span class="line">            }</span><br><span class="line">        })</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="v-else-if"><a href="#v-else-if" class="headerlink" title="v-else-if"></a>v-else-if</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-3"&gt;</span><br><span class="line">        &lt;div v-if="type == 'A'"&gt;</span><br><span class="line">            A</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div v-else-if="type == 'B'"&gt;</span><br><span class="line">            B</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div v-else-if="type == 'C'"&gt;</span><br><span class="line">            C</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div v-else&gt;</span><br><span class="line">            Not A/B/C</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        new Vue({</span><br><span class="line">            el: '#app-3',</span><br><span class="line">            data: {</span><br><span class="line">                type: 'C'</span><br><span class="line">            }</span><br><span class="line">        })</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h2><p>功能与<code>v-if</code>一样</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-4"&gt;</span><br><span class="line">            &lt;p v-show="aa"&gt;我是aa&lt;/p&gt;</span><br><span class="line">            &lt;p v-show="bb"&gt;我是bb&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app-4',</span><br><span class="line">                data: {</span><br><span class="line">                    aa: true,</span><br><span class="line">                    bb: false</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="v-if与v-show-的异同"><a href="#v-if与v-show-的异同" class="headerlink" title="v-if与v-show 的异同"></a>v-if与v-show 的异同</h2><ul><li>相同点</li></ul><p>都控制所在标签是否显示</p><p>用法上也是相同的</p><ul><li>不同点</li></ul><p><code>v-if</code>在值为<code>true</code>时，创建所在的内容并显示，否则，不创建标签</p><p><code>v-show</code>在页面加载是全部创建，只有当值为<code>true</code>时显示，否则隐藏</p><p><strong>在<code>梁灏，Vue.js实战[M] 北京：清华大学出版社，2017</code>的P36-37是这样描述的：</strong></p><p><code>v-if</code>是真正的条件渲染，它会根据表达式适当地销毁或重建元素及绑定的事件或子组件。若表达式初始值为<code>false</code>，则一开始元素/组件并不会渲染，只有当条件第一次变为真时才开始编译。</p><p>而<code>v-show</code>只是简单的CSS属性切换，无论条件真与否，都会被编译。</p><h2 id="v-if与v-show-的选择"><a href="#v-if与v-show-的选择" class="headerlink" title="v-if与v-show 的选择"></a>v-if与v-show 的选择</h2><p>相比之下</p><p><code>v-if</code>更适合条件不经常变换的场景，因为它切换开销相对比较大</p><p>而<code>v-show</code>适用于频繁切换条件</p><h2 id="更多参考"><a href="#更多参考" class="headerlink" title="更多参考"></a>更多参考</h2><p><a href="https://vue3js.cn/interview/vue/show_if.html#一、v-show与v-if的共同点">面试官：v-show和v-if有什么区别？使用场景分别是什么？ | web前端面试 - 面试官系列 (vue3js.cn)</a></p><h1 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h1><p>循环使用 <code>v-for</code> 指令。</p><p><code>v-for</code>指令需要以 <strong>site in sites</strong> 形式的特殊语法， sites 是源数据数组并且 site 是数组元素迭代的别名。</p><p><code>v-for</code> 可以绑定数据到数组来渲染一个列表</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-5"&gt;</span><br><span class="line">            &lt;li v-for="site in sites"&gt;</span><br><span class="line">                    {{ site.name }}</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app-5',</span><br><span class="line">                data: {</span><br><span class="line">                    sites: [{</span><br><span class="line">                            name: 'Runoob'</span><br><span class="line">                        },</span><br><span class="line">                        {</span><br><span class="line">                            name: 'Google'</span><br><span class="line">                        },</span><br><span class="line">                        {</span><br><span class="line">                            name: 'Taobao'</span><br><span class="line">                        }</span><br><span class="line">                    ]</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="指令与事件"><a href="#指令与事件" class="headerlink" title="指令与事件"></a>指令与事件</h1><p>指令是Vue.js模板中最常用的一项功能，它带有前缀<code>v-</code>，在前文中已经介绍、使用了不少指令了。指令的主要职责是当其表达式的值改变时，相应地将某些行为应用到DOM上。</p><h2 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h2><p><code>v-bind</code>的基本用途是动态更新HTML元素上的属性，比如id、class、href、src等</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-6"&gt;</span><br><span class="line">            &lt;a v-bind:href="url"&gt;我的博客首页链接&lt;/a&gt;</span><br><span class="line">            &lt;p v-bind:style="style"&gt;我是蓝控，这是蓝色的！&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app-6',</span><br><span class="line">                data: {</span><br><span class="line">                    url: 'https://www.226yzy.com',</span><br><span class="line">                    style: 'color:#49B1F5'</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h2><p><code>v-on</code>用来绑定事件监听器</p><p>例如</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-7"&gt;</span><br><span class="line">            &lt;p v-if="show"&gt;这是一段可隐藏的文本&lt;/p&gt;</span><br><span class="line">            &lt;button v-on:click="show=false"&gt;点击隐藏&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app-7',</span><br><span class="line">                data: {</span><br><span class="line">                    show: true</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>在<code>button</code>按钮上，使用<code>v-on:click</code>给该元素绑定另一个点击事件</p><p>在普通元素上，<code>v-on</code>可以监听原生DOM事件，除<code>click</code>外，还有<code>dblclick</code>、<code>keyup</code>、<code>mousemove</code>等。</p><h2 id="methods方法"><a href="#methods方法" class="headerlink" title="methods方法"></a>methods方法</h2><blockquote><p>写到下文<code>计算属性</code>的时候发现这个还没写过，所以就在这引用Vue中文文档中的例子了🤣正好，也有涉及上面的<code>v-on</code></p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-7-1"&gt;</span><br><span class="line">            &lt;p&gt;{{ message }}&lt;/p&gt;</span><br><span class="line">            &lt;button v-on:click="reverseMessage"&gt;反转消息&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app-7-1',</span><br><span class="line">                data: {</span><br><span class="line">                    message: 'Hello Vue.js!'</span><br><span class="line">                },</span><br><span class="line">                methods: {</span><br><span class="line">                    reverseMessage: function () {</span><br><span class="line">                        this.message = this.message.split('').reverse().join('')</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="语法糖"><a href="#语法糖" class="headerlink" title="语法糖"></a>语法糖</h1><p>语法糖是指在不影响功能的情况下，添加某种方法实现同样的效果，从而方便程序开发。</p><p>Vue.js中的<code>v-bind</code>和<code>v-on</code>指令都提供了语法糖，也可以说是缩写</p><ul><li><p><strong><code>v-bind</code></strong></p><p>可以缩写成一个冒号</p><p>例如</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a v-bind:href="url"&gt;我的博客首页链接&lt;/a&gt;</span><br><span class="line">&lt;!--可缩写为--&gt;</span><br><span class="line">&lt;a :href="url"&gt;我的博客首页链接&lt;/a&gt;</span><br></pre></td></tr></tbody></table></figure></li></ul><ul><li><p><strong><code>v-on</code></strong><br>可以缩写成<code>@</code></p><p>例如</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;button v-on:click="show=false"&gt;点击隐藏&lt;/button&gt;</span><br><span class="line">&lt;!--可缩写为--&gt;</span><br><span class="line">&lt;button @click="show=false"&gt;点击隐藏&lt;/button&gt;</span><br></pre></td></tr></tbody></table></figure></li></ul><h1 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h1><p>Vue中文文档说：设计它们的初衷是用于简单运算的。在模板中放入太多的逻辑会让模板过重且难以维护</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-8"&gt;</span><br><span class="line">            &lt;p&gt;倒转前: "{{ message }}"&lt;/p&gt;</span><br><span class="line">            &lt;p&gt;倒转后: "{{ reversedMessage }}"&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            var vm = new Vue({</span><br><span class="line">                el: '#app-8',</span><br><span class="line">                data: {</span><br><span class="line">                    message: 'Hello'</span><br><span class="line">                },</span><br><span class="line">                computed: {</span><br><span class="line">                    reversedMessage: function () {</span><br><span class="line">                        // `this` 指向 vm 实例</span><br><span class="line">                        return this.message.split('').reverse().join('')</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            });</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>所以，对于任何复杂逻辑，你都应当使用<strong>计算属性</strong>。</p><h2 id="计算属性缓存-vs-方法"><a href="#计算属性缓存-vs-方法" class="headerlink" title="计算属性缓存 vs 方法"></a>计算属性缓存 vs 方法</h2><blockquote><p>引自<a href="https://cn.vuejs.org/v2/guide/computed.html#%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E7%BC%93%E5%AD%98-vs-%E6%96%B9%E6%B3%95">https://cn.vuejs.org/v2/guide/computed.html#%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E7%BC%93%E5%AD%98-vs-%E6%96%B9%E6%B3%95</a></p></blockquote><p>我们可以将同一函数定义为一个方法而不是一个计算属性。两种方式的最终结果确实是完全相同的。然而，不同的是<strong>计算属性是基于它们的响应式依赖进行缓存的</strong>。只在相关响应式依赖发生改变时它们才会重新求值。这就意味着只要 <code>message</code> 还没有发生改变，多次访问 <code>reversedMessage</code> 计算属性会立即返回之前的计算结果，而不必再次执行函数。</p><p>相比之下，每当触发重新渲染时，调用方法将<strong>总会</strong>再次执行函数。</p><p>我们为什么需要缓存？假设我们有一个性能开销比较大的计算属性 <strong>A</strong>，它需要遍历一个巨大的数组并做大量的计算。然后我们可能有其他的计算属性依赖于 <strong>A</strong>。如果没有缓存，我们将不可避免的多次执行 <strong>A</strong> 的 getter！如果你不希望有缓存，请用方法来替代。</p><h2 id="函数与计算属性异同"><a href="#函数与计算属性异同" class="headerlink" title="函数与计算属性异同"></a>函数与计算属性异同</h2><p><strong>相同点</strong></p><p>都可以进行计算</p><p><strong>不同点</strong></p><ul><li><p>受计算属性有缓存，所以计算属性效率较高于函数</p></li><li><p>范围不一样。函数不仅可以用于计算，还可以用于其他场合，计算属性仅用于计算场合</p></li><li><p>在基本绑定中的调用形式不同，函数方法要带<code>()</code>，计算属性不用</p></li><li><p>计算属性可以侦听，函数不能</p></li></ul><h2 id="计算属性的-setter"><a href="#计算属性的-setter" class="headerlink" title="计算属性的 setter"></a>计算属性的 setter</h2><blockquote><p>引自<a href="https://cn.vuejs.org/v2/guide/computed.html#%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E7%9A%84-setter">https://cn.vuejs.org/v2/guide/computed.html#%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E7%9A%84-setter</a></p></blockquote><p>计算属性默认只有 getter，不过在需要时你也可以提供一个 setter：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">computed: {</span><br><span class="line">  fullName: {</span><br><span class="line">    // getter</span><br><span class="line">    get: function () {</span><br><span class="line">      return this.firstName + ' ' + this.lastName</span><br><span class="line">    },</span><br><span class="line">    // setter</span><br><span class="line">    set: function (newValue) {</span><br><span class="line">      var names = newValue.split(' ')</span><br><span class="line">      this.firstName = names[0]</span><br><span class="line">      this.lastName = names[names.length - 1]</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line">// ...</span><br></pre></td></tr></tbody></table></figure><p>现在再运行 <code>vm.fullName = 'John Doe'</code> 时，setter 会被调用，<code>vm.firstName</code> 和 <code>vm.lastName</code> 也会相应地被更新。</p><h1 id="监听属性"><a href="#监听属性" class="headerlink" title="监听属性"></a>监听属性</h1><p>我们可以通过 watch 来响应数据的变化。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-9"&gt;</span><br><span class="line">            千米 : &lt;input type="text" v-model="kilometers"&gt;</span><br><span class="line">            米 : &lt;input type="text" v-model="meters"&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;p id="info"&gt;&lt;/p&gt;</span><br><span class="line">        &lt;script type="text/javascript"&gt;</span><br><span class="line">            var app1 = new Vue({</span><br><span class="line">                el: '#app-9',</span><br><span class="line">                data: {</span><br><span class="line">                    kilometers: 0,</span><br><span class="line">                    meters: 0</span><br><span class="line">                },</span><br><span class="line">                watch: {</span><br><span class="line">                    kilometers: function (val) {</span><br><span class="line">                        this.kilometers = val;</span><br><span class="line">                        this.meters = this.kilometers * 1000</span><br><span class="line">                    },</span><br><span class="line">                    meters: function (val) {</span><br><span class="line">                        this.kilometers = val / 1000;</span><br><span class="line">                        this.meters = val;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            });</span><br><span class="line">            // $watch 是一个实例方法</span><br><span class="line">            app1.$watch('kilometers', function (newValue, oldValue) {</span><br><span class="line">                // 这个回调将在 app1.kilometers 改变后调用</span><br><span class="line">                document.getElementById("info").innerHTML = "修改前值为: " + oldValue + "，修改后值为: " + newValue;</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="vm-watch"><a href="#vm-watch" class="headerlink" title="vm.$watch"></a>vm.$watch</h2><blockquote><p>上面用到了这个，我引用官方文档的内容来介绍<a href="https://cn.vuejs.org/v2/api/#实例方法-数据">API — Vue.js (vuejs.org)</a></p></blockquote><p><strong>vm.$watch( expOrFn, callback, [options] )</strong></p><ul><li><p><strong>参数</strong>：</p><ul><li><p><code>{string | Function} expOrFn</code></p></li><li><p><code>{Function | Object} callback</code></p></li><li><pre><code>{Object} [options]</code></pre><ul><li><code>{boolean} deep</code></li><li><code>{boolean} immediate</code></li></ul></li></ul></li><li><p><strong>返回值</strong>：<code>{Function} unwatch</code></p></li><li><p><strong>用法</strong>：</p><p>观察 Vue 实例上的一个表达式或者一个函数计算结果的变化。回调函数得到的参数为新值和旧值。表达式只接受简单的键路径。对于更复杂的表达式，用一个函数取代。</p><blockquote><p><code>注意：</code>在变更 (不是替换) 对象或数组时，旧值将与新值相同，因为它们的引用指向同一个对象/数组。Vue 不会保留变更之前值的副本。</p></blockquote></li></ul><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><h2 id="在线资源"><a href="#在线资源" class="headerlink" title="在线资源"></a>在线资源</h2><h3 id="菜鸟教程"><a href="#菜鸟教程" class="headerlink" title="菜鸟教程"></a>菜鸟教程</h3><p><a href="https://www.runoob.com/w3cnote/vue-js-quickstart.html">Vue.js 入门教程 | 菜鸟教程 (runoob.com)</a></p><h3 id="Vue官方中文文档"><a href="#Vue官方中文文档" class="headerlink" title="Vue官方中文文档"></a>Vue官方中文文档</h3><p><a href="https://v3.cn.vuejs.org/guide/introduction.html">介绍 | Vue.js (vuejs.org)</a></p><h3 id="其他博客"><a href="#其他博客" class="headerlink" title="其他博客"></a>其他博客</h3><p><a href="https://blog.csdn.net/qq_37334135/article/details/89264348"> Vue快速入门_成都往右的博客-CSDN博客_vue入门</a></p><h2 id="参考书籍"><a href="#参考书籍" class="headerlink" title="参考书籍"></a>参考书籍</h2><p><code>[1]梁灏，Vue.js实战[M] 北京：清华大学出版社，2017</code></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>部分内容来自<code>姚军</code>老师的上课内容</p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的简易2048小游戏记录整理</title>
      <link href="/2021/120460550.html"/>
      <url>/2021/120460550.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><code>注：该篇记录暂未实现过渡动画以及移动端的上下左右操作</code></p><p>我的2048后续最新效果展示<a href="https://www.226yzy.com/my2048game/index.html">2048GAME (226yzy.com)</a></p><p>还有后续代码我放在了我的Github上了<a href="https://github.com/226YZY/my2048game">226YZY/my2048game: 我的简易2048小游戏 (github.com)</a></p><p>(本篇效果烦请自行根据代码复现😂)</p><p>本篇记录中的代码是我根据我对2048的基本游戏逻辑，尝试通过html+css+原生js实现</p><p>由于个人水平有限，相关内容有不完善的地方欢迎大佬指出Orz</p><h1 id="原版2048相关内容"><a href="#原版2048相关内容" class="headerlink" title="原版2048相关内容"></a>原版2048相关内容</h1><p>原版2048首先在GitHub上发布，原作者是Gabriele Cirulli</p><p>在Github上可以找到这个这个小游戏的源代码，传送门🚪<a href="https://github.com/gabrielecirulli/2048">gabrielecirulli/2048: A small clone of 1024 (https://play.google.com/store/apps/details?id=com.veewo.a1024) (github.com)</a></p><p>你也可以试玩原作者制作的2048，传送门🚪<a href="https://play2048.co/">2048 (play2048.co)</a></p><h1 id="游戏基本逻辑梳理"><a href="#游戏基本逻辑梳理" class="headerlink" title="游戏基本逻辑梳理"></a>游戏基本逻辑梳理</h1><h2 id="1-页面基本内容"><a href="#1-页面基本内容" class="headerlink" title="1.页面基本内容"></a>1.页面基本内容</h2><p>页面上至少需要有以下基本内容</p><ol><li>4*4的表作为游戏主体</li><li>显示当前多少分</li><li>新游戏</li><li>提示游戏结束（一开始不显示）</li><li>初始随机两个格子内有数字(该数字为2或4)</li><li>根据格子内的数字，格子内的颜色改变</li></ol><h2 id="2-随机产生数字"><a href="#2-随机产生数字" class="headerlink" title="2.随机产生数字"></a>2.随机产生数字</h2><p>在没有数字的格子产生一个数字</p><p>该数字只能为2或4</p><p>其中4的概率较小为10%（后来我粗略观察原版2048的代码发现的）</p><h2 id="3-计分"><a href="#3-计分" class="headerlink" title="3.计分"></a>3.计分</h2><p>每对相同的数字合并后，总分加上这对数字的和</p><p>例如2和2合并后总分加4分，8和8合并后总分加16分</p><h2 id="4-合并数字"><a href="#4-合并数字" class="headerlink" title="4.合并数字"></a>4.合并数字</h2><p>基础的（0表示空，下同）比如 0 2 0 2左移后应为4 0 0 0 </p><blockquote><p><strong><em><code>需要注意的情况</code></em></strong></p></blockquote><p>与原版2048对比后我发现网上一些自制的2048在这方面有些问题，下面列出我注意到的情况</p><ul><li>例1（是否重复合并）</li></ul><p>2 2 2 2这行如果向左移动后结果应为4 4 0 0</p><p>也就是说，合并后的数字不与接下来相同的数字再合并</p><ul><li><p>例2（合并顺序）</p><p>2 2 2 4右移后应为0 2 4 4</p></li></ul><p>说明向右移，合并应从右侧开始</p><p>若为左移，则合并应从左侧开始，上下移动的同理</p><h2 id="5-上下左右操作响应"><a href="#5-上下左右操作响应" class="headerlink" title="5.上下左右操作响应"></a>5.上下左右操作响应</h2><p>对键盘事件响应，通过wsad或方向键对应上下左右操作</p><h2 id="6-游戏是否结束或达到胜利值"><a href="#6-游戏是否结束或达到胜利值" class="headerlink" title="6.游戏是否结束或达到胜利值"></a>6.游戏是否结束或达到胜利值</h2><p>在每次操作后，随即遍历每个格子上下左右是否还有相同的数字</p><p>若存在某个格子上下左右中存在与之相同的数字，那么游戏尚未结束</p><p>否则，若所有格子上下左右中都不存在与之相同的数字，则说明游戏结束</p><p>胜利值在上面遍历时查找即可</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="HTML部分"><a href="#HTML部分" class="headerlink" title="HTML部分"></a>HTML部分</h2><h3 id="html部分总览"><a href="#html部分总览" class="headerlink" title="html部分总览"></a>html部分总览</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>2048GAME<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- css引入 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/main.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onkeydown</span>=<span class="string">"keyboardEvents()"</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 当前总分显示与新游戏按钮--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"theMark"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>当前分数为 <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"mark"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> 分<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"newgame"</span> <span class="attr">onclick</span>=<span class="string">"main()"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>NEW GAME<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 2048游戏主体--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- cellspacing属性可设置或返回在表格中的单元格之间的空白量 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"maintable"</span> <span class="attr">cellspacing</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span> </span><br><span class="line">    </span><br><span class="line">  <span class="comment">&lt;!-- 游戏结束时显示 GAME OVER--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"gameover"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- js引入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/main2048.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="当前总分显示与新游戏按钮"><a href="#当前总分显示与新游戏按钮" class="headerlink" title="当前总分显示与新游戏按钮"></a>当前总分显示与新游戏按钮</h3><p>该部分代码如下</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"theMark"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>当前分数为 <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"mark"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> 分<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"newgame"</span> <span class="attr">onclick</span>=<span class="string">"main()"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>NEW GAME<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><code>&lt;span id="mark"&gt;&lt;/span&gt;</code>这部分的内容会后续通过js渲染上去,表示总分</p><p><code>&lt;button id="newgame" onclick="main()"&gt;&lt;span&gt;NEW GAME&lt;/span&gt;&lt;/button&gt;</code>点击后会执行js中写好的main()函数，以重新加载2048游戏的4*4表格主体以及总分归零</p><h3 id="2048游戏主体"><a href="#2048游戏主体" class="headerlink" title="2048游戏主体"></a>2048游戏主体</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- cellspacing属性可设置或返回在表格中的单元格之间的空白量 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"maintable"</span> <span class="attr">cellspacing</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span> </span><br></pre></td></tr></tbody></table></figure><p>这部分我用<code>table</code>实现，里面的<code>td</code>通过js渲染上去，渲染后如下</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"maintable"</span> <span class="attr">cellspacing</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"1"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"2"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"3"</span> &gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"4"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"5"</span> &gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"6"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"7"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"8"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"9"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"10"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"11"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"12"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"13"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"14"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"15"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"16"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><code>注：</code>原作者是用<code>div</code>实现的,你也可以用这种做法</p><h3 id="游戏结束或达到胜利值时提示"><a href="#游戏结束或达到胜利值时提示" class="headerlink" title="游戏结束或达到胜利值时提示"></a>游戏结束或达到胜利值时提示</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 游戏结束或达到胜利值时显示对应的内容--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"gameover"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>该部分通过css使其初始不显示，当判断游戏结束或达到胜利值时由js更改其style和内容，使其显示</p><h2 id="CSS部分"><a href="#CSS部分" class="headerlink" title="CSS部分"></a>CSS部分</h2><h3 id="css部分总览"><a href="#css部分总览" class="headerlink" title="css部分总览"></a>css部分总览</h3><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> {</span><br><span class="line">    <span class="attribute">text-align</span>: center;<span class="comment">/*文本居中*/</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#E0FFFF</span>;  <span class="comment">/*背景颜色*/</span></span><br><span class="line">}</span><br><span class="line"><span class="comment">/*表格样式*/</span></span><br><span class="line"><span class="selector-tag">table</span> {</span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">340px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#bbada0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> auto; <span class="comment">/*上下外边距为0，左右根据宽度自适应,即水平居中*/</span></span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>; <span class="comment">/* 设置表格边框圆角 */</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*单元格样式*/</span></span><br><span class="line"><span class="selector-tag">td</span> {</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">29</span>, <span class="number">180</span>, <span class="number">250</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*总分提示部分字体大小和粗细*/</span></span><br><span class="line"><span class="selector-id">#theMark</span>{</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">36px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*突出分数，设置其字体颜色*/</span></span><br><span class="line"><span class="selector-id">#mark</span>{</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">33</span>, <span class="number">132</span>, <span class="number">245</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*新游戏按钮样式*/</span></span><br><span class="line"><span class="selector-id">#newgame</span>{</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">241</span>, <span class="number">176</span>, <span class="number">56</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">color</span>: aliceblue;</span><br><span class="line">    <span class="attribute">font-size</span>: large;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">800</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*游戏结束提示*/</span></span><br><span class="line"><span class="selector-id">#gameover</span>{</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">36px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">display</span>:none;<span class="comment">/*初始不显示*/</span></span><br><span class="line">    <span class="attribute">color</span>: crimson;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>各部分内容见上面css代码及其注释，及不过多赘述了😆</p><h2 id="JS部分"><a href="#JS部分" class="headerlink" title="JS部分"></a>JS部分</h2><blockquote><p>这部分重点🚩</p></blockquote><p>路漫漫其修远兮，上面合并数字中提到的问题以及各种bug，让我重写了好几次核心部分🤣</p><h3 id="1-初始"><a href="#1-初始" class="headerlink" title="1.初始"></a>1.初始</h3><p>各种页面渲染及各种函数调用都基本在这一部分实现</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = main(); <span class="comment">//加载主函数</span></span><br><span class="line"><span class="keyword">var</span> overflag=<span class="literal">true</span>;<span class="comment">//判断游戏是否结束的标志</span></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>) </span>{</span><br><span class="line">    mapx=<span class="number">4</span>,mapy=<span class="number">4</span>,mapt=mapx*mapy;<span class="comment">//设定表框大小，一般为4*4</span></span><br><span class="line">    <span class="keyword">var</span> table = <span class="built_in">document</span>.getElementById(<span class="string">"maintable"</span>); <span class="comment">//获取表格</span></span><br><span class="line">    <span class="keyword">var</span> tableStructure = <span class="string">""</span>; <span class="comment">//储存表格结构</span></span><br><span class="line">    <span class="keyword">var</span> tdid = <span class="number">1</span>; <span class="comment">//单元格id</span></span><br><span class="line">    <span class="keyword">var</span> mark=<span class="built_in">document</span>.getElementById(<span class="string">"mark"</span>);<span class="comment">//获取html中显示分数的位置</span></span><br><span class="line">    overflag=<span class="literal">true</span>; <span class="comment">//因为后续新游戏是重新执行该函数，所以该值要重新变为true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//加载表格结构(4行4列)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapx; i++) {</span><br><span class="line">        tableStructure += <span class="string">"&lt;tr&gt;"</span>; <span class="comment">//为表格加1行</span></span><br><span class="line">        <span class="comment">//为该行添加单元格</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">1</span>; j &lt;= mapy; j++) {</span><br><span class="line">            tableStructure += <span class="string">"&lt;td id="</span> + tdid + <span class="string">"&gt;&lt;/td&gt;"</span>; <span class="comment">//添加单元格与该单元格id</span></span><br><span class="line">            tdid++;</span><br><span class="line">        }</span><br><span class="line">        tableStructure += <span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">    }</span><br><span class="line">    table.innerHTML = tableStructure; <span class="comment">//向表格返回该表格结构</span></span><br><span class="line">    tdRandom();</span><br><span class="line">    tdRandom();<span class="comment">//随机两个格子给予2或 4</span></span><br><span class="line">    tdcolor();<span class="comment">//渲染格子的颜色</span></span><br><span class="line">    mark.innerHTML=<span class="number">0</span>;<span class="comment">//初始总分为0</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).style.display=<span class="string">"none"</span>;<span class="comment">//初始GME OVER提示不显示</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).innerHTML=<span class="string">""</span>;</span><br><span class="line">    youwin=<span class="number">2048</span>;<span class="comment">//设置胜利值</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>原版2048为4*4的表格，我在代码中的mapx,mapy的值可以自行设置，以便魔改成更大的表格供游玩。</p><p><code>youwin</code>的值代表胜利值可自行修改</p><h3 id="2-随机相关"><a href="#2-随机相关" class="headerlink" title="2.随机相关"></a>2.随机相关</h3><p>这部分需要解决随机格子随机产生2或4</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//因为Math.random() 返回 0（包括） 至 1（不包括） 之间的随机数，随机的数不一定是整数。这里我用向下取整</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myrandom</span>(<span class="params">min, max</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> min + <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * max);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//随机为单元格随机填入2或4 (4出现的概率应相对较小)</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tdRandom</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> temp = myrandom(<span class="number">1</span>, mapt);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(temp).innerHTML == <span class="string">""</span>) {</span><br><span class="line">        <span class="built_in">document</span>.getElementById(temp).innerHTML = <span class="built_in">Math</span>.random()&lt;<span class="number">0.9</span>?<span class="number">2</span>:<span class="number">4</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        tdRandom();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>我一开始想设出现4的概率为25%，后来感觉手感不对，于是看原版的代码后发现其设置为10%</p><h3 id="3-键盘事件响应"><a href="#3-键盘事件响应" class="headerlink" title="3.键盘事件响应"></a>3.键盘事件响应</h3><p><code>注：</code>由于所学有限，本篇的移动操作暂时只实现了键盘事件的响应，移动端的触屏操作待后续研究</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//键盘事件响应</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">keyboardEvents</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">//以键盘方向键或wasd操作移动</span></span><br><span class="line">    <span class="keyword">if</span> (overflag) {</span><br><span class="line">        <span class="keyword">if</span> (event.keyCode == <span class="number">37</span> || event.keyCode == <span class="number">65</span>) Left();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (event.keyCode == <span class="number">38</span> || event.keyCode == <span class="number">87</span>) Up();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (event.keyCode == <span class="number">39</span> || event.keyCode == <span class="number">68</span>) Right();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (event.keyCode == <span class="number">40</span> || event.keyCode == <span class="number">83</span>) Down();</span><br><span class="line">        <span class="comment">//保证其它按键不会触发</span></span><br><span class="line">        <span class="keyword">if</span> (flag_r) {</span><br><span class="line">            tdRandom();<span class="comment">//随机再产生一个数字</span></span><br><span class="line">            flag_r = <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    tdcolor();<span class="comment">//更新格子颜色</span></span><br><span class="line">    <span class="keyword">if</span>(overflag)</span><br><span class="line">    isover();<span class="comment">//判断游戏是否结束</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>上下左右的操作函数见下文，设置<code>flag_r</code>是为了限制该函数其他键响应。每按一次按键会对游戏是否结束以及格子颜色更新进行重判</p><h3 id="4-上下左右操作函数"><a href="#4-上下左右操作函数" class="headerlink" title="4.上下左右操作函数"></a>4.上下左右操作函数</h3><p>这部分四个操作的代码逻辑基本相同，只是根据方向的不同存入数字的顺序不同</p><p>格子编号布局顺序如下</p><p>1 2 3 4 </p><p>5 6 7 8 </p><p>9 10 11 12</p><p>13 14 15 16</p><p>我用的是两个一维数组分别存对应编号格子的内容和是否合并处理过（合并处理在我写的<code>changetd()</code>函数中，具体见下一部分）</p><p>在4*4的表格中我是分成了4列（或行，上下是列,左右是行）读入，读入顺序是正序或倒序（我是上左倒，下右正，这主要是方便<code>changetd()</code>函数统一操作），然后按此顺序存入上述的数组中。</p><p>在<code>changetd()</code>函数处理完后再更新对应编号的格子显示的内容</p><p>该部分代码如下</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//上下左右操作函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//向上操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Up</span>(<span class="params"></span>) </span>{</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=mapy;i++){</span><br><span class="line">      <span class="keyword">var</span> tempmap=[];<span class="comment">//记录该编号格子内的数</span></span><br><span class="line">      <span class="keyword">var</span> tempflag=[];<span class="comment">//记录该编号格子是否合并过(本次操作内)</span></span><br><span class="line">      <span class="keyword">var</span> z=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">var</span> j=i+(mapx-<span class="number">1</span>)*mapy;j&gt;=i;j-=mapy){ </span><br><span class="line">          <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j); </span><br><span class="line">          <span class="keyword">if</span>(thetd.innerHTML==<span class="string">""</span>){</span><br><span class="line">              tempmap[z]=<span class="number">0</span>;</span><br><span class="line">          }          </span><br><span class="line">          <span class="keyword">else</span>{</span><br><span class="line">              tempmap[z]=<span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">          } </span><br><span class="line">          tempflag[z]=<span class="literal">true</span>;  </span><br><span class="line">          z++;                </span><br><span class="line">      }</span><br><span class="line">      <span class="comment">//数字合并统一由changetd函数完成</span></span><br><span class="line">      tempmap=changetd(tempmap,tempflag,tempmap.length,<span class="number">0</span>);</span><br><span class="line">      z=<span class="number">0</span>;</span><br><span class="line">      <span class="comment">//更新格子内的显示内容</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">var</span> j=i+(mapx-<span class="number">1</span>)*mapy;j&gt;=i;j-=mapy){ </span><br><span class="line">        <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j);</span><br><span class="line">        <span class="keyword">if</span>(tempmap[z]==<span class="number">0</span>){</span><br><span class="line">            thetd.innerHTML=<span class="string">""</span>;</span><br><span class="line">        }  </span><br><span class="line">        <span class="keyword">else</span>{</span><br><span class="line">            thetd.innerHTML=tempmap[z];</span><br><span class="line">        } </span><br><span class="line">        z++;  </span><br><span class="line">    }</span><br><span class="line">   } </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//向下操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Down</span>(<span class="params"></span>) </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=mapy;i++){</span><br><span class="line">        <span class="keyword">var</span> tempmap=[];</span><br><span class="line">        <span class="keyword">var</span> tempflag=[];</span><br><span class="line">        <span class="keyword">var</span> z=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i;j&lt;=i+(mapx-<span class="number">1</span>)*mapy;j+=mapy){ </span><br><span class="line">            <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j); </span><br><span class="line">            <span class="keyword">if</span>(thetd.innerHTML==<span class="string">""</span>){</span><br><span class="line">                tempmap[z]=<span class="number">0</span>;</span><br><span class="line">            }          </span><br><span class="line">            <span class="keyword">else</span>{</span><br><span class="line">                tempmap[z]=<span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">            } </span><br><span class="line">            tempflag[z]=<span class="literal">true</span>;  </span><br><span class="line">            z++;                </span><br><span class="line">        }</span><br><span class="line">        tempmap=changetd(tempmap,tempflag,tempmap.length,<span class="number">0</span>);  </span><br><span class="line">        z=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i;j&lt;=i+(mapx-<span class="number">1</span>)*mapy;j+=mapy){ </span><br><span class="line">          <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j);</span><br><span class="line">          <span class="keyword">if</span>(tempmap[z]==<span class="number">0</span>){</span><br><span class="line">              thetd.innerHTML=<span class="string">""</span>;</span><br><span class="line">          }  </span><br><span class="line">          <span class="keyword">else</span>{</span><br><span class="line">              thetd.innerHTML=tempmap[z];</span><br><span class="line">          } </span><br><span class="line">          z++;  </span><br><span class="line">      }</span><br><span class="line">     } </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//向左操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Left</span>(<span class="params"></span>) </span>{</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">var</span> i=mapy;i&lt;=mapy+(mapx-<span class="number">1</span>)*mapy;i+=mapy){</span><br><span class="line">        <span class="keyword">var</span> tempmap=[];</span><br><span class="line">        <span class="keyword">var</span> tempflag=[];</span><br><span class="line">        <span class="keyword">var</span> z=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i;j&gt;=i-mapy+<span class="number">1</span>;j--){ </span><br><span class="line">            <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j); </span><br><span class="line">            <span class="keyword">if</span>(thetd.innerHTML==<span class="string">""</span>){</span><br><span class="line">                tempmap[z]=<span class="number">0</span>;</span><br><span class="line">            }          </span><br><span class="line">            <span class="keyword">else</span>{</span><br><span class="line">                tempmap[z]=<span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">            } </span><br><span class="line">            tempflag[z]=<span class="literal">true</span>;  </span><br><span class="line">            z++;                </span><br><span class="line">        }</span><br><span class="line">        tempmap=changetd(tempmap,tempflag,tempmap.length,<span class="number">0</span>);  </span><br><span class="line">        z=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i;j&gt;=i-mapy+<span class="number">1</span>;j--){ </span><br><span class="line">          <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j);</span><br><span class="line">          <span class="keyword">if</span>(tempmap[z]==<span class="number">0</span>){</span><br><span class="line">              thetd.innerHTML=<span class="string">""</span>;</span><br><span class="line">          }  </span><br><span class="line">          <span class="keyword">else</span>{</span><br><span class="line">              thetd.innerHTML=tempmap[z];</span><br><span class="line">          } </span><br><span class="line">          z++;  </span><br><span class="line">      }</span><br><span class="line">     } </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//向右操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Right</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=<span class="number">1</span>+(mapx-<span class="number">1</span>)*mapy;i+=mapy){</span><br><span class="line">        <span class="keyword">var</span> tempmap=[];</span><br><span class="line">        <span class="keyword">var</span> tempflag=[];</span><br><span class="line">        <span class="keyword">var</span> z=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(i+<span class="string">" i"</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i;j&lt;i+mapy;j++){ </span><br><span class="line">            <span class="built_in">console</span>.log(j);</span><br><span class="line">            <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j); </span><br><span class="line">            <span class="keyword">if</span>(thetd.innerHTML==<span class="string">""</span>){</span><br><span class="line">                tempmap[z]=<span class="number">0</span>;</span><br><span class="line">            }          </span><br><span class="line">            <span class="keyword">else</span>{</span><br><span class="line">                tempmap[z]=<span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">            } </span><br><span class="line">            tempflag[z]=<span class="literal">true</span>;  </span><br><span class="line">            z++;                </span><br><span class="line">        }</span><br><span class="line">        tempmap=changetd(tempmap,tempflag,tempmap.length,<span class="number">0</span>);  </span><br><span class="line">        z=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i;j&lt;i+mapy;j++){ </span><br><span class="line">          <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j);</span><br><span class="line">          <span class="keyword">if</span>(tempmap[z]==<span class="number">0</span>){</span><br><span class="line">              thetd.innerHTML=<span class="string">""</span>;</span><br><span class="line">          }  </span><br><span class="line">          <span class="keyword">else</span>{</span><br><span class="line">              thetd.innerHTML=tempmap[z];</span><br><span class="line">          } </span><br><span class="line">          z++;  </span><br><span class="line">      }</span><br><span class="line">     }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="5-合并数字"><a href="#5-合并数字" class="headerlink" title="5.合并数字"></a>5.合并数字</h3><p>上文提到的changetd()函数来实现这部分内容</p><p>代码如下</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changetd</span>(<span class="params">tempmap, tempflag, k, u</span>) </span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = k - <span class="number">1</span>; i &gt; u; i--) {</span><br><span class="line">        <span class="keyword">if</span> (tempmap[i - <span class="number">1</span>] != <span class="number">0</span> &amp;&amp; tempmap[i] == <span class="number">0</span>) {</span><br><span class="line">            <span class="comment">//移动</span></span><br><span class="line">            tempmap[i] = tempmap[i - <span class="number">1</span>];</span><br><span class="line">            tempmap[i - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//移动时合并标记也同样跟随移动</span></span><br><span class="line">            <span class="keyword">if</span> (tempflag[i - <span class="number">1</span>] == <span class="literal">false</span>) {</span><br><span class="line">                tempflag[i - <span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">                tempflag[i] = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            flag_r = <span class="literal">true</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (tempmap[i - <span class="number">1</span>] != <span class="number">0</span> &amp;&amp; tempmap[i] == tempmap[i - <span class="number">1</span>] &amp;&amp; tempflag[i] == <span class="literal">true</span> &amp;&amp; tempflag[i - <span class="number">1</span>] == <span class="literal">true</span>) {</span><br><span class="line">            <span class="comment">//合并</span></span><br><span class="line">            tempmap[i] *= <span class="number">2</span>;</span><br><span class="line">            tempmap[i - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//标记经过合并处理</span></span><br><span class="line">            tempflag[i] = <span class="literal">false</span>;</span><br><span class="line">            flag_r = <span class="literal">true</span>;</span><br><span class="line">            mark.innerHTML = <span class="built_in">parseInt</span>(mark.innerHTML) + tempmap[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//递归，以解决可能出现的合并后产生空位未处理</span></span><br><span class="line">        tempmap = changetd(tempmap, tempflag, k, i);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> tempmap;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这部分首先解决的是判断某个数是否在本轮操作中合并过，这问题的解决我是通过另一个数再记录对应是否合并的状态,具体见上面代码、</p><p>然后通过递归来解决一次遍历操作过后，可能留下的空位的问题</p><h3 id="6-颜色更改"><a href="#6-颜色更改" class="headerlink" title="6.颜色更改"></a>6.颜色更改</h3><p>为了美观以及更好的体现数值的不同，根据不同数值给格子渲染上不同背景色</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tdcolor</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">//根据不同数值给格子渲染上不同背景色</span></span><br><span class="line">    <span class="keyword">var</span> tdcolors = {</span><br><span class="line">        <span class="string">""</span>: <span class="string">"#cdc1b4"</span>,</span><br><span class="line">        <span class="string">"2"</span>: <span class="string">"#eee4da"</span>,</span><br><span class="line">        <span class="string">"4"</span>: <span class="string">"#ede0c8"</span>,</span><br><span class="line">        <span class="string">"8"</span>: <span class="string">"#f2b179"</span>,</span><br><span class="line">        <span class="string">"16"</span>: <span class="string">"#f59563"</span>,</span><br><span class="line">        <span class="string">"32"</span>: <span class="string">"#f67c5f"</span>,</span><br><span class="line">        <span class="string">"64"</span>: <span class="string">"#f65e3b"</span>,</span><br><span class="line">        <span class="string">"128"</span>: <span class="string">"#edcf72"</span>,</span><br><span class="line">        <span class="string">"256"</span>: <span class="string">"#edcc61"</span>,</span><br><span class="line">        <span class="string">"512"</span>: <span class="string">"#9c0"</span>,</span><br><span class="line">        <span class="string">"1024"</span>: <span class="string">"#33b5e5"</span>,</span><br><span class="line">        <span class="string">"2048"</span>: <span class="string">"#09c"</span>,</span><br><span class="line">        <span class="string">"4096"</span>: <span class="string">"#a6c"</span>,</span><br><span class="line">        <span class="string">"8192"</span>: <span class="string">"#93c"</span></span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//数字颜色更改</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapx * mapy; i++) {</span><br><span class="line">        <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(i);</span><br><span class="line">        thetd.style.backgroundColor = tdcolors[thetd.innerHTML];</span><br><span class="line">        <span class="keyword">if</span> (thetd.innerHTML == <span class="number">2</span> || thetd.innerHTML == <span class="number">4</span>) {</span><br><span class="line">            thetd.style.color = <span class="string">"#776e65"</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            thetd.style.color = <span class="string">"#f8f5f1"</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这部分我担心我自己配色会配的乱七八糟，所以我根据原版的2048配色来😂</p><p>当格子里的数字大于4时数字颜色变白的情况我也顺便还原了</p><p>另外我还设置了大于2048的值🤪</p><h3 id="游戏结束或达到胜利值时提示-1"><a href="#游戏结束或达到胜利值时提示-1" class="headerlink" title="游戏结束或达到胜利值时提示"></a>游戏结束或达到胜利值时提示</h3><p>游戏结束或达到胜利值时需要有所提示</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isover</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapx * mapy; i++) {</span><br><span class="line">        <span class="keyword">var</span> td = <span class="built_in">document</span>.getElementById(i);</span><br><span class="line">        <span class="keyword">if</span>(td.innerHTML &gt;= youwin){</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).innerHTML=<span class="string">"恭喜你达到了 "</span>+td.innerHTML;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).style.display = <span class="string">"block"</span>;</span><br><span class="line">            youwin=<span class="built_in">parseInt</span>(td.innerHTML);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (td.innerHTML == <span class="string">""</span>) {</span><br><span class="line">            <span class="comment">//空值跳过</span></span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (i &lt;= (mapx - <span class="number">1</span>) * mapy &amp;&amp; td.innerHTML == <span class="built_in">document</span>.getElementById(i + mapy).innerHTML) {</span><br><span class="line">            <span class="comment">//判断该格子下方的数是否与之相同</span></span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (i % mapy != <span class="number">0</span> &amp;&amp; td.innerHTML == <span class="built_in">document</span>.getElementById(i + <span class="number">1</span>).innerHTML) {</span><br><span class="line">            <span class="comment">//判断该格子右边的数是否与之相同</span></span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            f++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (f == mapx * mapy) {</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).innerHTML+=<span class="string">"&lt;br&gt;GAME OVER"</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).style.display = <span class="string">"block"</span>;</span><br><span class="line">        overflag = <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这部分代码逻辑具体见注释🤣</p><p><code>youwin</code>的值在初始的那一部分中main()函数中设置</p><h3 id="js部分总览"><a href="#js部分总览" class="headerlink" title="js部分总览"></a>js部分总览</h3><p>综上，js部分总体代码如下</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = main(); <span class="comment">//加载主函数</span></span><br><span class="line"><span class="keyword">var</span> overflag = <span class="literal">true</span>; <span class="comment">//判断游戏是否结束的标志</span></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>) </span>{</span><br><span class="line">    mapx = <span class="number">4</span>, mapy = <span class="number">4</span>, mapt = mapx * mapy; <span class="comment">//设定表框大小，一般为4*4</span></span><br><span class="line">    <span class="keyword">var</span> table = <span class="built_in">document</span>.getElementById(<span class="string">"maintable"</span>); <span class="comment">//获取表格</span></span><br><span class="line">    <span class="keyword">var</span> tableStructure = <span class="string">""</span>; <span class="comment">//储存表格结构</span></span><br><span class="line">    <span class="keyword">var</span> tdid = <span class="number">1</span>; <span class="comment">//单元格id</span></span><br><span class="line">    <span class="keyword">var</span> mark = <span class="built_in">document</span>.getElementById(<span class="string">"mark"</span>); <span class="comment">//获取html中显示分数的位置</span></span><br><span class="line">    overflag = <span class="literal">true</span>; <span class="comment">//因为后续新游戏是重新执行该函数，所以该值要重新变为true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//加载表格结构(4行4列)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapx; i++) {</span><br><span class="line">        tableStructure += <span class="string">"&lt;tr&gt;"</span>; <span class="comment">//为表格加1行</span></span><br><span class="line">        <span class="comment">//为该行添加单元格</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">1</span>; j &lt;= mapy; j++) {</span><br><span class="line">            tableStructure += <span class="string">"&lt;td id="</span> + tdid + <span class="string">"&gt;&lt;/td&gt;"</span>; <span class="comment">//添加单元格与该单元格id</span></span><br><span class="line">            tdid++;</span><br><span class="line">        }</span><br><span class="line">        tableStructure += <span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">    }</span><br><span class="line">    table.innerHTML = tableStructure; <span class="comment">//向表格返回该表格结构</span></span><br><span class="line">    tdRandom();</span><br><span class="line">    tdRandom(); <span class="comment">//随机两个格子给予2或 4</span></span><br><span class="line">    tdcolor(); <span class="comment">//渲染格子的颜色</span></span><br><span class="line">    mark.innerHTML = <span class="number">0</span>; <span class="comment">//初始总分为0</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).style.display = <span class="string">"none"</span>; <span class="comment">//初始GME OVER提示不显示</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).innerHTML=<span class="string">""</span>;</span><br><span class="line">    youwin=<span class="number">2048</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//因为Math.random() 返回 0（包括） 至 1（不包括） 之间的随机数，随机的数不一定是整数。这里我用向下取整</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myrandom</span>(<span class="params">min, max</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> min + <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * max);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//随机为单元格随机填入2或4 (4出现的概率应相对较小)</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tdRandom</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> temp = myrandom(<span class="number">1</span>, mapt);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(temp).innerHTML == <span class="string">""</span>) {</span><br><span class="line">        <span class="built_in">document</span>.getElementById(temp).innerHTML = <span class="built_in">Math</span>.random() &lt; <span class="number">0.9</span> ? <span class="number">2</span> : <span class="number">4</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        tdRandom();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//键盘事件响应</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">keyboardEvents</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">//以键盘方向键或wasd操作移动</span></span><br><span class="line">    <span class="keyword">if</span> (overflag) {</span><br><span class="line">        <span class="keyword">if</span> (event.keyCode == <span class="number">37</span> || event.keyCode == <span class="number">65</span>) Left();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (event.keyCode == <span class="number">38</span> || event.keyCode == <span class="number">87</span>) Up();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (event.keyCode == <span class="number">39</span> || event.keyCode == <span class="number">68</span>) Right();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (event.keyCode == <span class="number">40</span> || event.keyCode == <span class="number">83</span>) Down();</span><br><span class="line">        <span class="comment">//保证其它按键不会触发</span></span><br><span class="line">        <span class="keyword">if</span> (flag_r) {</span><br><span class="line">            tdRandom(); <span class="comment">//随机再产生一个数字</span></span><br><span class="line">            flag_r = <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    tdcolor(); <span class="comment">//更新格子颜色</span></span><br><span class="line">    <span class="keyword">if</span>(overflag)</span><br><span class="line">    isover(); <span class="comment">//判断游戏是否结束</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//上下左右操作函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//向上操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Up</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapy; i++) {</span><br><span class="line">        <span class="keyword">var</span> tempmap = []; <span class="comment">//记录该编号格子内的数</span></span><br><span class="line">        <span class="keyword">var</span> tempflag = []; <span class="comment">//记录该编号格子是否合并过(本次操作内)</span></span><br><span class="line">        <span class="keyword">var</span> z = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i + (mapx - <span class="number">1</span>) * mapy; j &gt;= i; j -= mapy) {</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (thetd.innerHTML == <span class="string">""</span>) {</span><br><span class="line">                tempmap[z] = <span class="number">0</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tempmap[z] = <span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">            }</span><br><span class="line">            tempflag[z] = <span class="literal">true</span>;</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//数字合并统一由changetd函数完成</span></span><br><span class="line">        tempmap = changetd(tempmap, tempflag, tempmap.length, <span class="number">0</span>); </span><br><span class="line">        z = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//更新格子内的显示内容</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i + (mapx - <span class="number">1</span>) * mapy; j &gt;= i; j -= mapy) {</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (tempmap[z] == <span class="number">0</span>) {</span><br><span class="line">                thetd.innerHTML = <span class="string">""</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                thetd.innerHTML = tempmap[z];</span><br><span class="line">            }</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//向下操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Down</span>(<span class="params"></span>) </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapy; i++) {</span><br><span class="line">        <span class="keyword">var</span> tempmap = [];</span><br><span class="line">        <span class="keyword">var</span> tempflag = [];</span><br><span class="line">        <span class="keyword">var</span> z = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i; j &lt;= i + (mapx - <span class="number">1</span>) * mapy; j += mapy) {</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (thetd.innerHTML == <span class="string">""</span>) {</span><br><span class="line">                tempmap[z] = <span class="number">0</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tempmap[z] = <span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">            }</span><br><span class="line">            tempflag[z] = <span class="literal">true</span>;</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">        tempmap = changetd(tempmap, tempflag, tempmap.length, <span class="number">0</span>);</span><br><span class="line">        z = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i; j &lt;= i + (mapx - <span class="number">1</span>) * mapy; j += mapy) {</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (tempmap[z] == <span class="number">0</span>) {</span><br><span class="line">                thetd.innerHTML = <span class="string">""</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                thetd.innerHTML = tempmap[z];</span><br><span class="line">            }</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//向左操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Left</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = mapy; i &lt;= mapy + (mapx - <span class="number">1</span>) * mapy; i += mapy) {</span><br><span class="line">        <span class="keyword">var</span> tempmap = [];</span><br><span class="line">        <span class="keyword">var</span> tempflag = [];</span><br><span class="line">        <span class="keyword">var</span> z = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i; j &gt;= i - mapy + <span class="number">1</span>; j--) {</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (thetd.innerHTML == <span class="string">""</span>) {</span><br><span class="line">                tempmap[z] = <span class="number">0</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tempmap[z] = <span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">            }</span><br><span class="line">            tempflag[z] = <span class="literal">true</span>;</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">        tempmap = changetd(tempmap, tempflag, tempmap.length, <span class="number">0</span>);</span><br><span class="line">        z = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i; j &gt;= i - mapy + <span class="number">1</span>; j--) {</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (tempmap[z] == <span class="number">0</span>) {</span><br><span class="line">                thetd.innerHTML = <span class="string">""</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                thetd.innerHTML = tempmap[z];</span><br><span class="line">            }</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//向右操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Right</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">1</span> + (mapx - <span class="number">1</span>) * mapy; i += mapy) {</span><br><span class="line">        <span class="keyword">var</span> tempmap = [];</span><br><span class="line">        <span class="keyword">var</span> tempflag = [];</span><br><span class="line">        <span class="keyword">var</span> z = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(i + <span class="string">" i"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i; j &lt; i + mapy; j++) {</span><br><span class="line">            <span class="built_in">console</span>.log(j);</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (thetd.innerHTML == <span class="string">""</span>) {</span><br><span class="line">                tempmap[z] = <span class="number">0</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tempmap[z] = <span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">            }</span><br><span class="line">            tempflag[z] = <span class="literal">true</span>;</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">        tempmap = changetd(tempmap, tempflag, tempmap.length, <span class="number">0</span>);</span><br><span class="line">        z = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i; j &lt; i + mapy; j++) {</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (tempmap[z] == <span class="number">0</span>) {</span><br><span class="line">                thetd.innerHTML = <span class="string">""</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                thetd.innerHTML = tempmap[z];</span><br><span class="line">            }</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changetd</span>(<span class="params">tempmap, tempflag, k, u</span>) </span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = k - <span class="number">1</span>; i &gt; u; i--) {</span><br><span class="line">        <span class="keyword">if</span> (tempmap[i - <span class="number">1</span>] != <span class="number">0</span> &amp;&amp; tempmap[i] == <span class="number">0</span>) {</span><br><span class="line">            <span class="comment">//移动</span></span><br><span class="line">            tempmap[i] = tempmap[i - <span class="number">1</span>];</span><br><span class="line">            tempmap[i - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//移动时合并标记也同样跟随移动</span></span><br><span class="line">            <span class="keyword">if</span> (tempflag[i - <span class="number">1</span>] == <span class="literal">false</span>) {</span><br><span class="line">                tempflag[i - <span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">                tempflag[i] = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            flag_r = <span class="literal">true</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (tempmap[i - <span class="number">1</span>] != <span class="number">0</span> &amp;&amp; tempmap[i] == tempmap[i - <span class="number">1</span>] &amp;&amp; tempflag[i] == <span class="literal">true</span> &amp;&amp; tempflag[i - <span class="number">1</span>] == <span class="literal">true</span>) {</span><br><span class="line">            <span class="comment">//合并</span></span><br><span class="line">            tempmap[i] *= <span class="number">2</span>;</span><br><span class="line">            tempmap[i - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//标记经过合并处理</span></span><br><span class="line">            tempflag[i] = <span class="literal">false</span>;</span><br><span class="line">            flag_r = <span class="literal">true</span>;</span><br><span class="line">            mark.innerHTML = <span class="built_in">parseInt</span>(mark.innerHTML) + tempmap[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//递归，以解决可能出现的合并后产生空位未处理</span></span><br><span class="line">        tempmap = changetd(tempmap, tempflag, k, i);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> tempmap;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tdcolor</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">//根据不同数值给格子渲染上不同背景色</span></span><br><span class="line">    <span class="keyword">var</span> tdcolors = {</span><br><span class="line">        <span class="string">""</span>: <span class="string">"#cdc1b4"</span>,</span><br><span class="line">        <span class="string">"2"</span>: <span class="string">"#eee4da"</span>,</span><br><span class="line">        <span class="string">"4"</span>: <span class="string">"#ede0c8"</span>,</span><br><span class="line">        <span class="string">"8"</span>: <span class="string">"#f2b179"</span>,</span><br><span class="line">        <span class="string">"16"</span>: <span class="string">"#f59563"</span>,</span><br><span class="line">        <span class="string">"32"</span>: <span class="string">"#f67c5f"</span>,</span><br><span class="line">        <span class="string">"64"</span>: <span class="string">"#f65e3b"</span>,</span><br><span class="line">        <span class="string">"128"</span>: <span class="string">"#edcf72"</span>,</span><br><span class="line">        <span class="string">"256"</span>: <span class="string">"#edcc61"</span>,</span><br><span class="line">        <span class="string">"512"</span>: <span class="string">"#9c0"</span>,</span><br><span class="line">        <span class="string">"1024"</span>: <span class="string">"#33b5e5"</span>,</span><br><span class="line">        <span class="string">"2048"</span>: <span class="string">"#09c"</span>,</span><br><span class="line">        <span class="string">"4096"</span>: <span class="string">"#a6c"</span>,</span><br><span class="line">        <span class="string">"8192"</span>: <span class="string">"#93c"</span></span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//数字颜色更改</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapx * mapy; i++) {</span><br><span class="line">        <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(i);</span><br><span class="line">        thetd.style.backgroundColor = tdcolors[thetd.innerHTML];</span><br><span class="line">        <span class="keyword">if</span> (thetd.innerHTML == <span class="number">2</span> || thetd.innerHTML == <span class="number">4</span>) {</span><br><span class="line">            thetd.style.color = <span class="string">"#776e65"</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            thetd.style.color = <span class="string">"#f8f5f1"</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isover</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapx * mapy; i++) {</span><br><span class="line">        <span class="keyword">var</span> td = <span class="built_in">document</span>.getElementById(i);</span><br><span class="line">        <span class="keyword">if</span>(td.innerHTML &gt;= youwin){</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).innerHTML=<span class="string">"恭喜你达到了 "</span>+td.innerHTML;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).style.display = <span class="string">"block"</span>;</span><br><span class="line">            youwin=<span class="built_in">parseInt</span>(td.innerHTML);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (td.innerHTML == <span class="string">""</span>) {</span><br><span class="line">            <span class="comment">//空值跳过</span></span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (i &lt;= (mapx - <span class="number">1</span>) * mapy &amp;&amp; td.innerHTML == <span class="built_in">document</span>.getElementById(i + mapy).innerHTML) {</span><br><span class="line">            <span class="comment">//判断该格子下方的数是否与之相同</span></span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (i % mapy != <span class="number">0</span> &amp;&amp; td.innerHTML == <span class="built_in">document</span>.getElementById(i + <span class="number">1</span>).innerHTML) {</span><br><span class="line">            <span class="comment">//判断该格子右边的数是否与之相同</span></span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            f++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (f == mapx * mapy) {</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).innerHTML+=<span class="string">"&lt;br&gt;GAME OVER"</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).style.display = <span class="string">"block"</span>;</span><br><span class="line">        overflag = <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>限于我个人糟糕的水平，上面的内容可能有许多不完善的地方或者有更好的办法，欢迎指出</p><p>也欢迎访问我的小破站<a href="https://www.226yzy.com/或者https://226yzy.github.io/">https://www.226yzy.com/或者https://226yzy.github.io/</a></p><p>我的Github<a href="https://github.com/226YZY">226YZY (星空下的YZY) (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 探索实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录整理 </tag>
            
            <tag> 2048 </tag>
            
            <tag> 小游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对于Git出现git@e.coding.net:(publickey).问题的解决</title>
      <link href="/2021/112156639.html"/>
      <url>/2021/112156639.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这标题有点长哈🤣</p><h1 id="1-问题的出现"><a href="#1-问题的出现" class="headerlink" title="1.问题的出现"></a>1.问题的出现</h1><p>最近我想更新上传内容的时候发现下图的报错</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBhtK.png" alt="报错"></p><p>由于我Github和Coding上都有部署，Github的上传成功了</p><p>但是Coding上的上传失败</p><p>之前从未出现过这种情况，我也未修改相关内容（最多可能更新升级了Git）</p><p>于是，我开始在网上寻求解决方案，在尝试过多个无效方案后</p><p>我在这篇中找到了解决方案<a href="https://blog.csdn.net/zhangyiminsunshine/article/details/121237492">(18条消息) 解决 Coding使用Git出现：Permission denied (publickey)._zhangyiminsunshine的博客-CSDN博客</a></p><p>我参考的这篇也没有讲出这种做法的原由，我才疏学浅具体的也不清楚（有大佬清楚的话欢迎留言Orz），不过最终来看还是有效果的，希望这个解决方案能给遇到同样问题的您一个帮助。</p><h1 id="2-问题的解决过程"><a href="#2-问题的解决过程" class="headerlink" title="2.问题的解决过程"></a>2.问题的解决过程</h1><h2 id="1-找到文件"><a href="#1-找到文件" class="headerlink" title="1.找到文件"></a>1.找到文件</h2><p>以我的路径为例，找到电脑上<code>Git的安装目录</code>（我的是装在E盘），打开<code>etc</code>文件夹，再打开<code>ssh</code>文件夹，找到<code>ssh_config</code>文件</p><p><img src="https://s4.ax1x.com/2021/12/11/oTB201.png" alt="路径"></p><h2 id="2-添加内容"><a href="#2-添加内容" class="headerlink" title="2.添加内容"></a>2.添加内容</h2><p>然后再编辑<code>ssh_config</code>文件 ，在这个文件最下面加上如下内容</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host *.coding.net</span><br><span class="line">        HostkeyAlgorithms +ssh-rsa</span><br><span class="line">        PubkeyAcceptedAlgorithms +ssh-rsa</span><br></pre></td></tr></tbody></table></figure><blockquote><p>我的另一篇<a href="https://226yzy.com/2021/121818354.html">Hexo博客部署至服务器 | 星空下的YZY (226yzy.com)</a>来的，注意将<code>*.coding.net</code>替换成你自己服务器的IP地址吼😆。其他遇到类似问题的，可以将<code>*.coding.net</code>替换成你出问题的平台</p></blockquote><p>参考如下</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBRTx.png" alt="添加内容"></p><h2 id="3-查看是否解决问题"><a href="#3-查看是否解决问题" class="headerlink" title="3.查看是否解决问题"></a>3.查看是否解决问题</h2><p>保存后在<code>git-bash.exe</code>中尝试运行<code>ssh -T git@e.coding.net</code>，具体参考<a href="https://help.coding.net/docs/repo/ssh/config.html">配置 SSH 公钥 - CODING 帮助中心</a></p><p>我成功后大致如下</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBgmR.png" alt="修改成功"></p><p>最后希望能帮助到有需要的你😉</p><p>祝我们的未来越来越好🚀</p>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Coding </tag>
            
            <tag> 解决 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>YZY的MATLAB笔记</title>
      <link href="/2021/083041604.html"/>
      <url>/2021/083041604.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文记录matlab代码相关的笔记，以后续学习参考（有些也许不是很高效，但是是我个人使用习惯）</p><p>（本文若有不正确的地方望大佬们多多指正Orz）</p><p>【本文优先发布于我的个人博客网站www.226yzy.com  ,<code>转载请注明出处</code>】</p><h1 id="1-绘图相关"><a href="#1-绘图相关" class="headerlink" title="1.绘图相关"></a>1.绘图相关</h1><h2 id="1-基本绘图"><a href="#1-基本绘图" class="headerlink" title="1.基本绘图"></a>1.基本绘图</h2><p>首先绘图需要点的横纵坐标的数据，这里使用下面的数据</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">1507.2</span>,<span class="number">1484.0</span>,<span class="number">1459.8</span>,<span class="number">1435.6</span>,<span class="number">1410.9</span>,<span class="number">1391.2</span>,<span class="number">1368.5</span>,<span class="number">1350.0</span>,<span class="number">1331.0</span>];</span><br><span class="line">y=[<span class="number">5170.8</span>,<span class="number">5175.4</span>,<span class="number">5176.1</span>,<span class="number">5176.6</span>,<span class="number">5175.1</span>,<span class="number">5191.9</span>,<span class="number">5197.9</span>,<span class="number">5220.3</span>,<span class="number">5240.6</span>];</span><br></pre></td></tr></tbody></table></figure><p>然后绘图的话我一般会通过下面这个函数绘制</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">'-'</span>);</span><br></pre></td></tr></tbody></table></figure><p>上面的三个参照，x和y就是点的横纵坐标的数据，对于第三个参数，为方便解释，由下表呈现</p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>MATLAB</strong> <strong>绘图命令的各种选项</strong></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center"><strong>曲线线型</strong></td><td style="text-align:center"></td><td style="text-align:center"><strong>曲线颜色</strong></td><td style="text-align:center"></td><td style="text-align:center"><strong>曲线颜色</strong></td><td style="text-align:center"></td><td style="text-align:center"><strong>标记符号</strong></td><td style="text-align:center"></td><td style="text-align:center"><strong>标记符号</strong></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><strong>选项</strong></td><td style="text-align:center"><strong>意义</strong></td><td style="text-align:center"><strong>选项</strong></td><td style="text-align:center"><strong>意义</strong></td><td style="text-align:center"><strong>选项</strong></td><td style="text-align:center"><strong>意义</strong></td><td style="text-align:center"><strong>选项</strong></td><td style="text-align:center"><strong>意义</strong></td><td style="text-align:center"><strong>选项</strong></td><td style="text-align:center"><strong>意义</strong></td></tr><tr><td style="text-align:center"><strong>‘-’</strong></td><td style="text-align:center"><strong>实线</strong></td><td style="text-align:center"><strong>‘b’</strong></td><td style="text-align:center"><strong>蓝色</strong></td><td style="text-align:center"><strong>‘c’</strong></td><td style="text-align:center"><strong>蓝**</strong>绿色**</td><td style="text-align:center"><strong>‘*’</strong></td><td style="text-align:center"><strong>星号</strong></td><td style="text-align:center"><strong>‘pentagram’</strong></td><td style="text-align:center"><strong>☆</strong></td></tr><tr><td style="text-align:center"><strong>‘- -’</strong></td><td style="text-align:center"><strong>虚线</strong></td><td style="text-align:center"><strong>‘g’</strong></td><td style="text-align:center"><strong>绿色</strong></td><td style="text-align:center"><strong>‘k’</strong></td><td style="text-align:center"><strong>黑色</strong></td><td style="text-align:center"><strong>‘**</strong>.’**</td><td style="text-align:center"><strong>点号</strong></td><td style="text-align:center"><strong>‘o’</strong></td><td style="text-align:center"><strong>○</strong></td></tr><tr><td style="text-align:center"><strong>‘:’</strong></td><td style="text-align:center"><strong>点线</strong></td><td style="text-align:center"><strong>‘m’</strong></td><td style="text-align:center"><strong>红紫色</strong></td><td style="text-align:center"><strong>‘r’</strong></td><td style="text-align:center"><strong>红色</strong></td><td style="text-align:center"><strong>‘x’</strong></td><td style="text-align:center"><strong>叉号</strong></td><td style="text-align:center"><strong>‘square’</strong></td><td style="text-align:center"><strong>□</strong></td></tr><tr><td style="text-align:center"><strong>‘-.’</strong></td><td style="text-align:center"><strong>点划线</strong></td><td style="text-align:center"><strong>‘w’</strong></td><td style="text-align:center"><strong>白色</strong></td><td style="text-align:center"><strong>‘y’</strong></td><td style="text-align:center"><strong>黄色</strong></td><td style="text-align:center"><strong>‘v’</strong></td><td style="text-align:center"><strong>▽</strong></td><td style="text-align:center"><strong>‘diamond’</strong></td><td style="text-align:center"><strong>◇</strong></td></tr><tr><td style="text-align:center"><strong>‘none’</strong></td><td style="text-align:center"><strong>无线</strong></td><td style="text-align:center">**用一个1x3向量任意指定[r,g,b]红绿蓝三原色</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><strong>‘^’</strong></td><td style="text-align:center"><strong>△</strong></td><td style="text-align:center"><strong>‘hexagram’</strong></td><td style="text-align:center"><strong>六角星</strong></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><strong>‘&gt;’</strong></td><td style="text-align:center"><strong>左三角</strong></td><td style="text-align:center"><strong>‘&lt;’</strong></td><td style="text-align:center"><strong>右三角</strong></td></tr></tbody></table></div><h2 id="2-使用plot3-函数绘制三维图像"><a href="#2-使用plot3-函数绘制三维图像" class="headerlink" title="2. 使用plot3()函数绘制三维图像"></a>2. 使用plot3()函数绘制三维图像</h2><p>绘制三维图像需要x、y、z、轴上的坐标数据，这里使用下面的数据</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">1507.2</span>,<span class="number">1484.0</span>,<span class="number">1459.8</span>,<span class="number">1435.6</span>,<span class="number">1410.9</span>,<span class="number">1391.2</span>,<span class="number">1368.5</span>,<span class="number">1350.0</span>,<span class="number">1331.0</span>];</span><br><span class="line">y=[<span class="number">5170.8</span>,<span class="number">5175.4</span>,<span class="number">5176.1</span>,<span class="number">5176.6</span>,<span class="number">5175.1</span>,<span class="number">5191.9</span>,<span class="number">5197.9</span>,<span class="number">5220.3</span>,<span class="number">5240.6</span>];</span><br><span class="line">z=[<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br></pre></td></tr></tbody></table></figure><p>然后函数调用如下即可</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">plot3</span>(x,y,z,<span class="string">'-'</span>)</span><br></pre></td></tr></tbody></table></figure><p>各参数具体含义与<code>plot（）</code>函数基本相同</p><h2 id="3-为图添加标题、坐标轴名称、格栅"><a href="#3-为图添加标题、坐标轴名称、格栅" class="headerlink" title="3. 为图添加标题、坐标轴名称、格栅"></a>3. 为图添加标题、坐标轴名称、格栅</h2><p>为了绘制的图的完整就需要添加标题、坐标轴名称等信息</p><p>标题、坐标轴名称的添加如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xlabel(<span class="string">'x轴'</span>);</span><br><span class="line">ylabel(<span class="string">'y轴'</span>);</span><br><span class="line">zlabel(<span class="string">'z轴'</span>);</span><br><span class="line">title(<span class="string">'标题'</span>);</span><br></pre></td></tr></tbody></table></figure><p>格栅的添加需输入命令</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grid on</span><br></pre></td></tr></tbody></table></figure><p>关闭格栅则输入命令</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grid off</span><br></pre></td></tr></tbody></table></figure><h2 id="4-同一图内多条曲线绘制，及双y轴图像、多幅图的绘制"><a href="#4-同一图内多条曲线绘制，及双y轴图像、多幅图的绘制" class="headerlink" title="4.同一图内多条曲线绘制，及双y轴图像、多幅图的绘制"></a>4.同一图内多条曲线绘制，及双y轴图像、多幅图的绘制</h2><h3 id="1-同一图内多条曲线绘制"><a href="#1-同一图内多条曲线绘制" class="headerlink" title="1.同一图内多条曲线绘制"></a>1.同一图内多条曲线绘制</h3><p>假设数据如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">1507.2</span>,<span class="number">1484.0</span>,<span class="number">1459.8</span>,<span class="number">1435.6</span>,<span class="number">1410.9</span>,<span class="number">1391.2</span>,<span class="number">1368.5</span>,<span class="number">1350.0</span>,<span class="number">1331.0</span>];</span><br><span class="line">y=[<span class="number">5170.8</span>,<span class="number">5175.4</span>,<span class="number">5176.1</span>,<span class="number">5176.6</span>,<span class="number">5175.1</span>,<span class="number">5191.9</span>,<span class="number">5197.9</span>,<span class="number">5220.3</span>,<span class="number">5240.6</span>];</span><br><span class="line">z=[<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br></pre></td></tr></tbody></table></figure><p>如果绘制两条则如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">'-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(x,z,<span class="string">'-'</span>);</span><br></pre></td></tr></tbody></table></figure><p>即插入<code>hold on;</code></p><h3 id="2-双y轴图像"><a href="#2-双y轴图像" class="headerlink" title="2.双y轴图像"></a>2.双y轴图像</h3><p>双y轴图像的绘制如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plotyy(x,y,x,z)</span><br></pre></td></tr></tbody></table></figure><p>前面一对为左y轴，后面一对为右y轴</p><h3 id="3-多幅图的绘制"><a href="#3-多幅图的绘制" class="headerlink" title="3.多幅图的绘制"></a>3.多幅图的绘制</h3><p>假设我们需要绘制6幅图，并以3行2列的形式呈现即下图的样子</p><p><img src="https://s4.ax1x.com/2021/12/11/oTB4fO.png" alt="matlab多图示例"></p><p>实现上图的代码大致如下（数据的就没放进去了）</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(t2,A1,<span class="string">'b-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(t2,k1,<span class="string">'r-'</span>);</span><br><span class="line">ylabel(<span class="string">'监测量'</span>);</span><br><span class="line">xlabel(<span class="string">'时间'</span>);</span><br><span class="line">title(<span class="string">'PM2.5'</span>);</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(t2,A2,<span class="string">'b-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(t2,k2,<span class="string">'r-'</span>);</span><br><span class="line">ylabel(<span class="string">'监测量'</span>);</span><br><span class="line">xlabel(<span class="string">'时间'</span>);</span><br><span class="line">title(<span class="string">'PM10'</span>);</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="built_in">plot</span>(t2,A3,<span class="string">'b-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(t2,k3,<span class="string">'r-'</span>);</span><br><span class="line">ylabel(<span class="string">'监测量'</span>);</span><br><span class="line">xlabel(<span class="string">'时间'</span>);</span><br><span class="line">title(<span class="string">'CO'</span>);</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line"><span class="built_in">plot</span>(t2,A4,<span class="string">'b-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(t2,k4,<span class="string">'r-'</span>);</span><br><span class="line">ylabel(<span class="string">'监测量'</span>);</span><br><span class="line">xlabel(<span class="string">'时间'</span>);</span><br><span class="line">title(<span class="string">'NO2'</span>);</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>);</span><br><span class="line"><span class="built_in">plot</span>(t2,A5,<span class="string">'b-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(t2,k5,<span class="string">'r-'</span>);</span><br><span class="line">ylabel(<span class="string">'监测量'</span>);</span><br><span class="line">xlabel(<span class="string">'时间'</span>);</span><br><span class="line">title(<span class="string">'SO2'</span>);</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">6</span>);</span><br><span class="line"><span class="built_in">plot</span>(t2,A6,<span class="string">'b-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(t2,k6,<span class="string">'r-'</span>);</span><br><span class="line">ylabel(<span class="string">'监测量'</span>);</span><br><span class="line">xlabel(<span class="string">'时间'</span>);</span><br><span class="line">title(<span class="string">'O3'</span>);</span><br></pre></td></tr></tbody></table></figure><p>这主要是用了<code>subplot()</code>函数；</p><p>该函数有三个参数，</p><p>第一个代表最终绘制有几行，</p><p>第二个代表最终绘制有几列，</p><p>第三代表该图为第几幅图</p><h2 id="5-调整坐标比例避免图像变形"><a href="#5-调整坐标比例避免图像变形" class="headerlink" title="5. 调整坐标比例避免图像变形"></a>5. 调整坐标比例避免图像变形</h2><p>这个方法在我的另一篇文章有提到过（<a href="https://226yzy.com/2021/083053025.html#toc-heading-6">MATLAB拟合圆 | 星空下的YZY (226yzy.com)</a>）</p><p>输入下面的命令</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis equal</span><br></pre></td></tr></tbody></table></figure><p>该命令就是保证横纵坐标轴的最小刻度一致</p><p>得到的图像如下</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBo1e.png" alt="matlab拟合圆axis equal图像调整"></p><p>或者用另一个命令</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis square</span><br></pre></td></tr></tbody></table></figure><p>该命令使横纵坐标比例为1</p><p>得到的图像如下</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBT6H.png" alt="matlab拟合圆axis square图像调整"></p><p>若想恢复默认，只需输入下面的命令即可</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis auto</span><br></pre></td></tr></tbody></table></figure><p>这样你就可以得到一个正常的圆的图像了</p><h2 id="6-MATLAB提供的特殊二维曲线绘制函数"><a href="#6-MATLAB提供的特殊二维曲线绘制函数" class="headerlink" title="6. MATLAB提供的特殊二维曲线绘制函数"></a>6. MATLAB提供的特殊二维曲线绘制函数</h2><p>其它的一些MATLAB提供的特殊二维曲线绘制函数如下表</p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>MATLAB提供的特殊二维曲线绘制函数</strong></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center"><strong>函数名</strong></td><td style="text-align:center"><strong>意义</strong></td><td style="text-align:center"><strong>常用调用格式</strong></td></tr><tr><td style="text-align:center"><strong>bar()</strong></td><td style="text-align:center"><strong>二维条形图</strong></td><td style="text-align:center"><strong>bar(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>comet()</strong></td><td style="text-align:center"><strong>彗星状轨迹图</strong></td><td style="text-align:center"><strong>comet(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>compass()</strong></td><td style="text-align:center"><strong>罗盘图</strong></td><td style="text-align:center"><strong>compass(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>errorbar()</strong></td><td style="text-align:center"><strong>误差限图形</strong></td><td style="text-align:center"><strong>errorbar(x,y,l,u)</strong></td></tr><tr><td style="text-align:center"><strong>feather()</strong></td><td style="text-align:center"><strong>羽毛状图</strong></td><td style="text-align:center"><strong>feather(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>fill()</strong></td><td style="text-align:center"><strong>二维填充函数</strong></td><td style="text-align:center"><strong>fill(x,y,c)</strong></td></tr><tr><td style="text-align:center"><strong>hist()</strong></td><td style="text-align:center"><strong>直方图</strong></td><td style="text-align:center"><strong>hist(y,n)</strong></td></tr><tr><td style="text-align:center"><strong>loglog()</strong></td><td style="text-align:center"><strong>对数图</strong></td><td style="text-align:center"><strong>loglog(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>polar()</strong></td><td style="text-align:center"><strong>极坐标图</strong></td><td style="text-align:center"><strong>polar(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>quiver()</strong></td><td style="text-align:center"><strong>磁力线图</strong></td><td style="text-align:center"><strong>quiver(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>stairs()</strong></td><td style="text-align:center"><strong>阶梯图形</strong></td><td style="text-align:center"><strong>stairs(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>stem()</strong></td><td style="text-align:center"><strong>火柴杆图</strong></td><td style="text-align:center"><strong>stem(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>semilogx() </strong> <strong>semilogy()</strong></td><td style="text-align:center"><strong>半对数图</strong></td><td style="text-align:center"><strong>semilogx(x,y)   semilogy(x,y)</strong></td></tr></tbody></table></div><h2 id="7-matlab绘制散点图矩阵"><a href="#7-matlab绘制散点图矩阵" class="headerlink" title="7. matlab绘制散点图矩阵"></a>7. matlab绘制散点图矩阵</h2><p>matlab绘制散点图矩阵可通过<code>plotmatrix()</code>函数</p><p>可通过下面的代码得到一个简单的效果图</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X = <span class="built_in">randn</span>(<span class="number">50</span>,<span class="number">3</span>);  <span class="comment">%创建一个由随机数组成的 50×3 数组。</span></span><br><span class="line">plotmatrix(X)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2021/12/11/oTB7Xd.png" alt="matlab散点图矩阵示图"></p><p>比较完整的调用如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X = <span class="built_in">randn</span>(<span class="number">50</span>,<span class="number">3</span>);</span><br><span class="line">plotmatrix(X)</span><br><span class="line">[S,AX,BigAx,H,HAx] = plotmatrix(X)</span><br></pre></td></tr></tbody></table></figure><p>根据官方文档的说明<a href="https://ww2.mathworks.cn/help/matlab/ref/plotmatrix.html#d123e956614">散点图矩阵 - MATLAB plotmatrix - MathWorks 中国</a>，上面参数的含义如下</p><ul><li><code>S</code> - 散点图的图形线条对象</li><li><code>AX</code> - 每个子坐标区的坐标区对象</li><li><code>BigAx</code> - 容纳子坐标区的主坐标区的坐标区对象</li><li><code>H</code> - 直方图的直方图对象</li><li><code>HAx</code> - 不可见的直方图坐标区的坐标区对象</li></ul><h1 id="2-matlab对Excel数据的读写"><a href="#2-matlab对Excel数据的读写" class="headerlink" title="2. matlab对Excel数据的读写"></a>2. matlab对Excel数据的读写</h1><h2 id="1-对Excel数据的读入"><a href="#1-对Excel数据的读入" class="headerlink" title="1.对Excel数据的读入"></a>1.对Excel数据的读入</h2><p>对Excel数据的读入我个人还是比较习惯用<code>xlsread(）</code>函数的，其调用如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t2=xlsread(<span class="string">'C:\Users\Dell\Desktop\新建 XLSX 工作表.xlsx'</span>,<span class="number">3</span>,<span class="string">'M2:M4141'</span>);</span><br></pre></td></tr></tbody></table></figure><p>该函数包含了三个参数</p><p>第一个参数是文件的路径</p><p>第二个参数是第几个工作表，这个参数你也可以写该工作表的名称，如果该工作表名为<code>Sheet3</code>可如下调用</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&nbsp;t2=xlsread(<span class="string">'C:\Users\Dell\Desktop\新建 XLSX 工作表.xlsx'</span>,<span class="string">'Sheet3'</span>,<span class="string">'M2:M4141'</span>);</span><br></pre></td></tr></tbody></table></figure><p>第三个参数是调取的数据在Excel表中的具体位置范围</p><h2 id="2-对Excel数据的写入"><a href="#2-对Excel数据的写入" class="headerlink" title="2. 对Excel数据的写入"></a>2. 对Excel数据的写入</h2><p>对Excel数据的写入我个人还是比较习惯用xlswrite(）函数，其调用如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xlswrite(<span class="string">'C:\Users\Dell\Desktop\2019D\新建 XLSX 工作表.xlsx'</span>,kk,<span class="number">2</span>,<span class="string">'A1'</span>);</span><br></pre></td></tr></tbody></table></figure><p>该函数包含了四个参数</p><p>第一个参数是文件的路径</p><p>第二个参数是要写入的数据集的名称</p><p>第三个参数是第几个工作表，这个参数你也可以写该工作表的名称,</p><p>第四个参数是在表格中写入的位置，如果默认从A1的位置开始，则可以不写</p><h1 id="3-拟合及求解相关内容"><a href="#3-拟合及求解相关内容" class="headerlink" title="3.拟合及求解相关内容"></a>3.拟合及求解相关内容</h1><h2 id="1-多项式拟合"><a href="#1-多项式拟合" class="headerlink" title="1.多项式拟合"></a>1.多项式拟合</h2><p>首先我找到了之前我自己比较早的时候写的一份代码，该代码进行的是一元一次回归方程的拟合结果的绘图，并预测1997和1998年的值（x0和y0中有这两年的数据是因为前面运行得出了（即第一处注释的位置），后续添加上去的）</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x0=[<span class="number">1990</span> <span class="number">1991</span> <span class="number">1992</span> <span class="number">1993</span> <span class="number">1994</span> <span class="number">1995</span> <span class="number">1996</span> <span class="number">1997</span> <span class="number">1998</span>];</span><br><span class="line">y0=[<span class="number">70</span> <span class="number">122</span> <span class="number">144</span> <span class="number">152</span> <span class="number">174</span> <span class="number">196</span> <span class="number">202</span> <span class="number">233.4286</span> <span class="number">253.9286</span>];</span><br><span class="line"><span class="built_in">plot</span>(x0,y0,<span class="string">'*'</span>)</span><br><span class="line">a=polyfit(x0,y0,<span class="number">1</span>)</span><br><span class="line">poly2sym(a)</span><br><span class="line"><span class="comment">%y97=polyval(a,1997)</span></span><br><span class="line"><span class="comment">%y98=polyval(a,1998)</span></span><br><span class="line">xi=<span class="number">1990</span>:<span class="number">0.1</span>:<span class="number">1998</span>;</span><br><span class="line">yi=interp1(x0,y0,xi);</span><br><span class="line">yyi=(<span class="number">721279745102309</span>*xi)/<span class="number">35184372088832</span> - <span class="number">5594463330784247</span>/<span class="number">137438953472</span></span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="comment">%yyi=interp1(x0,y0,xi,'spline');</span></span><br><span class="line"><span class="built_in">plot</span>(xi,yyi,<span class="string">'b-'</span>)</span><br></pre></td></tr></tbody></table></figure><h3 id="1-polyfit-函数"><a href="#1-polyfit-函数" class="headerlink" title="1. polyfit()函数"></a>1. polyfit()函数</h3><p><code>polyfit()</code>函数是用于多项式曲线拟合的</p><p>该函数有3个参数</p><p>前两个即横纵坐标的数据</p><p>第三个代表的是几次多项式</p><h3 id="2-poly2sym-函数"><a href="#2-poly2sym-函数" class="headerlink" title="2. poly2sym()函数"></a>2. poly2sym()函数</h3><p><code>poly2sym()</code>函数它是把系数组转换成自符号多项式</p><h3 id="3-polyval-）函数"><a href="#3-polyval-）函数" class="headerlink" title="3. polyval(）函数"></a>3. polyval(）函数</h3><p><code>polyval()</code>函数用于多项式计算</p><h3 id="4-interp1-函数"><a href="#4-interp1-函数" class="headerlink" title="4. interp1()函数"></a>4. interp1()函数</h3><p><code>interp1()</code>函数用于一维数据插值</p><p>该函数有4个参数分别为样本点、样本值、查询点和插值方法</p><p>插值方法具体见该链接<a href="https://ww2.mathworks.cn/help/matlab/ref/interp1.html#btwp6lt-1-x">一维数据插值（表查找） - MATLAB interp1 - MathWorks 中国</a></p><h2 id="2-方程交点求解"><a href="#2-方程交点求解" class="headerlink" title="2.方程交点求解"></a>2.方程交点求解</h2><p>对于方程间交点求解代码如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">syms x y</span><br><span class="line">s=solve(y==-sqrt(0.4592.^2-(x-51.2165).^2)+4.2939,y==-2.7415*x+134.6935);</span><br><span class="line">xx=double(s.x)</span><br><span class="line">yy=double(s.y)</span><br></pre></td></tr></tbody></table></figure><p><code>solve()</code>函数中方程可替换</p><p>xx和yy分别代表交点的横纵坐标</p><h2 id="3-修正倾斜角度"><a href="#3-修正倾斜角度" class="headerlink" title="3.修正倾斜角度"></a>3.修正倾斜角度</h2><p>修正倾斜角度代码如下，下面代码在24.5为倾斜角度</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AA=A1*<span class="built_in">cos</span>(<span class="built_in">pi</span>/<span class="number">24.5</span>)-A2*<span class="built_in">sin</span>(<span class="built_in">pi</span>/<span class="number">24.5</span>);</span><br><span class="line">AB=A1*<span class="built_in">sin</span>(<span class="built_in">pi</span>/<span class="number">24.5</span>)+A2*<span class="built_in">cos</span>(<span class="built_in">pi</span>/<span class="number">24.5</span>);</span><br><span class="line"><span class="built_in">plot</span>(AA,AB,<span class="string">'-'</span>);</span><br></pre></td></tr></tbody></table></figure><h2 id="4-圆的拟合"><a href="#4-圆的拟合" class="headerlink" title="4. 圆的拟合"></a>4. 圆的拟合</h2><p>这个我在另一篇有专门写，这里就不再赘述了</p><p>传送门：<a href="https://226yzy.com/2021/083053025.html">MATLAB拟合圆 | 星空下的YZY (226yzy.com)</a></p><h2 id="5-多元回归方程拟合"><a href="#5-多元回归方程拟合" class="headerlink" title="5.多元回归方程拟合"></a>5.多元回归方程拟合</h2><p>当时有参考这一篇<a href="https://blog.csdn.net/YinJianxiang/article/details/81464245">(4条消息) [matlab]多元线性回归regress_YinJianxiang的博客-CSDN博客_matlab多元线性回归</a></p><p>对于该问题代码如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X1 = [<span class="built_in">ones</span>(<span class="built_in">size</span>(A1)) B1 C1 C2 C3 C4 C5];</span><br><span class="line">[b1,bint1,r1,rint1,stats1] = regress(A1,X1);</span><br></pre></td></tr></tbody></table></figure><p><code>X1</code>中的各个参数为矩阵，具体参数个数看所求因素的个数</p><p>例如B1、C1这些代表了多元回归方程的各项除系数外的内容</p><h3 id="1-size-函数"><a href="#1-size-函数" class="headerlink" title="1. size()函数"></a>1. size()函数</h3><p><code>size（）</code>函数可获取该矩阵的行数和列数</p><h3 id="2-ones-函数"><a href="#2-ones-函数" class="headerlink" title="2. ones()函数"></a>2. ones()函数</h3><p><code>ones（）</code>函数表示生成全1的矩阵，<code>ones(size(A1))</code>产生的矩阵是与A1大小相同的全1矩阵</p><h3 id="3-regress-函数"><a href="#3-regress-函数" class="headerlink" title="3. regress()函数"></a>3. regress()函数</h3><p><code>regress()</code>函数是多元线性回归的求解函数</p><p><code>A1</code>代表预期结果的数据，<code>X1</code>则如上，代表各因素的数据</p><p>根据<a href="https://ww2.mathworks.cn/help/stats/regress.html#d123e31801">多元线性回归 - MATLAB regress - MathWorks 中国</a>的描述</p><p>b1,bint1,r1,rint1,stats1这些的含义如下</p><p><code>b1</code>为多元线性回归的系数估计值</p><p><code>bint1</code>为系数估计值的置信边界下限和置信边界上限，即置信区间</p><p><code>r1</code>为残差</p><p><code>rint1</code>用于诊断离群值的区间</p><p><code>stats1</code>为模型统计量以数值向量形式返回，包括 R² 统计量、F 统计量及其 P 值，以及误差方差的估计值</p><p>我们得到了这些数据后，就可以通过得到的多元回归方程计算该方程的数据，并得知拟合情况</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">k1=b1(<span class="number">1</span>)+b1(<span class="number">2</span>)*B1+b1(<span class="number">3</span>)*C1+b1(<span class="number">4</span>)*C2+b1(<span class="number">5</span>)*C3+b1(<span class="number">6</span>)*C4+b1(<span class="number">7</span>)*C5;</span><br></pre></td></tr></tbody></table></figure><h3 id="4-rcoplot-函数"><a href="#4-rcoplot-函数" class="headerlink" title="4. rcoplot()函数"></a>4. rcoplot()函数</h3><p>在使用过上述的<code>regress()</code>函数后，可以通过下面的代码绘制残差图</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rcoplot(r1,rint1)</span><br></pre></td></tr></tbody></table></figure><p><code>rcoplot()</code>函数有两个参数</p><p>第一个为残差</p><p>第二个为诊断离群值的区间</p><h1 id="4-MTALAB图论工具箱"><a href="#4-MTALAB图论工具箱" class="headerlink" title="4.MTALAB图论工具箱"></a>4.MTALAB图论工具箱</h1><p>在之前我的一篇文章中，我通过代码实现Floyd和Dijkstra算法<a href="https://226yzy.com/2021/082760550.html">最短路径—Floyd与Dijkstra算法 | 星空下的YZY (226yzy.com)</a>matlab中提供了相关的工具箱，我们可以通过命令调取使用，还可以绘制图像更加直观地看到结果。</p><h2 id="1-Matlab图论工具箱的命令"><a href="#1-Matlab图论工具箱的命令" class="headerlink" title="1. Matlab图论工具箱的命令"></a>1. Matlab图论工具箱的命令</h2><p>根据<code>《数学建模算法与应用（第2版）》</code>第54页中整理的Matlab图论工具箱的命令</p><div class="table-container"><table><thead><tr><th style="text-align:center">命令名</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">graphallshortestpaths</td><td style="text-align:center">求图中所有顶点对之间的最短距离</td></tr><tr><td style="text-align:center">graphconncomp</td><td style="text-align:center">找无向图的连通分支，或有向图的强弱连通分支</td></tr><tr><td style="text-align:center">graphisdag</td><td style="text-align:center">测试有向图是否含有圈，不含圈返回1，否则返回0</td></tr><tr><td style="text-align:center">graphisomorphism</td><td style="text-align:center">确定两个图是否同构，同构返回1，否则返回0</td></tr><tr><td style="text-align:center">graphisspantree</td><td style="text-align:center">确定一个图是否是生成树，是返回1，否则返回0</td></tr><tr><td style="text-align:center">graphmaxflow</td><td style="text-align:center">计算有向图的最大流</td></tr><tr><td style="text-align:center">graphminspantree</td><td style="text-align:center">在图中找最小生成树</td></tr><tr><td style="text-align:center">graphpred2path</td><td style="text-align:center">把前驱顶点序列变成路径的顶点序列</td></tr><tr><td style="text-align:center">graphshortestpath</td><td style="text-align:center">求图中指定的一对顶点间的最短距离和最短路径</td></tr><tr><td style="text-align:center">graphtopootder</td><td style="text-align:center">执行有向无圈图的拓扑排序</td></tr><tr><td style="text-align:center">graphtraverse</td><td style="text-align:center">求从一顶点出发，所能遍历图中的顶点</td></tr></tbody></table></div><h2 id="2-绘制有向图"><a href="#2-绘制有向图" class="headerlink" title="2.绘制有向图"></a>2.绘制有向图</h2><p>通过matlab可以直观地画出相应的路径图</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">t=[<span class="number">41</span> <span class="number">99</span> <span class="number">51</span> <span class="number">32</span> <span class="number">15</span> <span class="number">45</span> <span class="number">38</span> <span class="number">32</span> <span class="number">36</span> <span class="number">29</span> <span class="number">21</span>];<span class="comment">%路径耗时</span></span><br><span class="line">s=[<span class="number">6</span> <span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">4</span> <span class="number">5</span> <span class="number">5</span> <span class="number">6</span> <span class="number">1</span>];<span class="comment">%起点</span></span><br><span class="line">e=[<span class="number">2</span> <span class="number">6</span> <span class="number">3</span> <span class="number">5</span> <span class="number">4</span> <span class="number">1</span> <span class="number">6</span> <span class="number">3</span> <span class="number">4</span> <span class="number">3</span> <span class="number">5</span>];<span class="comment">%与起点对应的目的地</span></span><br><span class="line">dg=sparse(s,e,t)<span class="comment">%构造的稀疏矩阵表示图</span></span><br><span class="line">h=view(biograph(dg,[],<span class="string">'ShowWeights'</span>,<span class="string">'on'</span>))<span class="comment">%显示图的结构</span></span><br><span class="line">dist=graphallshortestpaths(dg)<span class="comment">%显示图中每对结点之间的最短路径　</span></span><br></pre></td></tr></tbody></table></figure><p><code>view()</code>设置相机视线具体见官方文档解释<a href="https://ww2.mathworks.cn/help/matlab/ref/view.html#mw_5398a10d-3e0a-466b-a957-8b01860d91ef">相机视线 - MATLAB view - MathWorks 中国</a></p><p><code>sparse()</code>函数是用于构建稀疏矩阵</p><p><code>ShowWeights=off</code>表示无权图，<code>on</code>表示赋权图 </p><p>另外<code>ShowArrows=off</code>表示无向图，<code>on</code>表示有向图</p><p><code>graphallshortestpaths()</code>可以得出各点间的最短路径</p><h1 id="5-其他"><a href="#5-其他" class="headerlink" title="5.其他"></a>5.其他</h1><h2 id="1-最短路径"><a href="#1-最短路径" class="headerlink" title="1.最短路径"></a>1.最短路径</h2><p>这个我在另一篇也有专门写，这里就不再赘述了</p><p>无论以什么方式引用，请注明出处吼😉</p><p>这篇许多代码都是我自己写的创作不易😂</p><p>传送门：<a href="https://226yzy.com/2021/082760550.html">最短路径—Floyd与Dijkstra算法 | 星空下的YZY (226yzy.com)</a></p><h2 id="2-matlab官方中文在线文档"><a href="#2-matlab官方中文在线文档" class="headerlink" title="2. matlab官方中文在线文档"></a>2. matlab官方中文在线文档</h2><p>有些描述准确一点还是参考官方文档比较好</p><p><a href="https://ww2.mathworks.cn/help/matlab/index.html">MATLAB Documentation - MathWorks 中国</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> MATLAB </tag>
            
            <tag> 数学建模 </tag>
            
            <tag> 汇总 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB拟合圆</title>
      <link href="/2021/083053025.html"/>
      <url>/2021/083053025.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>   本文整理了我在寻求拟合圆的方法中找到的两份matlab代码，内容有参考，将注明出处</p><p>（本文若有不正确的地方望大佬们多多指正Orz）</p><p>【本文优先发布于我的个人博客网站www.226yzy.com  ,<code>转载请注明出处</code>】</p><h1 id="最小二乘拟合圆"><a href="#最小二乘拟合圆" class="headerlink" title="最小二乘拟合圆"></a>最小二乘拟合圆</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>​     当时参考了这份博客的代码<a href="https://blog.csdn.net/diziyue8622/article/details/101461615">(4条消息) 最小二乘圆拟合circfit m sci 代码_diziyue8622的博客-CSDN博客</a></p><h3 id="1-保存函数"><a href="#1-保存函数" class="headerlink" title="1. 保存函数"></a>1. 保存函数</h3><p>​     先将下面这份代码保存（保存至默认路径）</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[xc,yc,R,a]</span> = <span class="title">circfit</span><span class="params">(x,y)</span></span></span><br><span class="line">n=<span class="built_in">length</span>(x);</span><br><span class="line">xx=x.*x;</span><br><span class="line">yy=y.*y;</span><br><span class="line">xy=x.*y;</span><br><span class="line">A=[sum(x) sum(y) n;sum(xy) sum(yy) sum(y);sum(xx) sum(xy) sum(x)];</span><br><span class="line">B=[-sum(xx+yy) ; -sum(xx.*y+yy.*y) ; -sum(xx.*x+xy.*y)];</span><br><span class="line">a=A\B;</span><br><span class="line">xc = <span class="number">-.5</span>*a(<span class="number">1</span>);</span><br><span class="line">yc = <span class="number">-.5</span>*a(<span class="number">2</span>);</span><br><span class="line">R = <span class="built_in">sqrt</span>((a(<span class="number">1</span>)^<span class="number">2</span>+a(<span class="number">2</span>)^<span class="number">2</span>)/<span class="number">4</span>-a(<span class="number">3</span>));</span><br></pre></td></tr></tbody></table></figure><p>保存成功后，调用方式如下</p><h3 id="2-调用函数"><a href="#2-调用函数" class="headerlink" title="2. 调用函数"></a>2. 调用函数</h3><p>​    首先，我们需要各点的坐标数据，这里为方便演示定义了下面的九组坐标</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">1507.2</span>,<span class="number">1484.0</span>,<span class="number">1459.8</span>,<span class="number">1435.6</span>,<span class="number">1410.9</span>,<span class="number">1391.2</span>,<span class="number">1368.5</span>,<span class="number">1350.0</span>,<span class="number">1331.0</span>];</span><br><span class="line">y=[<span class="number">5170.8</span>,<span class="number">5175.4</span>,<span class="number">5176.1</span>,<span class="number">5176.6</span>,<span class="number">5175.1</span>,<span class="number">5191.9</span>,<span class="number">5197.9</span>,<span class="number">5220.3</span>,<span class="number">5240.6</span>];</span><br></pre></td></tr></tbody></table></figure><p>​    然后输入下面的代码调用即可</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[xc,yc,R,a]=circfit(x,y)</span><br></pre></td></tr></tbody></table></figure><h3 id="3-参数解读"><a href="#3-参数解读" class="headerlink" title="3. 参数解读"></a>3. 参数解读</h3><p>调用后得到以下结果</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">xc =</span><br><span class="line">   <span class="number">1.4625e+03</span></span><br><span class="line"></span><br><span class="line">yc =</span><br><span class="line">   <span class="number">5.3278e+03</span></span><br><span class="line"></span><br><span class="line">R =</span><br><span class="line">  <span class="number">156.7942</span></span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line">   <span class="number">1.0e+07</span> *</span><br><span class="line"></span><br><span class="line">   <span class="number">-0.0003</span></span><br><span class="line">   <span class="number">-0.0011</span></span><br><span class="line">    <span class="number">3.0500</span></span><br></pre></td></tr></tbody></table></figure><p>​     这里xc和yc分别代表圆心的横坐标和纵坐标，R代表圆的半径，a有三个值分别代表圆的一般方程的三个系数。</p><p>​     这样，通过这种方法就可以得到圆的标准方程或一般方程</p><h3 id="4-绘制"><a href="#4-绘制" class="headerlink" title="4. 绘制"></a>4. 绘制</h3><p>​     获得拟合后的圆的方程，如果需要绘图，那么我的使用如下代码</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">v=xc-R:<span class="number">0.001</span>:xc+R+<span class="number">0.001</span>;</span><br><span class="line">k=<span class="built_in">sqrt</span>(R.^<span class="number">2</span>-(v-xc).^<span class="number">2</span>)+yc;</span><br><span class="line">k2=-<span class="built_in">sqrt</span>(R.^<span class="number">2</span>-(v-xc).^<span class="number">2</span>)+yc;</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">'b*'</span>);</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(v,k,<span class="string">'-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(v,k2,<span class="string">'-'</span>);</span><br></pre></td></tr></tbody></table></figure><p>输入成功后你就可以得到绘制的圆，当然这里也许会有一个小问题，就是绘制后的圆因为窗口大小的原因，导致横纵坐标比例不协调，使得圆看起来像椭圆</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBIpD.png" alt="matlab拟合圆图像变形"></p><p>​        对于这种问题，我参考了这个回答<a href="https://jingyan.baidu.com/article/76a7e409d8d550fc3b6e15fc.html">matlab怎么控制坐标/画圆形看起来像椭圆怎么办-百度经验 (baidu.com)</a>找到了解决方法，该方法是输入下面的命令</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis equal</span><br></pre></td></tr></tbody></table></figure><p>该命令就是保证横纵坐标轴的最小刻度一致</p><p>得到的图像如下</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBo1e.png" alt="matlab拟合圆axis equal图像调整"></p><p>或者用另一个命令</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis square</span><br></pre></td></tr></tbody></table></figure><p>该命令使横纵坐标比例为1</p><p>得到的图像如下</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBT6H.png" alt="matlab拟合圆axis square图像调整"></p><p>若想恢复默认，只需输入下面的命令即可</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis auto</span><br></pre></td></tr></tbody></table></figure><p>这样你就可以得到一个正常的圆的图像了</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>​    该方法来源于<a href="https://www.ilovematlab.cn/thread-182431-1-1.html">matlab最小二乘法拟合圆 – MATLAB中文论坛 (ilovematlab.cn)</a>中的一个回答</p><h3 id="1-数据与代码"><a href="#1-数据与代码" class="headerlink" title="1. 数据与代码"></a>1. 数据与代码</h3><p>​    首先还是要有点的坐标数据</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=[1507.2,1484.0,1459.8,1435.6,1410.9,1391.2,1368.5,1350.0,1331.0];</span><br><span class="line">y=[5170.8,5175.4,5176.1,5176.6,5175.1,5191.9,5197.9,5220.3,5240.6];</span><br></pre></td></tr></tbody></table></figure><p>   下面代码是比较完整的，绘图的部分也有了</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ydata = y;</span><br><span class="line">xdata = x;</span><br><span class="line"></span><br><span class="line">k0 = <span class="built_in">ones</span>(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">F = @(k)(xdata-k(<span class="number">1</span>)).^<span class="number">2</span>+(ydata-k(<span class="number">2</span>)).^<span class="number">2</span>-k(<span class="number">3</span>)^<span class="number">2</span></span><br><span class="line">[k,resnorm] = lsqnonlin(F,k0);</span><br><span class="line"></span><br><span class="line"><span class="comment">%k(1)是圆心的x坐标</span></span><br><span class="line"><span class="comment">%k(2)是圆心的y坐标</span></span><br><span class="line"><span class="comment">%k(3)的绝对值是圆的半径</span></span><br><span class="line"></span><br><span class="line">r0 = [k(<span class="number">1</span>),k(<span class="number">2</span>)];</span><br><span class="line">R = <span class="built_in">abs</span>(k(<span class="number">3</span>));</span><br><span class="line">xx = k(<span class="number">1</span>)-R:<span class="number">0.01</span>*R:k(<span class="number">1</span>)+R;</span><br><span class="line">y1_h = <span class="built_in">sqrt</span>(R.^<span class="number">2</span> - (xx - r0(<span class="number">1</span>)).^<span class="number">2</span>) + r0(<span class="number">2</span>);</span><br><span class="line">y2_h = -<span class="built_in">sqrt</span>(R.^<span class="number">2</span> - (xx - r0(<span class="number">1</span>)).^<span class="number">2</span>) + r0(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(xx,y1_h,<span class="string">'b'</span>)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(xx,y2_h',<span class="string">'b'</span>)</span><br><span class="line"><span class="built_in">plot</span>(xdata,ydata,<span class="string">'*r'</span>)</span><br></pre></td></tr></tbody></table></figure><p>当然这个代码也存在方法一中提到图像变形的问题，所以输入</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis equal</span><br></pre></td></tr></tbody></table></figure><p>这样就可以得到一个正常的圆的图像了</p><h3 id="2-参数解读"><a href="#2-参数解读" class="headerlink" title="2. 参数解读"></a>2. 参数解读</h3><p>输入<code>k</code>查询，得到以下结果</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">k =</span><br><span class="line">   <span class="number">1.0e+03</span> *</span><br><span class="line">    <span class="number">1.4625</span>    <span class="number">5.3278</span>   <span class="number">-0.1568</span></span><br></pre></td></tr></tbody></table></figure><p>前两个值分别代表圆心的横纵坐标，第三个值的绝对值为圆的半径。</p><p>输入<code>resnorm</code>查询，得到以下结果</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">resnorm =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.3018e+07</span></span><br></pre></td></tr></tbody></table></figure><p>该值根据matlab的中文文档的解释为残差范数的平方（<a href="https://ww2.mathworks.cn/help/optim/ug/lsqnonlin.html#buuhch7-resnorm">求解非线性最小二乘（非线性数据拟合）问题 - MATLAB lsqnonlin - MathWorks 中国</a>），也就是残差平方和，残差平方和越小，其拟合效果越好。</p><p>方法一与方法二得到的拟合圆基本一致</p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> 拟合圆 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最短路径--Floyd与Dijkstra算法</title>
      <link href="/2021/082760550.html"/>
      <url>/2021/082760550.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​       求最短路径的算法有很多种，本文介绍其中的两种算法——Floyd与Dijkstra算法</p><p>​     （本文若有不正确的地方望大佬们多多指正Orz）</p><p>【本文优先发布于我的个人博客网站www.226yzy.com  ,<code>转载请注明出处</code>】</p><h1 id="1-Floyd算法"><a href="#1-Floyd算法" class="headerlink" title="1. Floyd算法"></a>1. Floyd算法</h1><p>​      首先通过<a href="https://acm.hdu.edu.cn/showproblem.php?pid=2544">HDU2544最短路</a>这道题引入最短路径这一问题。</p><p>   （题目可通过链接查看或见下方截图）</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBfk6.png" alt="HDU2544最短路题目截图"></p><h2 id="（一）路径记录及预处理"><a href="#（一）路径记录及预处理" class="headerlink" title="（一）路径记录及预处理"></a>（一）路径记录及预处理</h2><p>​       上题中样例过于简单，但值得注意的是上题中所给的线路时间是无向的，即该路线来回时间一致。以第二组为例，记录路线时间如下表。</p><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">1号点</th><th style="text-align:center">2号点</th><th style="text-align:center">3号点</th></tr></thead><tbody><tr><td style="text-align:center">1号点</td><td style="text-align:center">0</td><td style="text-align:center">5</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">2号点</td><td style="text-align:center">5</td><td style="text-align:center">0</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">3号点</td><td style="text-align:center">2</td><td style="text-align:center">5</td><td style="text-align:center">0</td></tr></tbody></table></div><p>​       反之，若有向（当然上题为无向）则记录如下表</p><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">1号点</th><th style="text-align:center">2号点</th><th style="text-align:center">3号点</th></tr></thead><tbody><tr><td style="text-align:center">1号点</td><td style="text-align:center">0</td><td style="text-align:center">5</td><td style="text-align:center">∞</td></tr><tr><td style="text-align:center">2号点</td><td style="text-align:center">∞</td><td style="text-align:center">0</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">3号点</td><td style="text-align:center">2</td><td style="text-align:center">∞</td><td style="text-align:center">0</td></tr></tbody></table></div><p>​        处理上，无论有向还是无向，对于某一点到自身距离记录为0，除此之外，若某一点到另一点并无路径则记录为∞，代码上可用一个非常大的数代表（例如下文代码用999999999代表，也可通过函数调取如int型或long型的最大值）。</p><p>该片段代码大致如下(本文暂以java代码作为演示)，下示代码中T1为无向时的记录方法，T2为无向时的记录方法，本题为无向。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n=sc.nextInt(),m=sc.nextInt(),s,e;</span><br><span class="line">            <span class="comment">//根据题目描述，n代表有几个地点，m代表有几条输入路径，s代表该路径起点，e代表该路径目的地</span></span><br><span class="line"><span class="keyword">int</span>[][]map=<span class="keyword">new</span> <span class="keyword">int</span>[n][n];<span class="comment">//记录路径的二维数组</span></span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;m==<span class="number">0</span>)<span class="keyword">break</span>;<span class="comment">//根据题目代表所有输入结束</span></span><br><span class="line">            <span class="comment">//初始化记录路径的数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">  <span class="keyword">if</span>(i==j)map[i][j]=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">else</span> map[i][j]=<span class="number">999999999</span>;</span><br><span class="line"><span class="keyword">while</span>(m--&gt;<span class="number">0</span>){</span><br><span class="line">s=sc.nextInt()-<span class="number">1</span>;e=sc.nextInt()-<span class="number">1</span>;</span><br><span class="line"><span class="comment">//map[s][e]=sc.nextInt();//T1：有向时的记录方法</span></span><br><span class="line">map[s][e]=map[e][s]=sc.nextInt();<span class="comment">//T2：无向时的记录方法</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="（二）Floyd核心代码"><a href="#（二）Floyd核心代码" class="headerlink" title="（二）Floyd核心代码"></a>（二）Floyd核心代码</h2><p>​    Floyd的核心代码较为简单，只有简单的几行，代码如下</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line"><span class="keyword">if</span>(map[i][j]&gt;map[i][k]+map[k][j])</span><br><span class="line">map[i][j]=map[i][k]+map[k][j];</span><br></pre></td></tr></tbody></table></figure><p>（核心代码解读待续……）</p><h2 id="（三）完整代码（不含路径）"><a href="#（三）完整代码（不含路径）" class="headerlink" title="（三）完整代码（不含路径）"></a>（三）完整代码（不含路径）</h2><p>  综上,完整代码如下</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>{</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">while</span> (sc.hasNext()){</span><br><span class="line">            <span class="keyword">int</span> n=sc.nextInt(),m=sc.nextInt(),s,e;</span><br><span class="line">            <span class="keyword">int</span>[][]map=<span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">            <span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;m==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">                  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">                      <span class="keyword">if</span>(i==j)map[i][j]=<span class="number">0</span>;</span><br><span class="line">                      <span class="keyword">else</span> map[i][j]=<span class="number">999999999</span>;</span><br><span class="line">            <span class="keyword">while</span>(m--&gt;<span class="number">0</span>){</span><br><span class="line">                s=sc.nextInt()-<span class="number">1</span>;e=sc.nextInt()-<span class="number">1</span>;</span><br><span class="line"><span class="comment">//                map[s][e]=sc.nextInt();</span></span><br><span class="line">                map[s][e]=map[e][s]=sc.nextInt();</span><br><span class="line">            }                </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line">               <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">                  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">                     <span class="keyword">if</span>(map[i][j]&gt;map[i][k]+map[k][j])</span><br><span class="line">                        map[i][j]=map[i][k]+map[k][j];        </span><br><span class="line">            System.out.println(map[<span class="number">0</span>][n-<span class="number">1</span>]);</span><br><span class="line">            <span class="comment">//打印总表</span></span><br><span class="line"><span class="comment">//            System.out.println();</span></span><br><span class="line"><span class="comment">//            for(i=0;i&lt;n;i++) {</span></span><br><span class="line"><span class="comment">//                for(j=0;j&lt;n;j++) {</span></span><br><span class="line"><span class="comment">//                    System.out.print(map[i][j]+"\t");</span></span><br><span class="line"><span class="comment">//                }</span></span><br><span class="line"><span class="comment">//                System.out.println();     </span></span><br><span class="line"><span class="comment">//            }</span></span><br><span class="line">                  </span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="2-Dijkstra算法"><a href="#2-Dijkstra算法" class="headerlink" title="2. Dijkstra算法"></a>2. Dijkstra算法</h1><h2 id="（一）路径记录及预处理-1"><a href="#（一）路径记录及预处理-1" class="headerlink" title="（一）路径记录及预处理"></a>（一）路径记录及预处理</h2><p>​      与Floyd算法的处理基本一致，具体见上文</p><p>​      不同的是Dijkstra算法还需要增加一个一维数组来存储选定的起始点到其余的各个顶点的初始路程，该数组的名称本文定义为dis。并另建一个一维数组vis来记录数组dis对应的点是否已经找到与起始点的最短路径，0表示还未找到，1表示已找到。</p><p>​      对于数组vis建立完后，还要进行预处理,就是先将起始点对应的值标为1</p><h2 id="（二）核心代码"><a href="#（二）核心代码" class="headerlink" title="（二）核心代码"></a>（二）核心代码</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">      int u=1,min;</span><br><span class="line">vis[s]=1;</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">dis[i]=map[s][i];</span><br><span class="line">for(int i=1;i&lt;=n;i++){</span><br><span class="line">min=inf;</span><br><span class="line">for(int j=1;j&lt;=n;j++)</span><br><span class="line">if(vis[j]==0&amp;&amp;dis[j]&lt;min){</span><br><span class="line">min=dis[j];u=j;</span><br><span class="line">}</span><br><span class="line">vis[u]=1;</span><br><span class="line">    for(int j=1;j&lt;=n;j++)</span><br><span class="line">   if(map[u][j]&lt;inf)</span><br><span class="line"> if(dis[j]&gt;dis[u]+map[u][j]) {</span><br><span class="line"> dis[j]=dis[u]+map[u][j];</span><br><span class="line"> p[j]=u;</span><br><span class="line"> } </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>（核心代码解读待续……）</p><h2 id="（三）完整代码"><a href="#（三）完整代码" class="headerlink" title="（三）完整代码"></a>（三）完整代码</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 最短路径</span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n=<span class="number">26</span>,inf=<span class="number">99999999</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[]dis=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>],vis=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>],p=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>],YY=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[][] map=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            map[i][j]=(i==j?<span class="number">0</span>:inf);</span><br><span class="line">Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入起始点、目的地、距离。以起始点为0作为结束标志"</span>);</span><br><span class="line"><span class="keyword">int</span>[][]t=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span>(sc.hasNext()) {</span><br><span class="line"><span class="keyword">int</span> s=sc.nextInt();</span><br><span class="line"><span class="keyword">if</span>(s==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">int</span> e=sc.nextInt(),d=sc.nextInt();</span><br><span class="line">map[s][e]=map[e][s]=d;</span><br><span class="line">t[s][e]=t[e][s]=d;</span><br><span class="line">}</span><br><span class="line">yzy(<span class="number">22</span>);</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">System.out.print(i+<span class="string">"\t"</span>);</span><br><span class="line">}</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">System.out.print(YY[i]+<span class="string">"\t"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">yzy</span><span class="params">(<span class="keyword">int</span> s)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> u=<span class="number">1</span>,min;</span><br><span class="line">vis[s]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">dis[i]=map[s][i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">min=inf;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line"><span class="keyword">if</span>(vis[j]==<span class="number">0</span>&amp;&amp;dis[j]&lt;min){</span><br><span class="line">min=dis[j];u=j;</span><br><span class="line">}</span><br><span class="line">vis[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">   <span class="keyword">if</span>(map[u][j]&lt;inf)</span><br><span class="line"> <span class="keyword">if</span>(dis[j]&gt;dis[u]+map[u][j]) {</span><br><span class="line"> dis[j]=dis[u]+map[u][j];</span><br><span class="line"> } </span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="3-记录路径"><a href="#3-记录路径" class="headerlink" title="3. 记录路径"></a>3. 记录路径</h1><p>​     上文中的代码仅实现了给出最短路径的长度，但为给出具体路径，对于这个缺点下文进行相应的改进</p><h2 id="（一）Dijkstra算法"><a href="#（一）Dijkstra算法" class="headerlink" title="（一）Dijkstra算法"></a>（一）Dijkstra算法</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">package 数学建模;</span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line">public class 最短路径{</span><br><span class="line">static int n=26,inf=99999999;</span><br><span class="line">static int[]dis=new int[n+1],vis=new int[n+1],p=new int[n+1],YY=new int[n+1];</span><br><span class="line">static int[][] map=new int[n+1][n+1];</span><br><span class="line">public static void main(String[] args){</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">        for(int j=1;j&lt;=n;j++)</span><br><span class="line">            map[i][j]=(i==j?0:inf);</span><br><span class="line">Scanner sc=new Scanner(System.in);</span><br><span class="line">System.out.println("请输入起始点、目的地、距离。以起始点为0作为结束标志");</span><br><span class="line">int[][]t=new int[n+1][n+1];</span><br><span class="line">while(sc.hasNext()) {</span><br><span class="line">int s=sc.nextInt();</span><br><span class="line">if(s==0)break;</span><br><span class="line">int e=sc.nextInt(),d=sc.nextInt();</span><br><span class="line">map[s][e]=map[e][s]=d;</span><br><span class="line">t[s][e]=t[e][s]=d;</span><br><span class="line">}</span><br><span class="line">yzy(22);</span><br><span class="line">ff(22);</span><br><span class="line">System.out.println();</span><br><span class="line">for(int i=1;i&lt;=n;i++){</span><br><span class="line">System.out.print(i+"\t");</span><br><span class="line">}</span><br><span class="line">System.out.println();</span><br><span class="line">for(int i=1;i&lt;=n;i++){</span><br><span class="line">System.out.print(YY[i]+"\t");</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">static void yzy(int s) {</span><br><span class="line">int u=1,min;</span><br><span class="line">vis[s]=1;</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">dis[i]=map[s][i];</span><br><span class="line">for(int i=1;i&lt;=n;i++){</span><br><span class="line">min=inf;</span><br><span class="line">for(int j=1;j&lt;=n;j++)</span><br><span class="line">if(vis[j]==0&amp;&amp;dis[j]&lt;min){</span><br><span class="line">min=dis[j];u=j;</span><br><span class="line">}</span><br><span class="line">vis[u]=1;</span><br><span class="line">    for(int j=1;j&lt;=n;j++)</span><br><span class="line">   if(map[u][j]&lt;inf)</span><br><span class="line"> if(dis[j]&gt;dis[u]+map[u][j]) {</span><br><span class="line"> dis[j]=dis[u]+map[u][j];</span><br><span class="line"> p[j]=u;</span><br><span class="line"> } </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">static void ff(int s) {</span><br><span class="line">int j;</span><br><span class="line">    Stack&lt;Integer&gt; q=new Stack&lt;Integer&gt;();             </span><br><span class="line">    for(int i=1;i&lt;=n;i++)            </span><br><span class="line">    {</span><br><span class="line">        j=i;</span><br><span class="line">        while(p[j]&gt;0)      </span><br><span class="line">        {</span><br><span class="line">            q.add(j);          </span><br><span class="line">            j=p[j];          </span><br><span class="line">        }</span><br><span class="line">        q.push(j);</span><br><span class="line">        System.out.printf("起始点与目的地:%d--&gt;%d\t路径长度:%d\t具体路径: %d ",s,i,dis[i],s);</span><br><span class="line">        while(!q.empty())       </span><br><span class="line">        {</span><br><span class="line">            System.out.printf(" --&gt; %d",q.peek());</span><br><span class="line">            YY[q.peek()]++;</span><br><span class="line">            q.pop();            </span><br><span class="line">        }</span><br><span class="line">        System.out.println();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h1 id="4-其它语言代码"><a href="#4-其它语言代码" class="headerlink" title="4.其它语言代码"></a>4.其它语言代码</h1><h2 id="（一）Floyd算法matlab代码"><a href="#（一）Floyd算法matlab代码" class="headerlink" title="（一）Floyd算法matlab代码"></a>（一）Floyd算法matlab代码</h2><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="built_in">zeros</span>(<span class="number">6</span>); <span class="comment">%矩阵初始化</span></span><br><span class="line"><span class="comment">%路径录入，可根据实际情况修改</span></span><br><span class="line">a(<span class="number">1</span>,<span class="number">2</span>)=<span class="number">50</span>;a(<span class="number">1</span>,<span class="number">4</span>)=<span class="number">40</span>;a(<span class="number">1</span>,<span class="number">5</span>)=<span class="number">25</span>;a(<span class="number">1</span>,<span class="number">6</span>)=<span class="number">10</span>;</span><br><span class="line">a(<span class="number">2</span>,<span class="number">3</span>)=<span class="number">15</span>;a(<span class="number">2</span>,<span class="number">4</span>)=<span class="number">20</span>;a(<span class="number">2</span>,<span class="number">6</span>)=<span class="number">25</span>;</span><br><span class="line">a(<span class="number">3</span>,<span class="number">4</span>)=<span class="number">10</span>;a(<span class="number">3</span>,<span class="number">5</span>)=<span class="number">20</span>;</span><br><span class="line">a(<span class="number">4</span>,<span class="number">5</span>)=<span class="number">10</span>;a(<span class="number">4</span>,<span class="number">6</span>)=<span class="number">25</span>;</span><br><span class="line">a(<span class="number">5</span>,<span class="number">6</span>)=<span class="number">55</span>;</span><br><span class="line">a=a+a';</span><br><span class="line">a(<span class="built_in">find</span>(a==<span class="number">0</span>))=<span class="built_in">inf</span>;</span><br><span class="line">n=<span class="built_in">length</span>(a);</span><br><span class="line"><span class="keyword">for</span> k=<span class="number">1</span>:n</span><br><span class="line">    a(k,k)=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> k=<span class="number">1</span>:n</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">            <span class="keyword">if</span> a(<span class="built_in">i</span>,k)+a(k,<span class="built_in">j</span>)&lt;a(<span class="built_in">i</span>,<span class="built_in">j</span>)</span><br><span class="line">                a(<span class="built_in">i</span>,<span class="built_in">j</span>)=a(<span class="built_in">i</span>,k)+a(k,<span class="built_in">j</span>); </span><br><span class="line">            <span class="keyword">end</span> </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">a</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
            <tag> ACM </tag>
            
            <tag> 最短路径 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用网站汇总</title>
      <link href="/2021/072241576.html"/>
      <url>/2021/072241576.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文汇总我自己常用的网站</p><p>(持续不定时更新……)</p><h1 id="1-一些平台"><a href="#1-一些平台" class="headerlink" title="1.一些平台"></a>1.一些平台</h1><div class="table-container"><table><thead><tr><th style="text-align:center">网站</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center"><strong><em>1.Github</em></strong></td><td style="text-align:center"><a href="https://github.com">https://github.com</a></td></tr><tr><td style="text-align:center"><strong><em>2.Coding</em></strong></td><td style="text-align:center"><a href="https://coding.net">https://coding.net</a></td></tr><tr><td style="text-align:center"><strong><em>3.Gitee</em></strong></td><td style="text-align:center"><a href="https://gitee.com">https://gitee.com</a></td></tr><tr><td style="text-align:center"><strong>4.Cloudflare</strong></td><td style="text-align:center"><a href="https://dash.cloudflare.com/">https://dash.cloudflare.com/</a></td></tr><tr><td style="text-align:center"><strong><em>3.阿里云</em></strong></td><td style="text-align:center"><a href="https://www.aliyun.com">https://www.aliyun.com</a></td></tr><tr><td style="text-align:center"><strong><em>4.腾讯云</em></strong></td><td style="text-align:center"><a href="https://cloud.tencent.com">https://cloud.tencent.com</a></td></tr><tr><td style="text-align:center"><strong><em>5.工信部</em></strong></td><td style="text-align:center"><a href="https://beian.miit.gov.cn">https://beian.miit.gov.cn</a></td></tr><tr><td style="text-align:center"><strong><em>6.百度统计</em></strong></td><td style="text-align:center"><a href="https://tongji.baidu.com">https://tongji.baidu.com</a></td></tr></tbody></table></div><h1 id="2-常用免费图床汇总"><a href="#2-常用免费图床汇总" class="headerlink" title="2.常用免费图床汇总"></a>2.常用免费图床汇总</h1><div class="table-container"><table><thead><tr><th style="text-align:center">图床</th><th style="text-align:center">说明</th><th style="text-align:center">个人使用评价</th></tr></thead><tbody><tr><td style="text-align:center"><strong><a href="https://sm.ms/">sm.ms</a></strong></td><td style="text-align:center">无需注册，海外服务器【免费】</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><strong><a href="https://moetu.org">meotu</a></strong></td><td style="text-align:center">要注册，国内服务器【免费】</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><strong><a href="https://www.superbed.cn/">聚合图床</a></strong></td><td style="text-align:center">要注册，国内服务器【免费】</td><td style="text-align:center">访问速度较快，免费用户可储存1万张，可日均请求量5万次，图片大小5MB，免费用户无相册</td></tr><tr><td style="text-align:center"><strong><a href="https://niupic.com">牛图网</a></strong></td><td style="text-align:center">无需注册，日本服务器 【免费】</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><strong><a href="https://imgbb.com">imgbb</a></strong></td><td style="text-align:center">无需注册，亚太服务器【免费】</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><strong><a href="https://imgtu.com">路过图床</a></strong></td><td style="text-align:center">要注册，海外服务器【免费】</td><td style="text-align:center">成立于2011年，国内访问较慢，但是比较稳，无需登录即可上传,最大支持10M的图片，免费用户可使用相册</td></tr></tbody></table></div><h1 id="3-ACM相关OJ"><a href="#3-ACM相关OJ" class="headerlink" title="3.ACM相关OJ"></a><strong>3.ACM相关OJ</strong></h1><div class="table-container"><table><thead><tr><th style="text-align:center">网站</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center"><strong><em>1.Codeforces</em></strong></td><td style="text-align:center"><a href="https://codeforces.com">https://codeforces.com</a></td></tr><tr><td style="text-align:center"><strong><em>2.北大POJ</em></strong></td><td style="text-align:center"><a href="http://poj.org">http://poj.org</a></td></tr><tr><td style="text-align:center"><strong><em>3.杭电OJ</em></strong></td><td style="text-align:center"><a href="https://acm.hdu.edu.cn">https://acm.hdu.edu.cn</a></td></tr><tr><td style="text-align:center"><strong><em>4.牛客网</em></strong></td><td style="text-align:center"><a href="https://www.nowcoder.com">https://www.nowcoder.com</a></td></tr><tr><td style="text-align:center"><strong><em>5.牛客竞赛</em></strong></td><td style="text-align:center"><a href="https://ac.nowcoder.com/acm/home">https://ac.nowcoder.com/acm/home</a></td></tr><tr><td style="text-align:center"><strong><em>6.Leetcode(力扣)</em></strong></td><td style="text-align:center"><a href="https://leetcode-cn.com">https://leetcode-cn.com</a></td></tr><tr><td style="text-align:center"><strong><em>7.VJ</em></strong></td><td style="text-align:center"><a href="https://vjudge.net">https://vjudge.net</a></td></tr><tr><td style="text-align:center"><strong><em>8.PTA</em></strong></td><td style="text-align:center"><a href="https://pintia.cn">https://pintia.cn</a></td></tr><tr><td style="text-align:center"><strong><em>9.洛谷</em></strong></td><td style="text-align:center"><a href="https://www.luogu.com.cn">https://www.luogu.com.cn</a></td></tr><tr><td style="text-align:center"><strong><em>10.AcWing</em></strong></td><td style="text-align:center"><a href="https://www.acwing.com/">https://www.acwing.com/</a></td></tr></tbody></table></div><h1 id="4-各大搜索引擎收录"><a href="#4-各大搜索引擎收录" class="headerlink" title="4.各大搜索引擎收录"></a>4.各大搜索引擎收录</h1><div class="table-container"><table><thead><tr><th style="text-align:center">搜索引擎</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center"><strong>百度</strong></td><td style="text-align:center"><a href="https://ziyuan.baidu.com/linksubmit/url">链接提交<em>站长工具</em>网站支持_百度搜索资源平台 (baidu.com)</a></td></tr><tr><td style="text-align:center"><strong>360</strong></td><td style="text-align:center"><a href="https://info.so.com/site_submit.html">网站收录_360搜索 (so.com)</a></td></tr><tr><td style="text-align:center"><strong>搜狗</strong></td><td style="text-align:center"><a href="https://zhanzhang.sogou.com/index.php/statistics/index">搜狗资源平台_公平开放的交流平台 (sogou.com)</a></td></tr><tr><td style="text-align:center"><strong>Bing</strong></td><td style="text-align:center"><a href="https://www.bing.com/webmasters/about">Bing Webmaster Tools</a></td></tr></tbody></table></div><h1 id="5-我的博客用到的一些功能性网站"><a href="#5-我的博客用到的一些功能性网站" class="headerlink" title="5.我的博客用到的一些功能性网站"></a>5.我的博客用到的一些功能性网站</h1><p>感谢以下网站提供的白嫖服务🤣</p><div class="table-container"><table><thead><tr><th style="text-align:center">网站</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center"><strong>Leancloud</strong></td><td style="text-align:center"><a href="https://console.leancloud.app/">https://console.leancloud.app/</a></td></tr><tr><td style="text-align:center"><strong>vercel</strong></td><td style="text-align:center"><a href="https://vercel.com/">https://vercel.com/</a></td></tr><tr><td style="text-align:center"><strong>mongodb</strong></td><td style="text-align:center"><a href="https://cloud.mongodb.com/">https://cloud.mongodb.com/</a></td></tr></tbody></table></div><h1 id="6-图标、字体、表情包"><a href="#6-图标、字体、表情包" class="headerlink" title="6.图标、字体、表情包"></a>6.图标、字体、表情包</h1><div class="table-container"><table><thead><tr><th style="text-align:center">网站</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center"><strong>阿里图标库</strong></td><td style="text-align:center"><a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></td></tr><tr><td style="text-align:center"><strong>方正字库</strong></td><td style="text-align:center"><a href="https://www.foundertype.com/">方正字库官网 (foundertype.com)</a></td></tr><tr><td style="text-align:center"><strong>表情包</strong></td><td style="text-align:center"><a href="https://emotion.xiaokang.me/#/">表情速查 (xiaokang.me)</a></td></tr></tbody></table></div><h1 id="7-封面设计"><a href="#7-封面设计" class="headerlink" title="7.封面设计"></a>7.封面设计</h1><div class="table-container"><table><thead><tr><th style="text-align:center">网站</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center"><strong>Canva可画</strong></td><td style="text-align:center"><a href="https://www.canva.cn/">首页 - Canva可画</a></td></tr><tr><td style="text-align:center"><strong>创客贴</strong></td><td style="text-align:center"><a href="https://www.chuangkit.com/">https://www.chuangkit.com/</a></td></tr></tbody></table></div><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p><strong>CRON:</strong><a href="http://cron.ciding.cc/">Cron - 在线Cron表达式生成器 (ciding.cc)</a></p><p>我的百度SEO提交情况：<a href="https://226yzy.avosapps.us/">我的百度SEO提交情况</a></p><p><a href="http://47.98.164.37:8888/cf1aa34f">http://47.98.164.37:8888/cf1aa34f</a></p>]]></content>
      
      
      <categories>
          
          <category> 生活随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇总 </tag>
            
            <tag> 常用网站 </tag>
            
            <tag> 图床 </tag>
            
            <tag> 搜索引擎收录入口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>226YZY-BLOG-修改记录(第二弹)</title>
      <link href="/2021/071326519.html"/>
      <url>/2021/071326519.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p><code>注意现在我现在使用的主题是Butterfly，本篇是</code>对matery主题的修改</p></blockquote><p>这是我博客修改记录的第二篇，本文中涉及了一些大佬的方案，并结合自己的需求进行了一系列的修改，本着尊重他人劳动成果的原则我对相对应的内容转载时保留了我查考的直接出处。希望如果有小伙伴，从我这转载相关内容也请保留出处。希望以下内容对您有所帮助。</p><h1 id="1-文章卡片腰封"><a href="#1-文章卡片腰封" class="headerlink" title="1.文章卡片腰封"></a>1.文章卡片腰封</h1><p>参考来源</p><p><a href="https://hesifan.top/2021/042339737.html#toc-heading-2">matery魔改日记 | FanHeart (hesifan.top)</a></p><p>在主题目录下找到<code>layout/index.ejs</code></p><p>ctrl+f搜索<code>所有文章卡片</code></p><p>以<code>所有文章卡片</code>为标志，到末尾倒着来看第一个<code>&lt;/article&gt;</code>为结尾，这一块</p><p>替换以下代码</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 所有文章卡片 --&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row article-row"</span>&gt;</span> <span class="tag">&lt;<span class="name">article</span> <span class="attr">id</span>=<span class="string">"articles"</span> <span class="attr">class</span>=<span class="string">"container articles"</span>&gt;</span> &lt;% page.posts.forEach(post =&gt; { %&gt; <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"article col s12 m6 l4"</span> <span class="attr">data-aos</span>=<span class="string">"zoom-in"</span>&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(post.path) %&gt;"</span>&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-image card-image-V"</span>&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-content"</span>&gt;</span> <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>阅读全文<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post"</span> <span class="attr">style</span>=<span class="string">"width: 180px"</span>&gt;</span>&lt;%= post.title %&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span> &lt;% if (post.img) { %&gt; <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&lt;%- url_for(post.img) %&gt;"</span> <span class="attr">class</span>=<span class="string">"responsive-img"</span> <span class="attr">alt</span>=<span class="string">"&lt;%= post.title %&gt;"</span>&gt;</span> &lt;% } else { %&gt; &lt;% var featureimg = '/medias/featureimages/0.jpg'; var featureImages = theme.featureImages; if (!featureImages || featureImages.length == 0) { return featureimg; } featureimg = featureImages[Math.abs(hashCode(post.title) % featureImages.length)] %&gt; <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(featureimg) %&gt;"</span> <span class="attr">class</span>=<span class="string">"responsive-img"</span> <span class="attr">alt</span>=<span class="string">"&lt;%= post.title %&gt;"</span>&gt;</span> &lt;% } %&gt; <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"card-title title-V"</span>&gt;</span>&lt;%= post.title %&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-content article-content"</span>&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"summary block-with-text"</span>&gt;</span> &lt;% if (post.summary &amp;&amp; post.summary.length &gt; 0) { %&gt; &lt;%- post.summary %&gt; &lt;% } else { %&gt; &lt;%- strip_html(post.content).substring(0, 120) %&gt; &lt;% } %&gt; <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"publish-info"</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"publish-date"</span>&gt;</span> <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"far fa-clock fa-fw icon-date"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>&lt;%= date(post.date, config.date_format) %&gt; <span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"publish-author"</span>&gt;</span> &lt;% if (post.categories &amp;&amp; post.categories.length &gt; 0) { %&gt; <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-bookmark fa-fw icon-category"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> &lt;% post.categories.forEach(category =&gt; { %&gt; <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(category.path) %&gt;"</span> <span class="attr">class</span>=<span class="string">"post-category"</span>&gt;</span> &lt;%- category.name %&gt; <span class="tag">&lt;/<span class="name">a</span>&gt;</span> &lt;% }); %&gt; &lt;% } else if (post.author &amp;&amp; post.author.length &gt; 0) { %&gt; <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-user fa-fw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> &lt;%- post.author %&gt; &lt;% } else { %&gt; <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-user fa-fw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> &lt;%- config.author %&gt; &lt;% } %&gt; <span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span> &lt;% if(post.tags &amp;&amp; post.tags.length &gt; 0) { %&gt; <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-action article-tags"</span>&gt;</span> &lt;% post.tags.forEach(tag =&gt; { %&gt; <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(tag.path) %&gt;"</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"chip bg-color"</span>&gt;</span>&lt;%= tag.name %&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span> &lt;% }); %&gt; <span class="tag">&lt;/<span class="name">div</span>&gt;</span> &lt;% } %&gt; <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span> &lt;% }); %&gt; <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">来源: FanHeart</span><br><span class="line">文章作者: 不染轻裳</span><br><span class="line">文章链接: https://hesifan.top/2021/042339737.html</span><br><span class="line">本文章著作权归作者所有，任何形式的转载都请注明出处。</span><br></pre></td></tr></tbody></table></figure><p>然后同样在主题目录下找到<code>source/css/matery.css</code></p><p>加入以下代码</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*文章列表卡片各样式*/</span> <span class="selector-id">#articles</span> { <span class="attribute">margin-top</span>: <span class="number">10px</span>; <span class="attribute">margin-bottom</span>: <span class="number">10px</span>; } <span class="selector-tag">article</span> <span class="selector-tag">a</span> { <span class="attribute">margin-right</span>: <span class="number">0</span> <span class="meta">!important</span>; <span class="attribute">color</span>: <span class="number">#525f7f</span>; <span class="attribute">text-transform</span>: none <span class="meta">!important</span>; } <span class="selector-tag">article</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> { <span class="attribute">font-weight</span>: bold; <span class="attribute">color</span>: <span class="number">#116022</span>; <span class="attribute">text-decoration</span>: underline; } <span class="selector-class">.articles</span> <span class="selector-class">.row</span> { <span class="attribute">margin-left</span>: <span class="number">0</span>; <span class="attribute">margin-right</span>: <span class="number">0</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card</span> { <span class="attribute">border-radius</span>: <span class="number">8px</span>; <span class="attribute">overflow</span>: hidden; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span> { <span class="attribute">font-family</span>: Georgia, <span class="string">'Noto Serif SC'</span>, Helvetica, Arial, Menlo, Monaco, monospace, serif; <span class="attribute">background-color</span>: <span class="number">#222</span>; <span class="attribute">border-radius</span>: <span class="number">8px</span>; <span class="attribute">overflow</span>: hidden; <span class="attribute">position</span>: relative; <span class="attribute">z-index</span>: <span class="number">1</span>; <span class="attribute">transition</span>: all <span class="number">0.5s</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span> { <span class="attribute">box-shadow</span>: <span class="number">3px</span> <span class="number">3px</span> <span class="number">5px</span> <span class="number">#999</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span>:before, article .card-image:after { content: <span class="string">''</span>; <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(circle at <span class="number">23%</span> <span class="number">70%</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.7</span>), <span class="number">#fff</span> <span class="number">30%</span>); <span class="attribute">width</span>: <span class="number">150%</span>; <span class="attribute">height</span>: <span class="number">150%</span>; <span class="attribute">opacity</span>: <span class="number">0</span>; <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>); <span class="attribute">position</span>: absolute; <span class="comment">/*top:-10.5%;*/</span> <span class="attribute">right</span>: -<span class="number">150%</span>; <span class="attribute">z-index</span>: <span class="number">1</span>; <span class="attribute">transition</span>: all <span class="number">0.35s</span> ease; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span>:before { opacity: <span class="number">1</span>; <span class="attribute">right</span>: -<span class="number">85%</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span>:after { opacity: <span class="number">1</span>; <span class="attribute">top</span>: -<span class="number">42%</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span> <span class="selector-tag">img</span> { <span class="attribute">width</span>: <span class="number">100%</span>; <span class="attribute">transition</span>: all <span class="number">0.5s</span> ease; <span class="attribute">height</span>: <span class="number">220px</span>; <span class="attribute">border-radius</span>: <span class="number">0.3rem</span>; <span class="attribute">opacity</span>: <span class="number">0.7</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span> <span class="selector-class">.x</span> <span class="selector-tag">img</span> { <span class="attribute">width</span>: <span class="number">100%</span>; <span class="attribute">transition</span>: all <span class="number">0.5s</span> ease; <span class="attribute">height</span>: <span class="number">230px</span>; <span class="attribute">border-radius</span>: <span class="number">0.3rem</span>; <span class="attribute">opacity</span>: <span class="number">0.7</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span> { <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.2</span>); } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span> <span class="selector-class">.box-content</span> { <span class="attribute">text-align</span>: right; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>); <span class="attribute">position</span>: absolute; <span class="attribute">top</span>: <span class="number">50%</span>; <span class="attribute">right</span>: -<span class="number">100%</span>; <span class="attribute">z-index</span>: <span class="number">2</span>; <span class="attribute">transition</span>: all <span class="number">0.5s</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.box-content</span> { <span class="attribute">right</span>: <span class="number">5%</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.box-content</span> <span class="selector-tag">h3</span><span class="selector-pseudo">::before</span> { <span class="attribute">content</span>: <span class="string">'X'</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.box-content</span> <span class="selector-tag">h3</span><span class="selector-pseudo">::before</span> { <span class="attribute">font-size</span>: <span class="number">0.9rem</span> <span class="meta">!important</span>; <span class="attribute">vertical-align</span>: bottom; <span class="attribute">margin-right</span>: <span class="number">0.5rem</span>; <span class="attribute">padding</span>: <span class="number">2px</span>; <span class="attribute">border-radius</span>: <span class="number">5px</span>; <span class="attribute">background</span>: <span class="built_in">hsl</span>(<span class="number">0</span>, <span class="number">0%</span>, <span class="number">20%</span>); <span class="attribute">color</span>: <span class="built_in">hsl</span>(<span class="number">0</span>, <span class="number">0%</span>, <span class="number">100%</span>); } <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.title-V</span> { <span class="attribute">display</span>: none; } <span class="selector-tag">article</span> <span class="selector-class">.card-image-V</span>:before, article .card-image-V:after { top: -<span class="number">10.5%</span>; }</span><br><span class="line">来源: FanHeart</span><br><span class="line">文章作者: 不染轻裳</span><br><span class="line">文章链接: https://hesifan.top/<span class="number">2021</span>/<span class="number">042339737</span>.html</span><br><span class="line">本文章著作权归作者所有，任何形式的转载都请注明出处。</span><br></pre></td></tr></tbody></table></figure><p>其它要修改的地方</p><p>就找到类似的结构</p><p>以归档页面为例</p><p>文件位置在主题目录下<code>layout/archive.ejs</code></p><p>在以下代码的后面</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">article class="cd-timeline-content" data-aos="fade-up"&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"article col s12 m6"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(post.path) %&gt;"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-image"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>插入以下代码(至于CSS代码前面已经处理过了)</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-content"</span>&gt;</span> <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>阅读全文<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post"</span> <span class="attr">style</span>=<span class="string">"width: 180px"</span>&gt;</span>&lt;%= post.title %&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>在主题目录下其它要修改添加的地方还有</p><p><code>layout/_partial/prev-next.ejs</code></p><p>(这个比较特殊，有四处要添加,<code>&lt;%= post.title %&gt;</code>要对应修改)</p><p>具体可以找到<code>&lt;div class="card-image"&gt;</code>看后面的</p><p><code>&lt;% if (***.img) { %&gt;</code>这个<em>*</em>的位置是啥，然后将上面的<code>post</code>修改成对应的</p><p>其它的</p><p><code>layout/category.ejs</code>(前面的代码原样插入即可)</p><p><code>layout/index.ejs</code>(前面的代码原样插入即可)</p><p><code>layout/tag.ejs</code>(前面的代码原样插入即可)</p><h1 id="2-将原主题的’’我的梦想’’替换成今日诗词"><a href="#2-将原主题的’’我的梦想’’替换成今日诗词" class="headerlink" title="2.将原主题的’’我的梦想’’替换成今日诗词"></a>2.将原主题的’’我的梦想’’替换成今日诗词</h1><p>在主题目录下找到layout/_widget/dream.ejs</p><p>将<code>&lt;%= theme.dream.text %&gt;</code>替换成<code>&lt;%- '&lt;span id="jinrishici-sentence"&gt;正在加载今日诗词....&lt;/span&gt;' %&gt;</code></p><p>然后末尾加入</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://sdk.jinrishici.com/v2/browser/jinrishici.js"</span> charset=<span class="string">"utf-8"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="3-插入浏览器标签"><a href="#3-插入浏览器标签" class="headerlink" title="3.插入浏览器标签"></a>3.插入浏览器标签</h1><p>在主题目录下找到<code>layout/layout.ejs</code></p><p>加入以下代码</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="keyword">var</span> OriginTitile=<span class="built_in">document</span>.title,st;</span><br><span class="line">        <span class="built_in">document</span>.addEventListener(<span class="string">"visibilitychange"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">            <span class="built_in">document</span>.hidden?(<span class="built_in">document</span>.title=<span class="string">"ヽ(●-`Д´-)ノ别跑稍等"</span>,<span class="built_in">clearTimeout</span>(st)):(<span class="built_in">document</span>.title=<span class="string">"(Ő∀Ő3)ノ干得漂亮，成功了！"</span>,st=<span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{<span class="built_in">document</span>.title=OriginTitile},<span class="number">3e3</span>))</span><br><span class="line">        })</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="4-加入看板娘"><a href="#4-加入看板娘" class="headerlink" title="4.加入看板娘"></a>4.加入看板娘</h1><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css" /&gt;</span><br><span class="line">&lt;script src="https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/autoload.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="5-对于HEXO-SEO其他博客解决方案中"><a href="#5-对于HEXO-SEO其他博客解决方案中" class="headerlink" title="5.对于HEXO SEO其他博客解决方案中"></a>5.对于HEXO SEO其他博客解决方案中</h1><p>其它博客中的代码缩进有问题，导致<code>hexo d</code>和<code>hexo g</code>命令无法正常运行</p><p>正确缩进如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 自动生成sitemap</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br></pre></td></tr></tbody></table></figure><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><h1 id="6-Valine显示QQ邮箱的头像"><a href="#6-Valine显示QQ邮箱的头像" class="headerlink" title="6.Valine显示QQ邮箱的头像"></a>6.Valine显示QQ邮箱的头像</h1><p>解决该问题参考了该博客文章</p><p><a href="https://blog.csdn.net/cungudafa/article/details/104638730">Valine-实现QQ邮箱识别生成头像地址（完美解决头像问题）_cungudafa的博客-CSDN博客</a></p><p>虽然主题不一样大解决方法基本一致</p><p>我用的matery主题的Valine是1.3.10版</p><p>如果是1.4.4版的话参考上面大佬的博客，两者之间操作有不同需要注意</p><p>以下我就按Valine1.3.10版的matery主题操作</p><p>在主题目录下找到<code>source/libs/valine/Valine.min.js</code></p><p>ctrl+f搜索</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m.cdn+a(e.get("mail")</span><br></pre></td></tr></tbody></table></figure><p>源代码经过压缩没有换行啥的最好换行一下</p><p>然后将</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(m.cdn + a(e.get("mail")) + m.params)</span><br></pre></td></tr></tbody></table></figure><p>修改为</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(qq_img)</span><br></pre></td></tr></tbody></table></figure><p>再在这一句var的前面加上</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> qq_img=m.cdn+a(e.get(<span class="string">"mail"</span>))+m.params;<span class="comment">//默认gravator头像接口</span></span><br><span class="line"> <span class="keyword">if</span>(e.get(<span class="string">"mail"</span>).indexOf(<span class="string">"@qq.com"</span>) &gt;= <span class="number">0</span>){</span><br><span class="line"><span class="keyword">var</span> prefix = e.get(<span class="string">"mail"</span>).replace(<span class="regexp">/@.*/</span>, <span class="string">""</span>);<span class="comment">//前缀</span></span><br><span class="line"><span class="keyword">var</span> pattern=<span class="regexp">/^\d+$/g</span>;  <span class="comment">//正则表达式，数字</span></span><br><span class="line"><span class="keyword">var</span> result= prefix.match(pattern);<span class="comment">//match 是匹配的意思</span></span><br><span class="line"><span class="keyword">if</span>(result!==<span class="literal">null</span>){</span><br><span class="line">qq_img = <span class="string">"//q1.qlogo.cn/g?b=qq&amp;nk="</span>+ prefix +<span class="string">"&amp;s=100"</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「cungudafa」的原创文章，遵循CC <span class="number">4.0</span> BY-SA版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https:<span class="comment">//blog.csdn.net/cungudafa/article/details/104638730</span></span><br></pre></td></tr></tbody></table></figure><h1 id="7-添加加载页面"><a href="#7-添加加载页面" class="headerlink" title="7.添加加载页面"></a>7.添加加载页面</h1><p>这里就转载大佬的方案了</p><p>原文<a href="https://notes.zhangxiaocai.cn/posts/7496029d.html">https://notes.zhangxiaocai.cn/posts/7496029d.html</a></p><p>这位大佬说如果有爆红没关系</p><p>不过我是没有爆红的</p><h2 id="1、在-layout-partial-目录新建一个-loading-pages-ejs-内容如下："><a href="#1、在-layout-partial-目录新建一个-loading-pages-ejs-内容如下：" class="headerlink" title="1、在 /layout/_partial/ 目录新建一个 loading-pages.ejs 内容如下："></a>1、在 <code>/layout/_partial/</code> 目录新建一个 <code>loading-pages.ejs</code> 内容如下：</h2><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=<span class="string">"text/css"</span> lang=<span class="string">"css"</span>&gt;</span><br><span class="line">    #loading-container{</span><br><span class="line">        <span class="attr">position</span>: fixed;</span><br><span class="line">        top: <span class="number">0</span>;</span><br><span class="line">        left: <span class="number">0</span>;</span><br><span class="line">        min-height: 100vh;</span><br><span class="line">        width: 100vw;</span><br><span class="line">        z-index: <span class="number">9999</span>;</span><br><span class="line">        display: flex;</span><br><span class="line">        flex-direction: column;</span><br><span class="line">        justify-content: center;</span><br><span class="line">        align-items: center;</span><br><span class="line">        background: #FFF;</span><br><span class="line">        text-align: center;</span><br><span class="line">        <span class="comment">/* loader页面消失采用渐隐的方式*/</span></span><br><span class="line">        -webkit-transition: opacity 1s ease;</span><br><span class="line">        -moz-transition: opacity 1s ease;</span><br><span class="line">        -o-transition: opacity 1s ease;</span><br><span class="line">        transition: opacity 1s ease;</span><br><span class="line">    }</span><br><span class="line">    .loading-image{</span><br><span class="line">        <span class="attr">width</span>: 120px;</span><br><span class="line">        height: 50px;</span><br><span class="line">        transform: translate(-<span class="number">50</span>%);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    .loading-image div:nth-<span class="function"><span class="title">child</span>(<span class="params"><span class="number">2</span></span>)</span> {</span><br><span class="line">        -webkit-animation: pacman-balls 1s linear 0s infinite;</span><br><span class="line">        animation: pacman-balls 1s linear 0s infinite</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    .loading-image div:nth-<span class="function"><span class="title">child</span>(<span class="params"><span class="number">3</span></span>)</span> {</span><br><span class="line">        -webkit-animation: pacman-balls 1s linear .33s infinite;</span><br><span class="line">        animation: pacman-balls 1s linear .33s infinite</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    .loading-image div:nth-<span class="function"><span class="title">child</span>(<span class="params"><span class="number">4</span></span>)</span> {</span><br><span class="line">        -webkit-animation: pacman-balls 1s linear .66s infinite;</span><br><span class="line">        animation: pacman-balls 1s linear .66s infinite</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    .loading-image div:nth-<span class="function"><span class="title">child</span>(<span class="params"><span class="number">5</span></span>)</span> {</span><br><span class="line">        -webkit-animation: pacman-balls 1s linear .99s infinite;</span><br><span class="line">        animation: pacman-balls 1s linear .99s infinite</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">   .loading-image div:first-<span class="keyword">of</span>-type {</span><br><span class="line">        <span class="attr">width</span>: <span class="number">0</span>;</span><br><span class="line">        height: <span class="number">0</span>;</span><br><span class="line">        border: 25px solid #49b1f5;</span><br><span class="line">        border-right-color: transparent;</span><br><span class="line">        border-radius: 25px;</span><br><span class="line">        -webkit-animation: rotate_pacman_half_up .5s 0s infinite;</span><br><span class="line">        animation: rotate_pacman_half_up .5s 0s infinite;</span><br><span class="line">    }</span><br><span class="line">    .loading-image div:nth-<span class="function"><span class="title">child</span>(<span class="params"><span class="number">2</span></span>)</span> {</span><br><span class="line">        <span class="attr">width</span>: <span class="number">0</span>;</span><br><span class="line">        height: <span class="number">0</span>;</span><br><span class="line">        border: 25px solid #49b1f5;</span><br><span class="line">        border-right-color: transparent;</span><br><span class="line">        border-radius: 25px;</span><br><span class="line">        -webkit-animation: rotate_pacman_half_down .5s 0s infinite;</span><br><span class="line">        animation: rotate_pacman_half_down .5s 0s infinite;</span><br><span class="line">        margin-top: -50px;</span><br><span class="line">    }</span><br><span class="line">    @-webkit-keyframes rotate_pacman_half_up {<span class="number">0</span>% {<span class="attr">transform</span>: rotate(270deg)}<span class="number">50</span>% {<span class="attr">transform</span>: rotate(1turn)}to {<span class="attr">transform</span>: rotate(270deg)}}</span><br><span class="line"></span><br><span class="line">    @keyframes rotate_pacman_half_up {<span class="number">0</span>% {<span class="attr">transform</span>: rotate(270deg)}<span class="number">50</span>% {<span class="attr">transform</span>: rotate(1turn)}to {<span class="attr">transform</span>: rotate(270deg)}}</span><br><span class="line"></span><br><span class="line">    @-webkit-keyframes rotate_pacman_half_down {<span class="number">0</span>% {<span class="attr">transform</span>: rotate(90deg)}<span class="number">50</span>% {<span class="attr">transform</span>: rotate(0deg)}to {<span class="attr">transform</span>: rotate(90deg)}}</span><br><span class="line"></span><br><span class="line">    @keyframes rotate_pacman_half_down {<span class="number">0</span>% {<span class="attr">transform</span>: rotate(90deg)}<span class="number">50</span>% {<span class="attr">transform</span>: rotate(0deg)}to {<span class="attr">transform</span>: rotate(90deg)}}</span><br><span class="line"></span><br><span class="line">    @-webkit-keyframes pacman-balls {<span class="number">75</span>% {<span class="attr">opacity</span>: <span class="number">.7</span>}to {<span class="attr">transform</span>: translate(-100px, -<span class="number">6.</span>25px)}}</span><br><span class="line"></span><br><span class="line">    @keyframes pacman-balls {<span class="number">75</span>% {<span class="attr">opacity</span>: <span class="number">.7</span>}to {<span class="attr">transform</span>: translate(-100px, -<span class="number">6.</span>25px)}}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    .loading-image div:nth-child(<span class="number">3</span>),</span><br><span class="line">    .loading-image div:nth-child(<span class="number">4</span>),</span><br><span class="line">    .loading-image div:nth-child(<span class="number">5</span>),</span><br><span class="line">    .loading-image div:nth-<span class="function"><span class="title">child</span>(<span class="params"><span class="number">6</span></span>)</span>{</span><br><span class="line">        background-color: #49b1f5;</span><br><span class="line">        width: 15px;</span><br><span class="line">        height: 15px;</span><br><span class="line">        border-radius: <span class="number">100</span>%;</span><br><span class="line">        margin: 2px;</span><br><span class="line">        width: 10px;</span><br><span class="line">        height: 10px;</span><br><span class="line">        position: absolute;</span><br><span class="line">        transform: translateY(-<span class="number">6.</span>25px);</span><br><span class="line">        top: 25px;</span><br><span class="line">        left: 100px;</span><br><span class="line">    }</span><br><span class="line">    .loading-text{</span><br><span class="line">        margin-bottom: 20vh;</span><br><span class="line">        text-align: center;</span><br><span class="line">        color: #2c3e50;</span><br><span class="line">        font-size: 2rem;</span><br><span class="line">        box-sizing: border-box;</span><br><span class="line">        padding: <span class="number">0</span> 10px;</span><br><span class="line">        text-shadow: <span class="number">0</span> 2px 10px rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>);</span><br><span class="line">    }</span><br><span class="line">    @media only screen and (max-width: 500px) {</span><br><span class="line">         .loading-text{</span><br><span class="line">            font-size: <span class="number">1.</span>5rem;</span><br><span class="line">         }</span><br><span class="line">    }</span><br><span class="line">    .fadeout {</span><br><span class="line">        <span class="attr">opacity</span>: <span class="number">0</span>;</span><br><span class="line">        filter: alpha(opacity=<span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">/* logo出现动画 */</span></span><br><span class="line">    @-webkit-keyframes fadeInDown{<span class="number">0</span>%{<span class="attr">opacity</span>:<span class="number">0</span>;-webkit-transform:translate3d(<span class="number">0</span>,-<span class="number">100</span>%,<span class="number">0</span>);transform:translate3d(<span class="number">0</span>,-<span class="number">100</span>%,<span class="number">0</span>)}<span class="number">100</span>%{<span class="attr">opacity</span>:<span class="number">1</span>;-webkit-transform:none;transform:none}}</span><br><span class="line">    @keyframes fadeInDown{<span class="number">0</span>%{<span class="attr">opacity</span>:<span class="number">0</span>;-webkit-transform:translate3d(<span class="number">0</span>,-<span class="number">100</span>%,<span class="number">0</span>);}}</span><br><span class="line"> &lt;/style&gt;</span><br><span class="line"> <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">const</span> loaded = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span></span></span><br><span class="line"><span class="javascript"><span class="xml">       <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">const</span> loader = <span class="built_in">document</span>.getElementById(<span class="string">"loading-container"</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            loader.className=<span class="string">"fadeout"</span> ;<span class="comment">//使用渐隐的方法淡出loading page</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">// document.getElementById("body-wrap").style.display="flex";</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                loader.style.display=<span class="string">"none"</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            },<span class="number">2500</span>); </span></span></span><br><span class="line"><span class="javascript"><span class="xml">        },<span class="number">1000</span>);<span class="comment">//强制显示loading page 1s  </span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    };</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    loaded();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">})()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">来源: 斯莫笔记</span><br><span class="line">文章作者: Small-Rose</span><br><span class="line">文章链接: https:<span class="comment">//notes.zhangxiaocai.cn/posts/7496029d.html</span></span><br><span class="line">本文章著作权归作者所有，任何形式的转载都请注明出处。</span><br></pre></td></tr></tbody></table></figure><h2 id="2、在主题的-layout-目录找到-layout-ejs-文件"><a href="#2、在主题的-layout-目录找到-layout-ejs-文件" class="headerlink" title="2、在主题的 layout 目录找到 layout.ejs 文件"></a>2、在主题的 <code>layout</code> 目录找到 <code>layout.ejs</code> 文件</h2><p>在 <code>&lt;body&gt;</code> 附近添加内容后如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">```ejs</span><br><span class="line"></span><br><span class="line"> 这条线以上的不要复制</span><br><span class="line"> ------------------    </span><br><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html lang="&lt;%= config.language %&gt;"&gt;</span><br><span class="line">&lt;%- partial('_partial/head') %&gt;</span><br><span class="line"></span><br><span class="line"> &lt;% if (theme.loadingPages.enable) { %&gt;</span><br><span class="line">    &lt;%- partial('_partial/loading-pages') %&gt;</span><br><span class="line"> &lt;% } %&gt; </span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;% if (theme.loadingPages.enable) { %&gt;</span><br><span class="line">        &lt;div id="loading-container"&gt;</span><br><span class="line">             &lt;p class="loading-text"&gt;嘘~  正在从服务器偷取页面 . . . &lt;/p&gt; </span><br><span class="line">             &lt;div class="loading-image"&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt; </span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">             &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt; </span><br><span class="line">    &lt;% } %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%- partial('_partial/header') %&gt; </span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">来源: 斯莫笔记</span><br><span class="line">文章作者: Small-Rose</span><br><span class="line">文章链接: https://notes.zhangxiaocai.cn/posts/7496029d.html</span><br><span class="line">本文章著作权归作者所有，任何形式的转载都请注明出处。</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>对于上面的修改我的注释详解如下</p><p>首先找到<code>&lt;body&gt;</code>上面一点的<code>&lt;% if (theme.background.enable) { %&gt;</code><br><code>&lt;%- partial('_partial/background') %&gt;</code>改成<code>&lt;% if (theme.loadingPages.enable) { %&gt;</code><br>    <code>&lt;%- partial('_partial/loading-pages') %&gt;</code></p><p>然后就是在<code>&lt;body&gt;</code>和<code>&lt;body&gt;</code>下面的<code>&lt;%- partial('_partial/header') %&gt;</code></p><p>之间插入<br></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">```ejs</span><br><span class="line">这条线以上的不要复制</span><br><span class="line"> ------------------   </span><br><span class="line">&lt;% if (theme.loadingPages.enable) { %&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div id="loading-container"&gt;</span><br><span class="line">             &lt;p class="loading-text"&gt;啊哈~  正在从服务器偷取页面 . . . &lt;/p&gt; </span><br><span class="line">             &lt;div class="loading-image"&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt; </span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">             &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;% } %&gt; </span><br><span class="line">    </span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="3、添加开关配置"><a href="#3、添加开关配置" class="headerlink" title="3、添加开关配置"></a>3、添加开关配置</h2><p>这一点大佬没具体说在哪配置，所以我是在主题目录下的_config.yml文件下添加</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">loadingPages:</span><br><span class="line">  enable: true </span><br></pre></td></tr></tbody></table></figure><h1 id="7-添加自己DIY的页面"><a href="#7-添加自己DIY的页面" class="headerlink" title="7.添加自己DIY的页面"></a>7.添加自己DIY的页面</h1><p>由于我之前用自己所学做了一个简单的导航页面，想着把这个页面放进我的博客里（就是这个→<a href="https://226yzy.com/Mysearch/">YZY的搜索界面 (226yzy.com)</a>），因此我查找了添加自己页面的方法。这里参考了</p><p><a href="https://yafine-blog.cn/posts/12b4.html">Hexo+Github 博客搭建之 Matery 主题个性化修改篇（二） | 过客～励む (yafine-blog.cn)</a>的有关内容</p><p>具体就是，比如说以我的博客为例，我要在我的顶部菜单的“实验室”这一分菜单的下面添加我的导航页面的指引</p><p>那么就要像在博客根目录下的<code>source</code>下面建立一个文件夹，为了方便描述以及示例，该文件夹的名字为<code>Mysearch</code>。</p><p>我的修改如下，按你自己的要求修改（但是格式基本如此）</p><p>另外这里顺便一个贴我觉得还不错的查找<code>icon</code>的网站链接<a href="http://www.fontawesome.com.cn/">Font Awesome 中文网 – | 字体图标</a></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">实验室:</span><br><span class="line">    icon: fas fa-flask</span><br><span class="line">    children:</span><br><span class="line">      - name: 我的DIY导航页面</span><br><span class="line">        url: /Mysearch</span><br><span class="line">        icon: fab fa-searchengin</span><br></pre></td></tr></tbody></table></figure><p>然后在主题根目录下的<code>_config.yml</code>文件，<code>ctrl+F</code>查找<code>skip_render</code></p><p>在下面如下添加</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">skip_render:</span><br><span class="line">          - Mysearch/**</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> matery主题 </tag>
            
            <tag> 记录整理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>226YZY-BLOG-修改记录(第一弹)</title>
      <link href="/2021/071133926.html"/>
      <url>/2021/071133926.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p><code>注意现在我现在使用的主题是Butterfly，本篇是</code>对matery主题的修改</p></blockquote><p>这是我在对matery主题的一些地方的修改，希望有的内容对于有需要的小伙伴有所帮助</p><h1 id="1-对于移动端博客顶部标题过大问题的解决"><a href="#1-对于移动端博客顶部标题过大问题的解决" class="headerlink" title="1.对于移动端博客顶部标题过大问题的解决"></a>1.对于移动端博客顶部标题过大问题的解决</h1><p>首先在主题文件的<code>source/css/my.css</code>文件中</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*小屏幕下(手机类)的样式*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">601px</span>) {</span><br><span class="line">    <span class="selector-class">.container</span> {</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">95%</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    //以下是添加的内容</span><br><span class="line">    <span class="selector-tag">header</span> <span class="selector-class">.brand-logo</span> <span class="selector-class">.logo-span</span> {</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">0.6em</span>;</span><br><span class="line">        <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>另外要注意上面的这一部分在该css中最前面的位置，要找到以下代码，将以下代码移动到上面代码的前面</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">header</span> <span class="selector-class">.brand-logo</span> <span class="selector-class">.logo-span</span> {</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.6rem</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="2-将鼠标指针光标修改成自己的图片"><a href="#2-将鼠标指针光标修改成自己的图片" class="headerlink" title="2.将鼠标指针光标修改成自己的图片"></a>2.将鼠标指针光标修改成自己的图片</h1><p>在主体目录下找到<code>source/matery.css</code></p><p>在里面添加以下代码</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> {</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">../guangbiao.ico</span>), auto;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>url里面换成你自己要的图片后，我的图片后缀为.ico</p><h1 id="3-将首页的所有链接设置成在新的页面打开"><a href="#3-将首页的所有链接设置成在新的页面打开" class="headerlink" title="3.将首页的所有链接设置成在新的页面打开"></a>3.将首页的所有链接设置成在新的页面打开</h1><p>在主体目录下找到 <code>layout/index.ejs</code></p><p>在里面添加</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;base target="_blank"&gt;</span><br></pre></td></tr></tbody></table></figure><p>我是在<code>&lt;main class="content"&gt;</code>前面添加到</p><h1 id="4-修改右侧滚动条样式"><a href="#4-修改右侧滚动条样式" class="headerlink" title="4.修改右侧滚动条样式"></a>4.修改右侧滚动条样式</h1><p>我在主题目录下<code>source/matery.css</code>里添加了以下代码</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 滚动条 */</span></span><br><span class="line">::-webkit-scrollbar-thumb {</span><br><span class="line">    background-color: <span class="number">#2ab1ff</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">-webkit-linear-gradient</span>(<span class="number">45deg</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">4</span>) <span class="number">25%</span>, transparent <span class="number">25%</span>, transparent <span class="number">50%</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">4</span>) <span class="number">50%</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">4</span>) <span class="number">75%</span>, transparent <span class="number">75%</span>, transparent);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3em</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-track {</span><br><span class="line">    background-color: <span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3em</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar {</span><br><span class="line">    width: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">15px</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>颜色按个人喜好修改</p><h1 id="5-对右上角GitHub图标颜色修改"><a href="#5-对右上角GitHub图标颜色修改" class="headerlink" title="5.对右上角GitHub图标颜色修改"></a>5.对右上角GitHub图标颜色修改</h1><p>在主题目录下找到<code>layout/_partial/github-link.ejs</code></p><p>在其大概第十六行的位置对其颜色进行修改</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.github-corner</span> svg {</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#188ee7</span>;</span><br><span class="line">        fill: <span class="number">#fff</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">64px</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">64px</span>;</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><h1 id="6-对主题颜色的修改"><a href="#6-对主题颜色的修改" class="headerlink" title="6.对主题颜色的修改"></a>6.对主题颜色的修改</h1><p>在主题录下找到<code>source/matery.css</code></p><p>在有颜色属性的地方修改颜色</p><p>我是见绿改蓝（果然是蓝控）</p><h1 id="7-对新建文章的模板"><a href="#7-对新建文章的模板" class="headerlink" title="7.对新建文章的模板"></a>7.对新建文章的模板</h1><p>在根目录下找到<code>/scaffolds/post.md</code>修改</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: { { title } }</span><br><span class="line">date: { { date } }</span><br><span class="line">author:</span><br><span class="line">img:</span><br><span class="line">coverImg:</span><br><span class="line">top: false</span><br><span class="line">cover: false</span><br><span class="line">toc: true</span><br><span class="line">mathjax: false</span><br><span class="line">password:</span><br><span class="line">summary:</span><br><span class="line">keywords:</span><br><span class="line">tags:</span><br><span class="line"><span class="section">categories:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></tbody></table></figure><h1 id="8-首页图片背景加载出之前红色背景颜色修改"><a href="#8-首页图片背景加载出之前红色背景颜色修改" class="headerlink" title="8.首页图片背景加载出之前红色背景颜色修改"></a>8.首页图片背景加载出之前红色背景颜色修改</h1><p>在主题目录下找到<code>sourcelibs/materialize/materialize.min.css</code></p><p>ctrl+f输入.red{</p><p>显示的位置就是修改该背景颜色的位置</p><h1 id="9-解决复制代码粘贴不能换行的问题"><a href="#9-解决复制代码粘贴不能换行的问题" class="headerlink" title="9.解决复制代码粘贴不能换行的问题"></a>9.解决复制代码粘贴不能换行的问题</h1><p>在matery主题目录下找到<code>layout\\_partial\post-detail.ejs</code></p><p>大概在223行</p><p>将if语句的注释掉，保留中间的，大致可参考下面的代码的样子</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//if (selection.getRangeAt(0).commonAncestorContainer.nodeName === 'PRE') {</span><br><span class="line">     newdiv.innerHTML = "&lt;pre&gt;" + newdiv.innerHTML + "&lt;/pre&gt;";</span><br><span class="line">//}</span><br></pre></td></tr></tbody></table></figure><h1 id="10-文章内目录大纲的字体颜色修改"><a href="#10-文章内目录大纲的字体颜色修改" class="headerlink" title="10.文章内目录大纲的字体颜色修改"></a>10.文章内目录大纲的字体颜色修改</h1><p>在主题目录下找到<code>layout\\_partial\post-detail-toc.ejs</code></p><p>ctrl+f搜索<code>is-active-link</code></p><p>大致在70行的位置修改字体颜色</p><p>顺便把<code>\#toc-content .toc-link:hover</code> （大概56行）里的颜色也改了</p><p>(这里修改的是鼠标指针经过后字体改变的颜色)</p><h1 id="11-修改留言板的链接提示，及发送弹幕的访客未填写链接时的默认链接"><a href="#11-修改留言板的链接提示，及发送弹幕的访客未填写链接时的默认链接" class="headerlink" title="11.修改留言板的链接提示，及发送弹幕的访客未填写链接时的默认链接"></a>11.修改留言板的链接提示，及发送弹幕的访客未填写链接时的默认链接</h1><p>如果你正确地创建了该分页，那么你可以在主题目录下找到<code>layout/contact.ejs</code>然后ctrl+f搜索<a href="https://github.com/blinkfox">https://github.com/blinkfox</a></p><p>(这里对matery的作者表示敬意Orz)在搜索到的位置修改即可</p>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> matery主题 </tag>
            
            <tag> 记录整理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的&quot;Hello World&quot; &amp; Markdown基础</title>
      <link href="/2021/071060549.html"/>
      <url>/2021/071060549.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>感谢来到我的博客，可能我的博客目前还些许简陋，欢迎大家的建言献策。</p><p>这一篇文章主要是为了进一步熟悉Markdown写作</p><p>另外也在此感谢我建立博客中所有人的帮助</p><p>其中重点感谢我当前使用的主题<a href="https://github.com/blinkfox/hexo-theme-matery/">hexo-theme-matery</a>的作者<a href="https://github.com/blinkfox">闪烁之狐</a>(在此膜拜大佬Orz)</p><p>还有感谢乐于分享的博主们，正是因为他们的分享，才有了现在我的博客大概的样子</p><!-- 还有特别感谢<font size=4 color=#188ee7>WSH</font>以及<font size=4 color=#188ee7>zzh</font>对我的博客的测试的帮助(但是<font size=4 color=#188ee7>zzh</font>很不乖:satisfied:批评，严厉批评！！！) --><h1 id="Markdown写作介绍尝试"><a href="#Markdown写作介绍尝试" class="headerlink" title="Markdown写作介绍尝试"></a>Markdown写作介绍尝试</h1><p>(持续更新…)</p><h2 id="1-分级标题"><a href="#1-分级标题" class="headerlink" title="1.分级标题"></a>1.分级标题</h2><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 2，分级标题</span></span><br><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></tbody></table></figure><h2 id="2-文字相关"><a href="#2-文字相关" class="headerlink" title="2.文字相关"></a>2.文字相关</h2><p><strong>1加粗</strong><br><em>2斜体</em><br><strong><em>3加粗+斜体</em></strong><br><del>4删除线</del><br>^5^上标<br>~6~下标</p><ol><li>有序列表</li><li>有序列表</li></ol><ul><li>无序列表</li></ul><ul><li>无序列表</li></ul><ul><li>无序列表</li></ul><p><font size="5" color="#188ee7" face="黑体">YZY</font>字体加颜色及大小，字体</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**1加粗**</span></span><br><span class="line"><span class="emphasis">*2斜体*</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*3加粗+斜体<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">~~4删除线~~</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">^5^上标</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">~6~下标</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">1. 有序列表</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">2. 有序列表</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">- 无序列表</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">+ 无序列表</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">*</span> 无序列表</span></span></span></span><br><span class="line"><span class="strong"><span class="emphasis"><span class="strong"><span class="xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">5</span> <span class="attr">color</span>=<span class="string">#188ee7</span>&gt;</span></span>YZY<span class="xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span>字体加颜色及大小，字体</span></span></span></span><br></pre></td></tr></tbody></table></figure><h2 id="3-引用"><a href="#3-引用" class="headerlink" title="3.引用"></a>3.引用</h2><blockquote><p>引用示例<br>hello world</p></blockquote><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;引用示例</span><br><span class="line">hello world</span><br></pre></td></tr></tbody></table></figure><h2 id="4-加入代码块"><a href="#4-加入代码块" class="headerlink" title="4.加入代码块"></a>4.加入代码块</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">while</span>(sc.hasNext()){</span><br><span class="line">System.out.println(lcm(sc.nextLong(),sc.nextLong()));</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">long</span> <span class="title">gcd</span><span class="params">(<span class="keyword">long</span> a, <span class="keyword">long</span> b)</span></span>{</span><br><span class="line"><span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">long</span> <span class="title">lcm</span><span class="params">(<span class="keyword">long</span> a,<span class="keyword">long</span> b)</span> </span>{</span><br><span class="line"><span class="keyword">return</span> a*b/gcd(a,b);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>方法如下<br></p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="code">```java</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">你要输入的代码（注意不需要'['和']'）</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">```</span>]</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="5-加入图片"><a href="#5-加入图片" class="headerlink" title="5.加入图片"></a>5.加入图片</h2><p><img src="/medias/avatar.jpg" alt="图片"></p><p>方法如下<br></p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![<span class="string">图片</span>](<span class="link">/medias/avatar.jpg</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="6-表格"><a href="#6-表格" class="headerlink" title="6.表格"></a>6.表格</h2><div class="table-container"><table><thead><tr><th>表头</th><th style="text-align:center">表头</th><th style="text-align:right">表头</th></tr></thead><tbody><tr><td>内容</td><td style="text-align:center">内容</td><td style="text-align:right">内容</td></tr><tr><td>内容</td><td style="text-align:center">内容</td><td style="text-align:right">内容</td></tr><tr><td>1</td><td style="text-align:center">2</td><td style="text-align:right">3</td></tr></tbody></table></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|表头|表头|表头|</span><br><span class="line">|---|:--:|---:|//默认居左，:居中:，居右:(注释记得去掉)</span><br><span class="line">|内容|内容|内容|</span><br><span class="line">|内容|内容|内容|</span><br><span class="line">|1|2|3|</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生活随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> Hello World </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/061916107.html"/>
      <url>/2021/061916107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 生活随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
