<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL 触发器</title>
      <link href="/2021/121130800.html"/>
      <url>/2021/121130800.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本篇为我个人学习MySQL时的资料整理笔记</p><p>主要参考了<code>李福翠</code>老师在超星上的资料以及上课内容</p><p>还有有<code>MySQL5.7从零开始学：视频教学版 / 王英英，李小威编著. -北京：清华大学出版社，2018</code>这本书，以及网上其他博客(具体见文末参考文献)</p><h1 id="触发器简介"><a href="#触发器简介" class="headerlink" title="触发器简介"></a>触发器简介</h1><p>触发器(trigger)是一个特殊的存储过程，不同的是，执行存储过程要使用<code>call</code>语句来调用，而触发器不需要，并且需要手动启动。触发器主要用于监视某个表的insert、update以及delete等更新操作，这些操作可以分别激活该表的insert、update或者delete类型的触发程序运行，从而实现数据的自动维护。</p><h1 id="创建触发器"><a href="#创建触发器" class="headerlink" title="创建触发器"></a>创建触发器</h1><h2 id="创建触发器基础语法"><a href="#创建触发器基础语法" class="headerlink" title="创建触发器基础语法"></a>创建触发器基础语法</h2><p>使用<code>create trigger</code>语句可以创建一个触发器，</p><blockquote><p>这里就直接用多执行语句的语法了</p></blockquote><p>语法格式如下:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">delimiter //</span><br><span class="line"></span><br><span class="line">create trigger 触发器名 触发时间 触发事件</span><br><span class="line"> on 表名 for each row</span><br><span class="line">begin</span><br><span class="line">触发程序</span><br><span class="line">end</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">delimiter ;</span><br></pre></td></tr></tbody></table></figure><h2 id="触发时间"><a href="#触发时间" class="headerlink" title="触发时间"></a>触发时间</h2><p>触发器的触发时间有两种：<code>before</code>与<code>after</code>。</p><ul><li><p><code>before</code>表示在触发事件发生之前执行触发程序。</p></li><li><p><code>after</code>表示在触发事件发生之后执行触发器。</p></li></ul><h2 id="触发事件"><a href="#触发事件" class="headerlink" title="触发事件"></a>触发事件</h2><p><strong>MySQL的触发事件有三种：</strong></p><ul><li><p><code>insert</code>：将新记录插入表时激活触发程序，例如通过insert、load data和replace语句，可以激活触发程序运行。</p></li><li><p><code>update</code>：更改某一行记录时激活触发程序，例如通过update语句，可以激活触发程序运行。</p></li><li><p><code>delete</code>：从表中删除某一行记录时激活触发程序，例如通过delete和replace语句，可以激活触发程序运行。</p></li></ul><blockquote><p>LOAD DATA 语句用于将一个文件装入到一个数据表中，相当与一系列的 INSERT 操作。</p><p>REPLACE 语句一般来说和 INSERT 语句很像，只是在表中有 primary key 或 unique 索引时，如果插入的数据和原来 primary key 或 unique 索引一致时，会先删除原来的数据，然后增加一条新数据，也就是说，一条 REPLACE 语句有时候等价于一条。INSERT 语句，有时候等价于一条 DELETE 语句加上一条 INSERT 语句。<br>————————————————<br>版权声明：本文为CSDN博主「Jack小强」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/yjqyyjw/article/details/68943641">https://blog.csdn.net/yjqyyjw/article/details/68943641</a></p></blockquote><h2 id="六类触发器"><a href="#六类触发器" class="headerlink" title="六类触发器"></a>六类触发器</h2><ul><li><code>BEFORE INSERT</code> - 在将数据插入表格之前激活。</li><li><code>AFTER INSERT</code> - 将数据插入表格后激活。</li><li><code>BEFORE UPDATE</code> - 在更新表中的数据之前激活。</li><li><code>AFTER UPDATE</code> - 更新表中的数据后激活。</li><li><code>BEFORE DELETE</code> - 在从表中删除数据之前激活。</li><li><code>AFTER DELETE</code> - 从表中删除数据后激活。</li></ul><h2 id="for-each-row"><a href="#for-each-row" class="headerlink" title="for each row"></a>for each row</h2><p><code>for each row</code>表示行级触发器。</p><p>目前MySQL仅支持行级触发器，不支持语句级别（又叫做表级触发器）的触发器（例如create table等语句）。for each row表示更新（insert、update或者delete）操作影响的每一条记录都会执行一次触发程序。</p><h2 id="old关键字与new关键字"><a href="#old关键字与new关键字" class="headerlink" title="old关键字与new关键字"></a>old关键字与new关键字</h2><ul><li>old关键字</li></ul><p>当从表中删除某条旧记录时，在触发程序中可以使用<code>old</code>关键字表示旧记录，当需要访问旧记录的某个字段值时，可以使用<code>old.字段名</code>的方式访问。</p><ul><li>new关键字</li></ul><p>当向表插入新记录时，在触发程序中可以使用<code>new</code>关键字表示新记录，当需要访问新记录的某个字段值时，可以使用<code>new.字段名</code>的方式访问。</p><blockquote><p>在 INSERT 型触发器中，NEW 用来表示将要（BEFORE）或已经（AFTER）插入的新数据；<br>在 UPDATE 型触发器中，OLD 用来表示将要或已经被修改的原数据，NEW 用来表示将要或已经修改为的新数据；<br>在 DELETE 型触发器中，OLD 用来表示将要或已经被删除的原数据；</p><p><code>注意</code>：OLD 是只读的，而 NEW 则可以在触发器中使用 SET 赋值，这样不会再次触发触发器，造成循环调用（如每插入一个学生前，都在其学号前加“2013”）。<br>————————————————<br>版权声明：本文为CSDN博主「Jack小强」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/yjqyyjw/article/details/68943641">https://blog.csdn.net/yjqyyjw/article/details/68943641</a></p></blockquote><h1 id="查看触发器"><a href="#查看触发器" class="headerlink" title="查看触发器"></a>查看触发器</h1><p>这里介绍查看触发器的三种方法</p><h3 id="通过show-triggers语句"><a href="#通过show-triggers语句" class="headerlink" title="通过show triggers语句"></a>通过<code>show triggers</code>语句</h3><p>可以使用<code>show triggers</code>语句查看触发器信息</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show triggers;</span><br></pre></td></tr></tbody></table></figure><p>上面的命令，执行后看到的东西会相对比较混乱，可以在<code>show trigger</code>后面加上<code>\G</code>,这样可以使显示的信息比较工整有条理。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show triggers \G</span><br></pre></td></tr></tbody></table></figure><h3 id="查询information-schema数据库"><a href="#查询information-schema数据库" class="headerlink" title="查询information_schema数据库"></a>查询<code>information_schema</code>数据库</h3><p>MySQL中所有触发器的定义都存放在<code>information_schema</code>数据库下的triggers表中，查询<code>triggers</code>表，可以查看所有数据库中所有触发器的详细信息，查询语句如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from information_schema.triggers \G</span><br></pre></td></tr></tbody></table></figure><h3 id="使用show-create-trigger命令"><a href="#使用show-create-trigger命令" class="headerlink" title="使用show create trigger命令"></a>使用<code>show create trigger</code>命令</h3><p>例如查看触发器organization_delete_before_trigger的定义。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create trigger organization_delete_before_trigger \G</span><br></pre></td></tr></tbody></table></figure><h1 id="删除触发器"><a href="#删除触发器" class="headerlink" title="删除触发器"></a>删除触发器</h1><p>可以使用<code>drop trigger</code>语句将该触发器删除</p><p>语法格式如下:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop trigger 触发器名</span><br></pre></td></tr></tbody></table></figure><h1 id="修改触发器"><a href="#修改触发器" class="headerlink" title="修改触发器"></a>修改触发器</h1><p>要修改触发器，必须先将其删除，然后使用新代码重新创建。</p><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><blockquote><p>该部分引用了<code>李福翠</code>老师在超星上发布的课程资料</p></blockquote><h2 id="实践所用数据"><a href="#实践所用数据" class="headerlink" title="实践所用数据"></a>实践所用数据</h2><ul><li>建立数据库</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Create Database Student2 default character set utf8 default COLLATE utf8_bin;</span><br></pre></td></tr></tbody></table></figure><ul><li>使用当前数据库</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Use Student2;</span><br></pre></td></tr></tbody></table></figure><ul><li>建表</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Create Table Student(</span><br><span class="line">SNo char(20) primary key,</span><br><span class="line">SName char(20) ,</span><br><span class="line">SSex char(4)  default '男',</span><br><span class="line">Sage int</span><br><span class="line">) ENGINE=InnoDB;</span><br></pre></td></tr></tbody></table></figure><p>在已存在的学生表student中增加一个sdept（系）的新的属性列；</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">alter table Student add Dept char(20);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Create Table Course(</span><br><span class="line">CNo char(20) primary key,</span><br><span class="line">CName char(20) NOT NULL,</span><br><span class="line">CRedit float</span><br><span class="line">) ENGINE=InnoDB;</span><br><span class="line"></span><br><span class="line">Create Table SC(</span><br><span class="line">SNo char(20) NOT NULL,</span><br><span class="line">CNo char(20) NOT NULL,</span><br><span class="line">Grade float,</span><br><span class="line">Primary Key(SNo, CNo),</span><br><span class="line">Foreign Key(SNo) References Student(SNo) On Delete Cascade,</span><br><span class="line">Foreign Key(CNo) References Course(CNo)</span><br><span class="line">) ENGINE=InnoDB;</span><br></pre></td></tr></tbody></table></figure><ul><li>插入数据</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#学生表student的数据</span><br><span class="line">Insert Into Student Values('991201', '张三', '男', 22, '计算机科学与技术系');</span><br><span class="line">Insert Into Student Values('991202', '李四', '男', 21, '信息科学系');</span><br><span class="line">Insert Into Student Values('991101', '王五', '男', 23, '数理系');</span><br><span class="line">Insert Into Student Values('991102', '陈六', '男', 19, '计算机科学与技术系');</span><br><span class="line">Insert Into Student Values('991103', '吴七', '女', 24, '数理系');</span><br><span class="line">Insert Into Student Values('000101', '刘八', '女', 22, '信息科学系');</span><br><span class="line"></span><br><span class="line">#课程表course的数据</span><br><span class="line">Insert Into Course Values('1', '数学', 5);</span><br><span class="line">Insert Into Course Values('2', '数据结构', 4);</span><br><span class="line">Insert Into Course Values('3', '程序设计', 2);</span><br><span class="line">Insert Into Course Values('4', '数据库原理', 3);</span><br><span class="line">Insert Into Course Values('5', '操作系统', 3);</span><br><span class="line"></span><br><span class="line">#选课表SC的数据：</span><br><span class="line">Insert Into SC Values('991201', '1', 90);</span><br><span class="line">Insert Into SC Values('991201', '5', 80);</span><br><span class="line">Insert Into SC Values('991201', '3', 85);</span><br><span class="line">Insert Into SC Values('991201', '4', 90);</span><br><span class="line">Insert Into SC Values('991102', '1', 85);</span><br><span class="line">Insert Into SC Values('991102', '2', 98);</span><br><span class="line">Insert Into SC Values('000101', '2', 91);</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>1.对<code>student</code>表创建<code>delete</code>触发器，当删除某个学生记录时，同时在选课表<code>SC</code>中删除该学生的选课记录。</p><p>参考：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">select * from student ; </span><br><span class="line">select * from sc ; </span><br><span class="line"></span><br><span class="line">delimiter //</span><br><span class="line">create trigger t1 AFTER  delete  on student </span><br><span class="line">FOR EACH ROW   </span><br><span class="line"> BEGIN</span><br><span class="line">      Delete from  SC  WHERE sno = old.sno;</span><br><span class="line">END</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">delimiter ;</span><br><span class="line">delete from student where  SNo='000101';</span><br><span class="line">select * from student ; </span><br><span class="line">select * from sc ; </span><br></pre></td></tr></tbody></table></figure><p>2.在<code>student</code>表上定义了一个<code>update</code>触发程序，用于检查更新<code>sage</code>时将使用的新值，小于16时取得16,大于40时取40，并更改值。触发器创建成功后，将<code>student</code>表中的<code>SNO</code>值为<strong>991103的学生年龄修改为2</strong>。</p><p>参考：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">delimiter //</span><br><span class="line">create trigger upd_check before  update  on student </span><br><span class="line">   FOR EACH ROW </span><br><span class="line">    begin</span><br><span class="line">         if   new.sage&lt;16 then</span><br><span class="line">           set new.sage=16;</span><br><span class="line">        elseif  new.sage&gt;60 then</span><br><span class="line">           set new.sage=40;</span><br><span class="line">         end if;</span><br><span class="line">end;</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">delimiter ;</span><br><span class="line">select * from student; </span><br><span class="line">  update  student set sage=5 where sno='991103';</span><br><span class="line">  select * from student ;</span><br></pre></td></tr></tbody></table></figure><p>3.在<code>student</code>表上定义了一个<code>insert</code>触发程序，用于检查插入<code>ssex</code>时只能取男和女，输入其它时取<code>NULL</code>。触发器创建成功后，向<code>student</code>表中插入记录<strong>(‘000106’, ‘陈规则’, ‘五’, 22, ‘信息科学系’)</strong>。</p><p>参考：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">delimiter //</span><br><span class="line">create trigger ins_check before  insert  on student </span><br><span class="line">   FOR EACH ROW </span><br><span class="line">    begin</span><br><span class="line">         if new.ssex&lt;&gt;'男' and new.ssex &lt;&gt;'女' then</span><br><span class="line">           set new.ssex =null;</span><br><span class="line">          end if;</span><br><span class="line">end; </span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">delimiter ;</span><br><span class="line">select * from student;</span><br><span class="line">Insert Into Student Values('000106', '陈规则', '五', 22, '信息科学系');</span><br><span class="line">select * from student;</span><br></pre></td></tr></tbody></table></figure><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><h2 id="在线资源"><a href="#在线资源" class="headerlink" title="在线资源"></a>在线资源</h2><h3 id="其他博客"><a href="#其他博客" class="headerlink" title="其他博客"></a>其他博客</h3><p><a href="https://blog.csdn.net/yjqyyjw/article/details/68943641">【mysql】触发器的实例详解_Jack小强-CSDN博客</a></p><p><a href="https://www.yiibai.com/mysql/triggers.html">MySQL触发器 - MySQL教程™ (yiibai.com)</a></p><p><a href="https://www.begtut.com/mysql/mysql-triggers.html">MySQL 触发器 | 新手教程 (begtut.com)</a></p><p><a href="http://c.biancheng.net/view/7242.html">MySQL查看触发器 (biancheng.net)</a></p><h2 id="参考书籍"><a href="#参考书籍" class="headerlink" title="参考书籍"></a>参考书籍</h2><p><code>MySQL5.7从零开始学：视频教学版 / 王英英，李小威编著. -北京：清华大学出版社，2018</code></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>部分内容来自<code>李福翠</code>老师的上课内容及超星上的资料</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
          <category> 触发器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 触发器 </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue组件基础学习笔记</title>
      <link href="/2021/120927345.html"/>
      <url>/2021/120927345.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本篇将主要介绍Vue组件的相关内容，有些可能会较为简略</p><p>部分内容参考菜鸟教程<a href="https://www.runoob.com/w3cnote/vue-js-quickstart.html">Vue.js 入门教程 | 菜鸟教程 (runoob.com)</a>和Vue的官方文档<a href="https://v3.cn.vuejs.org/guide/introduction.html">介绍 | Vue.js (vuejs.org)</a>，另外参考书籍<code>梁灏，Vue.js实战[M] 北京：清华大学出版社，2017</code></p><blockquote><p><code>注：</code>由于个人能力有限，暂不会在Markdown中使用Vue相关内容</p><p>所以另外写了一个网页，作为效果参考。链接如下</p><p><a href="https://www.226yzy.com/demos/VueDemo/">https://www.226yzy.com/demos/VueDemo/</a></p></blockquote><h1 id="基本示例"><a href="#基本示例" class="headerlink" title="基本示例"></a>基本示例</h1><p>一个简单的示例</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0"&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">         </span><br><span class="line">        &lt;script&gt;</span><br><span class="line">        // 全局注册</span><br><span class="line">        Vue.component('hallo-world', {</span><br><span class="line">            //内容</span><br><span class="line">          template: '&lt;button&gt;Hello World&lt;/button&gt;'</span><br><span class="line">        })</span><br><span class="line">        // 创建根实例</span><br><span class="line">        new Vue({</span><br><span class="line">          el: '#app0'</span><br><span class="line">        })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>通过得出的效果可知，组件是可复用的 Vue 实例，所以它们与 <code>new Vue</code> 接收相同的选项，例如 <code>data</code>、<code>computed</code>、<code>watch</code>、<code>methods</code> 以及生命周期钩子等。仅有的例外是像 <code>el</code> 这样根实例特有的选项。</p><h2 id="函数示例"><a href="#函数示例" class="headerlink" title="函数示例"></a>函数示例</h2><p>上面没有啥数据绑定和事件响应，所以增加了下面的内容</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0-1"&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            // 全局注册</span><br><span class="line">            Vue.component('hallo-world', {</span><br><span class="line">                template: '&lt;button @click="x++"&gt;你点击了这个 {{x}} 次&lt;/button&gt;',</span><br><span class="line">                data:function(){</span><br><span class="line">                    return {</span><br><span class="line">                        x:0</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">            // 创建根实例</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app0-1'</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>当点击按钮时，每个组件都会各自独立维护它的 <code>x</code>。因为你每用一次组件，就会有一个它的新<strong>实例</strong>被创建。</p><p>另外，当我们定义这个 <code>&lt;hello-world/&gt;</code> 组件时，你可能会发现它的 <code>data</code> 并不是像这样直接提供一个对象</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data: {</span><br><span class="line">  x: 0</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>在组件中<strong><code>data</code> 选项必须是一个函数</strong>，因此每个实例可以维护一份被返回对象的独立的拷贝：</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data: function () {</span><br><span class="line">  return {</span><br><span class="line">    x: 0</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>如果你使用的是对象，请用以下代码试试会发生什么</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0-1-1"&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            var t={</span><br><span class="line">                x:0</span><br><span class="line">            }</span><br><span class="line">            // 全局注册</span><br><span class="line">            Vue.component('hallo-world', {</span><br><span class="line">                template: '&lt;button @click="x++"&gt;你点击了这个 {{x}} 次&lt;/button&gt;',</span><br><span class="line">                data: function () {</span><br><span class="line">                    return t</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">            // 创建根实例</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app0-1-1',</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>上面代码产生的效果是：点击一个按钮就会影响到其它按钮</p><h2 id="本例中的template"><a href="#本例中的template" class="headerlink" title="本例中的template"></a>本例中的template</h2><p>在<code>template</code>中，一般写成单行，否则会报错</p><p>如果要多行，那么可以在需要换行的那一行后面添加转义字符<code>\</code></p><p>对上一个代码换行修改示例如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0-1-0"&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            // 全局注册</span><br><span class="line">            Vue.component('hallo-world', {</span><br><span class="line">                template: '&lt;button @click="x++"&gt;\</span><br><span class="line">                        你点击了这个 {{x}} 次\</span><br><span class="line">    &lt;/button&gt;',</span><br><span class="line">                data: function () {</span><br><span class="line">                    return {</span><br><span class="line">                        x: 0</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">            // 创建根实例</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app0-1-0'</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="全局组件"><a href="#全局组件" class="headerlink" title="全局组件"></a>全局组件</h1><p>所有实例都能用全局组件。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0-1"&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">            &lt;hallo-world&gt;&lt;/hallo-world&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            // 全局注册</span><br><span class="line">            Vue.component('hallo-world', {</span><br><span class="line">                template: '&lt;button @click="x++"&gt;你点击了这个 {{x}} 次&lt;/button&gt;',</span><br><span class="line">                data:function(){</span><br><span class="line">                    return {</span><br><span class="line">                        x:0</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">            // 创建根实例</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app0-1'</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>这个代码跟基本示例中的代码基本一样</p><h1 id="局部组件"><a href="#局部组件" class="headerlink" title="局部组件"></a>局部组件</h1><p>我们也可以在实例选项中注册局部组件，这样组件只能在这个实例中使用：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0-2"&gt;</span><br><span class="line">            &lt;runoob&gt;&lt;/runoob&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            var Child = {</span><br><span class="line">                template: '&lt;h1&gt;自定义组件!&lt;/h1&gt;'</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            // 创建根实例</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app0-2',</span><br><span class="line">                components: {</span><br><span class="line">                    // &lt;runoob&gt; 将只在父模板可用</span><br><span class="line">                    'runoob': Child</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="prop"><a href="#prop" class="headerlink" title="prop"></a>prop</h1><h2 id="通过-Prop-向子组件传递数据"><a href="#通过-Prop-向子组件传递数据" class="headerlink" title="通过 Prop 向子组件传递数据"></a>通过 Prop 向子组件传递数据</h2><p><code>prop</code> 是子组件用来接受父组件传递过来的数据的一个自定义属性。（也就是向组件传入数据）</p><p>父组件的数据需要通过 <code>props</code> 把数据传给子组件，子组件需要显式地用 <code>props</code> 选项声明 <code>prop</code>：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0-3"&gt;            &lt;child message="hello!"&gt;&lt;/child&gt;        &lt;/div&gt;        &lt;script&gt;            // 注册            Vue.component('child', {                // 声明 props                props: ['message'],                // 同样也可以在 vm 实例中像 "this.message" 这样使用                template: '&lt;span&gt;{{ message }}&lt;/span&gt;'            })            // 创建根实例            new Vue({                el: '#app0-3'            })        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>一个组件默认可以拥有任意数量的 prop，任何值都可以传递给任何 prop。在组件实例中访问这个值，就像访问 <code>data</code> 中的值一样。</p><h2 id="Prop-的大小写"><a href="#Prop-的大小写" class="headerlink" title="Prop 的大小写"></a>Prop 的大小写</h2><p>HTML 中的 attribute 名是大小写不敏感的，所以浏览器会把所有大写字符解释为小写字符。这意味着当你使用 DOM 中的模板时，camelCase (驼峰命名法) 的 prop 名需要使用其等价的 kebab-case (短横线分隔命名) 命名：</p><p>示例如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app0-3-1"&gt;            &lt;blog-post post-title="hello!"&gt;&lt;/blog-post&gt;        &lt;/div&gt;        &lt;script&gt;            // 全局注册            Vue.component('blog-post', {                // 在 JavaScript 中是 camelCase 的                props: ['postTitle'],                template: '&lt;h3&gt;{{ postTitle }}&lt;/h3&gt;'            })            // 创建根实例            new Vue({                el: '#app0-3-1'            })        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="监听子组件事件"><a href="#监听子组件事件" class="headerlink" title="监听子组件事件"></a>监听子组件事件</h1><blockquote><p>参考自<code>菜鸟教程</code></p></blockquote><p>我们可以使用 <code>v-on</code>绑定自定义事件, 每个 Vue 实例都实现了事件接口(Events interface)，即：</p><ul><li>使用 <code>$on(eventName)</code> 监听事件</li><li>使用 <code>$emit(eventName)</code> 触发事件</li></ul><p>另外，父组件可以在使用子组件的地方直接用 <code>v-on</code>来监听子组件触发的事件。</p><p>下面示例来自菜鸟教程</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app"&gt;    &lt;div id="counter-event-example"&gt;      &lt;p&gt;{{ total }}&lt;/p&gt;      &lt;button-counter v-on:increment="incrementTotal"&gt;&lt;/button-counter&gt;      &lt;button-counter v-on:increment="incrementTotal"&gt;&lt;/button-counter&gt;    &lt;/div&gt;&lt;/div&gt; &lt;script&gt;Vue.component('button-counter', {  template: '&lt;button v-on:click="incrementHandler"&gt;{{ counter }}&lt;/button&gt;',  data: function () {    return {      counter: 0    }  },  methods: {    incrementHandler: function () {      this.counter += 1      this.$emit('increment')    }  },})new Vue({  el: '#counter-event-example',  data: {    total: 0  },  methods: {    incrementTotal: function () {      this.total += 1    }  }})&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="自定义组件的-v-model"><a href="#自定义组件的-v-model" class="headerlink" title="自定义组件的 v-model"></a>自定义组件的 v-model</h1><blockquote><p>参考自<code>菜鸟教程</code></p></blockquote><p>组件上的 v-model 默认会利用名为 value 的 prop 和名为 input 的事件。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input v-model="parentData"&gt;</span><br></pre></td></tr></tbody></table></figure><p>等价于：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input     :value="parentData"    @input="parentData = $event.target.value"&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><h2 id="在线资源"><a href="#在线资源" class="headerlink" title="在线资源"></a>在线资源</h2><h3 id="菜鸟教程"><a href="#菜鸟教程" class="headerlink" title="菜鸟教程"></a>菜鸟教程</h3><p><a href="https://www.runoob.com/w3cnote/vue-js-quickstart.html">Vue.js 入门教程 | 菜鸟教程 (runoob.com)</a></p><h3 id="Vue官方中文文档"><a href="#Vue官方中文文档" class="headerlink" title="Vue官方中文文档"></a>Vue官方中文文档</h3><p><a href="https://v3.cn.vuejs.org/guide/introduction.html">介绍 | Vue.js (vuejs.org)</a></p><h3 id="其他博客"><a href="#其他博客" class="headerlink" title="其他博客"></a>其他博客</h3><p><a href="https://blog.csdn.net/qq_37334135/article/details/89264348"> Vue快速入门_成都往右的博客-CSDN博客_vue入门</a></p><h2 id="参考书籍"><a href="#参考书籍" class="headerlink" title="参考书籍"></a>参考书籍</h2><p><code>[1]梁灏，Vue.js实战[M] 北京：清华大学出版社，2017</code></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>部分内容来自<code>姚军</code>老师的上课内容</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> Vue </tag>
            
            <tag> 基础 </tag>
            
            <tag> 组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础学习笔记</title>
      <link href="/2021/120860549.html"/>
      <url>/2021/120860549.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本篇将记录我的Vue的学习,有些可能会较为简略</p><p>部分内容参考菜鸟教程<a href="https://www.runoob.com/w3cnote/vue-js-quickstart.html">Vue.js 入门教程 | 菜鸟教程 (runoob.com)</a>和Vue的官方文档<a href="https://v3.cn.vuejs.org/guide/introduction.html">介绍 | Vue.js (vuejs.org)</a>，另外参考书籍<code>梁灏，Vue.js实战[M] 北京：清华大学出版社，2017</code></p><blockquote><p><code>注：</code>由于个人能力有限，暂不会在Markdown中使用Vue相关内容</p><p>所以另外写了一个网页，作为效果参考。链接如下</p><p><a href="https://www.226yzy.com/demos/VueDemo/">https://www.226yzy.com/demos/VueDemo/</a></p></blockquote><h1 id="入门-Hello-World"><a href="#入门-Hello-World" class="headerlink" title="入门-Hello World"></a>入门-Hello World</h1><p>新的学习从<code>Hello World</code>开始🤣</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>{{ message }}<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="javascript">  <span class="attr">el</span>: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="javascript">  <span class="attr">data</span>: {</span></span><br><span class="line"><span class="javascript">    <span class="attr">message</span>: <span class="string">'Hello World'</span></span></span><br><span class="line"><span class="javascript">  }</span></span><br><span class="line"><span class="javascript">})</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>没有下载好的Vue.js,可以通过script加载CDN文件，引入最新稳定版本的Vue.js框架 。有的话，可以将路径修改为你自己下载好的Vue.js的相对路径</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h1 id="Vue实例与数据绑定"><a href="#Vue实例与数据绑定" class="headerlink" title="Vue实例与数据绑定"></a>Vue实例与数据绑定</h1><h2 id="实例与数据"><a href="#实例与数据" class="headerlink" title="实例与数据"></a>实例与数据</h2><p>Vue.js应用创建是通过构造函数Vue就可以创建一个Vue的根实例并启动Vue应用</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue({</span><br><span class="line">    // 选项</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p>上面的变量<code>app</code>代表了这个实例</p><p>然后，一个必不可少的选项就是<code>el</code></p><p><code>el</code>用于指定一个页面中已存在的DOM元素来挂载Vue实例</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app"&gt;&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">new Vue({</span><br><span class="line">  el: '#app'</span><br><span class="line">})</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h3><p>是 vue 的双向绑定的指令，能将页面上控件输入的值同步更新到相关绑定的data属性，也会在更新data绑定属性时候，更新页面上输入控件的值。</p><p>比如</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-0"&gt;</span><br><span class="line">            &lt;input v-model="value"&gt;</span><br><span class="line">            {{value}}</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app-0',</span><br><span class="line">                data: {</span><br><span class="line">                    value: 100,</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p><code>v-model</code>帮我们做的事就是，为<code>input</code> 的 <code>value</code> 值设置一个动态绑定，然后在输入框的 <code>input</code>事件触发后实时修改动态绑定的 <code>value</code> 的变量值。</p><h2 id="插值与表达式"><a href="#插值与表达式" class="headerlink" title="插值与表达式"></a>插值与表达式</h2><blockquote><p><code>注</code>这里HEXO渲染有点小问题</p></blockquote><p>使用双大括号<code>{{}}`是最基本的文本插值方法，它会自动将我们双向绑定的数据实时显示出来例子见前面的HelloWorld### v-text和v-html- `v-text`：将数据输出到元素内部，如果输出的数据有HTML代码，会作为普通文本输出- `v-html`：将数据输出到元素内部，如果输出的数据有HTML代码，会被渲染  </code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-0-0"&gt;</span><br><span class="line">            v-text: &lt;span v-text="value"&gt;&lt;/span&gt;</span><br><span class="line">            &lt;br&gt;</span><br><span class="line">            v-html: &lt;span v-html="value"&gt;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app-0-0',</span><br><span class="line">                data: {</span><br><span class="line">                    value: '&lt;a href="#"&gt;这是一个链接&lt;/a&gt;',</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><code>### v-pre如果想显示`{{}}</code>标签而不进行替换，使用<code>v-pre</code>即可跳过这个元素和他的子元素的编译过程<p></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-0-1"&gt;</span><br><span class="line">    &lt;span v-pre&gt;{{这里的内容不会被编译}}&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    new Vue({</span><br><span class="line">        el: '#app-0-1',</span><br><span class="line">    })</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h1><h2 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-1"&gt;</span><br><span class="line">        &lt;p v-if="aa"&gt;我是aa&lt;/p&gt;</span><br><span class="line">        &lt;p v-if="bb"&gt;我是bb&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    new Vue({</span><br><span class="line">      el: '#app-1',</span><br><span class="line">      data: {</span><br><span class="line">        aa: true,</span><br><span class="line">        bb: false</span><br><span class="line">      }</span><br><span class="line">    })</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="v-else"><a href="#v-else" class="headerlink" title="v-else"></a>v-else</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-2"&gt;</span><br><span class="line">        &lt;div v-if="aa&gt;bb"&gt;</span><br><span class="line">            aa大于bb</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div v-else&gt;</span><br><span class="line">            aa小于bb</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        new Vue({</span><br><span class="line">            el: '#app-2',</span><br><span class="line">            data: {</span><br><span class="line">                aa: 0,</span><br><span class="line">                bb: 1</span><br><span class="line">            }</span><br><span class="line">        })</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="v-else-if"><a href="#v-else-if" class="headerlink" title="v-else-if"></a>v-else-if</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-3"&gt;</span><br><span class="line">        &lt;div v-if="type == 'A'"&gt;</span><br><span class="line">            A</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div v-else-if="type == 'B'"&gt;</span><br><span class="line">            B</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div v-else-if="type == 'C'"&gt;</span><br><span class="line">            C</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div v-else&gt;</span><br><span class="line">            Not A/B/C</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        new Vue({</span><br><span class="line">            el: '#app-3',</span><br><span class="line">            data: {</span><br><span class="line">                type: 'C'</span><br><span class="line">            }</span><br><span class="line">        })</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h2><p>功能与<code>v-if</code>一样</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-4"&gt;</span><br><span class="line">            &lt;p v-show="aa"&gt;我是aa&lt;/p&gt;</span><br><span class="line">            &lt;p v-show="bb"&gt;我是bb&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app-4',</span><br><span class="line">                data: {</span><br><span class="line">                    aa: true,</span><br><span class="line">                    bb: false</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="v-if与v-show-的异同"><a href="#v-if与v-show-的异同" class="headerlink" title="v-if与v-show 的异同"></a>v-if与v-show 的异同</h2><ul><li>相同点</li></ul><p>都控制所在标签是否显示</p><p>用法上也是相同的</p><ul><li>不同点</li></ul><p><code>v-if</code>在值为<code>true</code>时，创建所在的内容并显示，否则，不创建标签</p><p><code>v-show</code>在页面加载是全部创建，只有当值为<code>true</code>时显示，否则隐藏</p><p><strong>在<code>梁灏，Vue.js实战[M] 北京：清华大学出版社，2017</code>的P36-37是这样描述的：</strong></p><p><code>v-if</code>是真正的条件渲染，它会根据表达式适当地销毁或重建元素及绑定的事件或子组件。若表达式初始值为<code>false</code>，则一开始元素/组件并不会渲染，只有当条件第一次变为真时才开始编译。</p><p>而<code>v-show</code>只是简单的CSS属性切换，无论条件真与否，都会被编译。</p><h2 id="v-if与v-show-的选择"><a href="#v-if与v-show-的选择" class="headerlink" title="v-if与v-show 的选择"></a>v-if与v-show 的选择</h2><p>相比之下</p><p><code>v-if</code>更适合条件不经常变换的场景，因为它切换开销相对比较大</p><p>而<code>v-show</code>适用于频繁切换条件</p><h2 id="更多参考"><a href="#更多参考" class="headerlink" title="更多参考"></a>更多参考</h2><p><a href="https://vue3js.cn/interview/vue/show_if.html#一、v-show与v-if的共同点">面试官：v-show和v-if有什么区别？使用场景分别是什么？ | web前端面试 - 面试官系列 (vue3js.cn)</a></p><h1 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h1><p>循环使用 <code>v-for</code> 指令。</p><p><code>v-for</code>指令需要以 <strong>site in sites</strong> 形式的特殊语法， sites 是源数据数组并且 site 是数组元素迭代的别名。</p><p><code>v-for</code> 可以绑定数据到数组来渲染一个列表</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-5"&gt;</span><br><span class="line">            &lt;li v-for="site in sites"&gt;</span><br><span class="line">                    {{ site.name }}</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app-5',</span><br><span class="line">                data: {</span><br><span class="line">                    sites: [{</span><br><span class="line">                            name: 'Runoob'</span><br><span class="line">                        },</span><br><span class="line">                        {</span><br><span class="line">                            name: 'Google'</span><br><span class="line">                        },</span><br><span class="line">                        {</span><br><span class="line">                            name: 'Taobao'</span><br><span class="line">                        }</span><br><span class="line">                    ]</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="指令与事件"><a href="#指令与事件" class="headerlink" title="指令与事件"></a>指令与事件</h1><p>指令是Vue.js模板中最常用的一项功能，它带有前缀<code>v-</code>，在前文中已经介绍、使用了不少指令了。指令的主要职责是当其表达式的值改变时，相应地将某些行为应用到DOM上。</p><h2 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h2><p><code>v-bind</code>的基本用途是动态更新HTML元素上的属性，比如id、class、href、src等</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-6"&gt;</span><br><span class="line">            &lt;a v-bind:href="url"&gt;我的博客首页链接&lt;/a&gt;</span><br><span class="line">            &lt;p v-bind:style="style"&gt;我是蓝控，这是蓝色的！&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app-6',</span><br><span class="line">                data: {</span><br><span class="line">                    url: 'https://www.226yzy.com',</span><br><span class="line">                    style: 'color:#49B1F5'</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h2><p><code>v-on</code>用来绑定事件监听器</p><p>例如</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-7"&gt;</span><br><span class="line">            &lt;p v-if="show"&gt;这是一段可隐藏的文本&lt;/p&gt;</span><br><span class="line">            &lt;button v-on:click="show=false"&gt;点击隐藏&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app-7',</span><br><span class="line">                data: {</span><br><span class="line">                    show: true</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>在<code>button</code>按钮上，使用<code>v-on:click</code>给该元素绑定另一个点击事件</p><p>在普通元素上，<code>v-on</code>可以监听原生DOM事件，除<code>click</code>外，还有<code>dblclick</code>、<code>keyup</code>、<code>mousemove</code>等。</p><h2 id="methods方法"><a href="#methods方法" class="headerlink" title="methods方法"></a>methods方法</h2><blockquote><p>写到下文<code>计算属性</code>的时候发现这个还没写过，所以就在这引用Vue中文文档中的例子了🤣正好，也有涉及上面的<code>v-on</code></p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-7-1"&gt;</span><br><span class="line">            &lt;p&gt;{{ message }}&lt;/p&gt;</span><br><span class="line">            &lt;button v-on:click="reverseMessage"&gt;反转消息&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            new Vue({</span><br><span class="line">                el: '#app-7-1',</span><br><span class="line">                data: {</span><br><span class="line">                    message: 'Hello Vue.js!'</span><br><span class="line">                },</span><br><span class="line">                methods: {</span><br><span class="line">                    reverseMessage: function () {</span><br><span class="line">                        this.message = this.message.split('').reverse().join('')</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="语法糖"><a href="#语法糖" class="headerlink" title="语法糖"></a>语法糖</h1><p>语法糖是指在不影响功能的情况下，添加某种方法实现同样的效果，从而方便程序开发。</p><p>Vue.js中的<code>v-bind</code>和<code>v-on</code>指令都提供了语法糖，也可以说是缩写</p><ul><li><p><strong><code>v-bind</code></strong></p><p>可以缩写成一个冒号</p><p>例如</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a v-bind:href="url"&gt;我的博客首页链接&lt;/a&gt;</span><br><span class="line">&lt;!--可缩写为--&gt;</span><br><span class="line">&lt;a :href="url"&gt;我的博客首页链接&lt;/a&gt;</span><br></pre></td></tr></tbody></table></figure></li></ul><ul><li><p><strong><code>v-on</code></strong><br>可以缩写成<code>@</code></p><p>例如</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;button v-on:click="show=false"&gt;点击隐藏&lt;/button&gt;</span><br><span class="line">&lt;!--可缩写为--&gt;</span><br><span class="line">&lt;button @click="show=false"&gt;点击隐藏&lt;/button&gt;</span><br></pre></td></tr></tbody></table></figure></li></ul><h1 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h1><p>Vue中文文档说：设计它们的初衷是用于简单运算的。在模板中放入太多的逻辑会让模板过重且难以维护</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-8"&gt;</span><br><span class="line">            &lt;p&gt;倒转前: "{{ message }}"&lt;/p&gt;</span><br><span class="line">            &lt;p&gt;倒转后: "{{ reversedMessage }}"&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            var vm = new Vue({</span><br><span class="line">                el: '#app-8',</span><br><span class="line">                data: {</span><br><span class="line">                    message: 'Hello'</span><br><span class="line">                },</span><br><span class="line">                computed: {</span><br><span class="line">                    reversedMessage: function () {</span><br><span class="line">                        // `this` 指向 vm 实例</span><br><span class="line">                        return this.message.split('').reverse().join('')</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            });</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>所以，对于任何复杂逻辑，你都应当使用<strong>计算属性</strong>。</p><h2 id="计算属性缓存-vs-方法"><a href="#计算属性缓存-vs-方法" class="headerlink" title="计算属性缓存 vs 方法"></a>计算属性缓存 vs 方法</h2><blockquote><p>引自<a href="https://cn.vuejs.org/v2/guide/computed.html#%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E7%BC%93%E5%AD%98-vs-%E6%96%B9%E6%B3%95">https://cn.vuejs.org/v2/guide/computed.html#%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E7%BC%93%E5%AD%98-vs-%E6%96%B9%E6%B3%95</a></p></blockquote><p>我们可以将同一函数定义为一个方法而不是一个计算属性。两种方式的最终结果确实是完全相同的。然而，不同的是<strong>计算属性是基于它们的响应式依赖进行缓存的</strong>。只在相关响应式依赖发生改变时它们才会重新求值。这就意味着只要 <code>message</code> 还没有发生改变，多次访问 <code>reversedMessage</code> 计算属性会立即返回之前的计算结果，而不必再次执行函数。</p><p>相比之下，每当触发重新渲染时，调用方法将<strong>总会</strong>再次执行函数。</p><p>我们为什么需要缓存？假设我们有一个性能开销比较大的计算属性 <strong>A</strong>，它需要遍历一个巨大的数组并做大量的计算。然后我们可能有其他的计算属性依赖于 <strong>A</strong>。如果没有缓存，我们将不可避免的多次执行 <strong>A</strong> 的 getter！如果你不希望有缓存，请用方法来替代。</p><h2 id="函数与计算属性异同"><a href="#函数与计算属性异同" class="headerlink" title="函数与计算属性异同"></a>函数与计算属性异同</h2><p><strong>相同点</strong></p><p>都可以进行计算</p><p><strong>不同点</strong></p><ul><li><p>受计算属性有缓存，所以计算属性效率较高于函数</p></li><li><p>范围不一样。函数不仅可以用于计算，还可以用于其他场合，计算属性仅用于计算场合</p></li><li><p>在基本绑定中的调用形式不同，函数方法要带<code>()</code>，计算属性不用</p></li><li><p>计算属性可以侦听，函数不能</p></li></ul><h2 id="计算属性的-setter"><a href="#计算属性的-setter" class="headerlink" title="计算属性的 setter"></a>计算属性的 setter</h2><blockquote><p>引自<a href="https://cn.vuejs.org/v2/guide/computed.html#%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E7%9A%84-setter">https://cn.vuejs.org/v2/guide/computed.html#%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E7%9A%84-setter</a></p></blockquote><p>计算属性默认只有 getter，不过在需要时你也可以提供一个 setter：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">computed: {</span><br><span class="line">  fullName: {</span><br><span class="line">    // getter</span><br><span class="line">    get: function () {</span><br><span class="line">      return this.firstName + ' ' + this.lastName</span><br><span class="line">    },</span><br><span class="line">    // setter</span><br><span class="line">    set: function (newValue) {</span><br><span class="line">      var names = newValue.split(' ')</span><br><span class="line">      this.firstName = names[0]</span><br><span class="line">      this.lastName = names[names.length - 1]</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line">// ...</span><br></pre></td></tr></tbody></table></figure><p>现在再运行 <code>vm.fullName = 'John Doe'</code> 时，setter 会被调用，<code>vm.firstName</code> 和 <code>vm.lastName</code> 也会相应地被更新。</p><h1 id="监听属性"><a href="#监听属性" class="headerlink" title="监听属性"></a>监听属性</h1><p>我们可以通过 watch 来响应数据的变化。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="app-9"&gt;</span><br><span class="line">            千米 : &lt;input type="text" v-model="kilometers"&gt;</span><br><span class="line">            米 : &lt;input type="text" v-model="meters"&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;p id="info"&gt;&lt;/p&gt;</span><br><span class="line">        &lt;script type="text/javascript"&gt;</span><br><span class="line">            var app1 = new Vue({</span><br><span class="line">                el: '#app-9',</span><br><span class="line">                data: {</span><br><span class="line">                    kilometers: 0,</span><br><span class="line">                    meters: 0</span><br><span class="line">                },</span><br><span class="line">                watch: {</span><br><span class="line">                    kilometers: function (val) {</span><br><span class="line">                        this.kilometers = val;</span><br><span class="line">                        this.meters = this.kilometers * 1000</span><br><span class="line">                    },</span><br><span class="line">                    meters: function (val) {</span><br><span class="line">                        this.kilometers = val / 1000;</span><br><span class="line">                        this.meters = val;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            });</span><br><span class="line">            // $watch 是一个实例方法</span><br><span class="line">            app1.$watch('kilometers', function (newValue, oldValue) {</span><br><span class="line">                // 这个回调将在 app1.kilometers 改变后调用</span><br><span class="line">                document.getElementById("info").innerHTML = "修改前值为: " + oldValue + "，修改后值为: " + newValue;</span><br><span class="line">            })</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="vm-watch"><a href="#vm-watch" class="headerlink" title="vm.$watch"></a>vm.$watch</h2><blockquote><p>上面用到了这个，我引用官方文档的内容来介绍<a href="https://cn.vuejs.org/v2/api/#实例方法-数据">API — Vue.js (vuejs.org)</a></p></blockquote><p><strong>vm.$watch( expOrFn, callback, [options] )</strong></p><ul><li><p><strong>参数</strong>：</p><ul><li><p><code>{string | Function} expOrFn</code></p></li><li><p><code>{Function | Object} callback</code></p></li><li><pre><code>{Object} [options]</code></pre><ul><li><code>{boolean} deep</code></li><li><code>{boolean} immediate</code></li></ul></li></ul></li><li><p><strong>返回值</strong>：<code>{Function} unwatch</code></p></li><li><p><strong>用法</strong>：</p><p>观察 Vue 实例上的一个表达式或者一个函数计算结果的变化。回调函数得到的参数为新值和旧值。表达式只接受简单的键路径。对于更复杂的表达式，用一个函数取代。</p><blockquote><p><code>注意：</code>在变更 (不是替换) 对象或数组时，旧值将与新值相同，因为它们的引用指向同一个对象/数组。Vue 不会保留变更之前值的副本。</p></blockquote></li></ul><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><h2 id="在线资源"><a href="#在线资源" class="headerlink" title="在线资源"></a>在线资源</h2><h3 id="菜鸟教程"><a href="#菜鸟教程" class="headerlink" title="菜鸟教程"></a>菜鸟教程</h3><p><a href="https://www.runoob.com/w3cnote/vue-js-quickstart.html">Vue.js 入门教程 | 菜鸟教程 (runoob.com)</a></p><h3 id="Vue官方中文文档"><a href="#Vue官方中文文档" class="headerlink" title="Vue官方中文文档"></a>Vue官方中文文档</h3><p><a href="https://v3.cn.vuejs.org/guide/introduction.html">介绍 | Vue.js (vuejs.org)</a></p><h3 id="其他博客"><a href="#其他博客" class="headerlink" title="其他博客"></a>其他博客</h3><p><a href="https://blog.csdn.net/qq_37334135/article/details/89264348"> Vue快速入门_成都往右的博客-CSDN博客_vue入门</a></p><h2 id="参考书籍"><a href="#参考书籍" class="headerlink" title="参考书籍"></a>参考书籍</h2><p><code>[1]梁灏，Vue.js实战[M] 北京：清华大学出版社，2017</code></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>部分内容来自<code>姚军</code>老师的上课内容</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> Vue </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的简易2048小游戏记录整理</title>
      <link href="/2021/120460550.html"/>
      <url>/2021/120460550.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><code>注：该篇记录暂未实现过渡动画以及移动端的上下左右操作</code></p><p>我的2048后续最新效果展示<a href="https://www.226yzy.com/my2048game/index.html">2048GAME (226yzy.com)</a></p><p>还有后续代码我放在了我的Github上了<a href="https://github.com/226YZY/my2048game">226YZY/my2048game: 我的简易2048小游戏 (github.com)</a></p><p>(本篇效果烦请自行根据代码复现😂)</p><p>本篇记录中的代码是我根据我对2048的基本游戏逻辑，尝试通过html+css+原生js实现</p><p>由于个人水平有限，相关内容有不完善的地方欢迎大佬指出Orz</p><h1 id="原版2048相关内容"><a href="#原版2048相关内容" class="headerlink" title="原版2048相关内容"></a>原版2048相关内容</h1><p>原版2048首先在GitHub上发布，原作者是Gabriele Cirulli</p><p>在Github上可以找到这个这个小游戏的源代码，传送门🚪<a href="https://github.com/gabrielecirulli/2048">gabrielecirulli/2048: A small clone of 1024 (https://play.google.com/store/apps/details?id=com.veewo.a1024) (github.com)</a></p><p>你也可以试玩原作者制作的2048，传送门🚪<a href="https://play2048.co/">2048 (play2048.co)</a></p><h1 id="游戏基本逻辑梳理"><a href="#游戏基本逻辑梳理" class="headerlink" title="游戏基本逻辑梳理"></a>游戏基本逻辑梳理</h1><h2 id="1-页面基本内容"><a href="#1-页面基本内容" class="headerlink" title="1.页面基本内容"></a>1.页面基本内容</h2><p>页面上至少需要有以下基本内容</p><ol><li>4*4的表作为游戏主体</li><li>显示当前多少分</li><li>新游戏</li><li>提示游戏结束（一开始不显示）</li><li>初始随机两个格子内有数字(该数字为2或4)</li><li>根据格子内的数字，格子内的颜色改变</li></ol><h2 id="2-随机产生数字"><a href="#2-随机产生数字" class="headerlink" title="2.随机产生数字"></a>2.随机产生数字</h2><p>在没有数字的格子产生一个数字</p><p>该数字只能为2或4</p><p>其中4的概率较小为10%（后来我粗略观察原版2048的代码发现的）</p><h2 id="3-计分"><a href="#3-计分" class="headerlink" title="3.计分"></a>3.计分</h2><p>每对相同的数字合并后，总分加上这对数字的和</p><p>例如2和2合并后总分加4分，8和8合并后总分加16分</p><h2 id="4-合并数字"><a href="#4-合并数字" class="headerlink" title="4.合并数字"></a>4.合并数字</h2><p>基础的（0表示空，下同）比如 0 2 0 2左移后应为4 0 0 0 </p><blockquote><p><strong><em><code>需要注意的情况</code></em></strong></p></blockquote><p>与原版2048对比后我发现网上一些自制的2048在这方面有些问题，下面列出我注意到的情况</p><ul><li>例1（是否重复合并）</li></ul><p>2 2 2 2这行如果向左移动后结果应为4 4 0 0</p><p>也就是说，合并后的数字不与接下来相同的数字再合并</p><ul><li><p>例2（合并顺序）</p><p>2 2 2 4右移后应为0 2 4 4</p></li></ul><p>说明向右移，合并应从右侧开始</p><p>若为左移，则合并应从左侧开始，上下移动的同理</p><h2 id="5-上下左右操作响应"><a href="#5-上下左右操作响应" class="headerlink" title="5.上下左右操作响应"></a>5.上下左右操作响应</h2><p>对键盘事件响应，通过wsad或方向键对应上下左右操作</p><h2 id="6-游戏是否结束或达到胜利值"><a href="#6-游戏是否结束或达到胜利值" class="headerlink" title="6.游戏是否结束或达到胜利值"></a>6.游戏是否结束或达到胜利值</h2><p>在每次操作后，随即遍历每个格子上下左右是否还有相同的数字</p><p>若存在某个格子上下左右中存在与之相同的数字，那么游戏尚未结束</p><p>否则，若所有格子上下左右中都不存在与之相同的数字，则说明游戏结束</p><p>胜利值在上面遍历时查找即可</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="HTML部分"><a href="#HTML部分" class="headerlink" title="HTML部分"></a>HTML部分</h2><h3 id="html部分总览"><a href="#html部分总览" class="headerlink" title="html部分总览"></a>html部分总览</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>2048GAME<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- css引入 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/main.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onkeydown</span>=<span class="string">"keyboardEvents()"</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 当前总分显示与新游戏按钮--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"theMark"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>当前分数为 <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"mark"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> 分<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"newgame"</span> <span class="attr">onclick</span>=<span class="string">"main()"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>NEW GAME<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 2048游戏主体--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- cellspacing属性可设置或返回在表格中的单元格之间的空白量 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"maintable"</span> <span class="attr">cellspacing</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span> </span><br><span class="line">    </span><br><span class="line">  <span class="comment">&lt;!-- 游戏结束时显示 GAME OVER--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"gameover"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- js引入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/main2048.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="当前总分显示与新游戏按钮"><a href="#当前总分显示与新游戏按钮" class="headerlink" title="当前总分显示与新游戏按钮"></a>当前总分显示与新游戏按钮</h3><p>该部分代码如下</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"theMark"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>当前分数为 <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"mark"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> 分<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"newgame"</span> <span class="attr">onclick</span>=<span class="string">"main()"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>NEW GAME<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><code>&lt;span id="mark"&gt;&lt;/span&gt;</code>这部分的内容会后续通过js渲染上去,表示总分</p><p><code>&lt;button id="newgame" onclick="main()"&gt;&lt;span&gt;NEW GAME&lt;/span&gt;&lt;/button&gt;</code>点击后会执行js中写好的main()函数，以重新加载2048游戏的4*4表格主体以及总分归零</p><h3 id="2048游戏主体"><a href="#2048游戏主体" class="headerlink" title="2048游戏主体"></a>2048游戏主体</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- cellspacing属性可设置或返回在表格中的单元格之间的空白量 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"maintable"</span> <span class="attr">cellspacing</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span> </span><br></pre></td></tr></tbody></table></figure><p>这部分我用<code>table</code>实现，里面的<code>td</code>通过js渲染上去，渲染后如下</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"maintable"</span> <span class="attr">cellspacing</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"1"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"2"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"3"</span> &gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"4"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"5"</span> &gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"6"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"7"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"8"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"9"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"10"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"11"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"12"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"13"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"14"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"15"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"16"</span> &gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><code>注：</code>原作者是用<code>div</code>实现的,你也可以用这种做法</p><h3 id="游戏结束或达到胜利值时提示"><a href="#游戏结束或达到胜利值时提示" class="headerlink" title="游戏结束或达到胜利值时提示"></a>游戏结束或达到胜利值时提示</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 游戏结束或达到胜利值时显示对应的内容--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"gameover"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>该部分通过css使其初始不显示，当判断游戏结束或达到胜利值时由js更改其style和内容，使其显示</p><h2 id="CSS部分"><a href="#CSS部分" class="headerlink" title="CSS部分"></a>CSS部分</h2><h3 id="css部分总览"><a href="#css部分总览" class="headerlink" title="css部分总览"></a>css部分总览</h3><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> {</span><br><span class="line">    <span class="attribute">text-align</span>: center;<span class="comment">/*文本居中*/</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#E0FFFF</span>;  <span class="comment">/*背景颜色*/</span></span><br><span class="line">}</span><br><span class="line"><span class="comment">/*表格样式*/</span></span><br><span class="line"><span class="selector-tag">table</span> {</span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">340px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#bbada0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> auto; <span class="comment">/*上下外边距为0，左右根据宽度自适应,即水平居中*/</span></span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>; <span class="comment">/* 设置表格边框圆角 */</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*单元格样式*/</span></span><br><span class="line"><span class="selector-tag">td</span> {</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">29</span>, <span class="number">180</span>, <span class="number">250</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*总分提示部分字体大小和粗细*/</span></span><br><span class="line"><span class="selector-id">#theMark</span>{</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">36px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*突出分数，设置其字体颜色*/</span></span><br><span class="line"><span class="selector-id">#mark</span>{</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">33</span>, <span class="number">132</span>, <span class="number">245</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*新游戏按钮样式*/</span></span><br><span class="line"><span class="selector-id">#newgame</span>{</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">241</span>, <span class="number">176</span>, <span class="number">56</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">color</span>: aliceblue;</span><br><span class="line">    <span class="attribute">font-size</span>: large;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">800</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*游戏结束提示*/</span></span><br><span class="line"><span class="selector-id">#gameover</span>{</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">36px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">display</span>:none;<span class="comment">/*初始不显示*/</span></span><br><span class="line">    <span class="attribute">color</span>: crimson;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>各部分内容见上面css代码及其注释，及不过多赘述了😆</p><h2 id="JS部分"><a href="#JS部分" class="headerlink" title="JS部分"></a>JS部分</h2><blockquote><p>这部分重点🚩</p></blockquote><p>路漫漫其修远兮，上面合并数字中提到的问题以及各种bug，让我重写了好几次核心部分🤣</p><h3 id="1-初始"><a href="#1-初始" class="headerlink" title="1.初始"></a>1.初始</h3><p>各种页面渲染及各种函数调用都基本在这一部分实现</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = main(); <span class="comment">//加载主函数</span></span><br><span class="line"><span class="keyword">var</span> overflag=<span class="literal">true</span>;<span class="comment">//判断游戏是否结束的标志</span></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>) </span>{</span><br><span class="line">    mapx=<span class="number">4</span>,mapy=<span class="number">4</span>,mapt=mapx*mapy;<span class="comment">//设定表框大小，一般为4*4</span></span><br><span class="line">    <span class="keyword">var</span> table = <span class="built_in">document</span>.getElementById(<span class="string">"maintable"</span>); <span class="comment">//获取表格</span></span><br><span class="line">    <span class="keyword">var</span> tableStructure = <span class="string">""</span>; <span class="comment">//储存表格结构</span></span><br><span class="line">    <span class="keyword">var</span> tdid = <span class="number">1</span>; <span class="comment">//单元格id</span></span><br><span class="line">    <span class="keyword">var</span> mark=<span class="built_in">document</span>.getElementById(<span class="string">"mark"</span>);<span class="comment">//获取html中显示分数的位置</span></span><br><span class="line">    overflag=<span class="literal">true</span>; <span class="comment">//因为后续新游戏是重新执行该函数，所以该值要重新变为true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//加载表格结构(4行4列)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapx; i++) {</span><br><span class="line">        tableStructure += <span class="string">"&lt;tr&gt;"</span>; <span class="comment">//为表格加1行</span></span><br><span class="line">        <span class="comment">//为该行添加单元格</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">1</span>; j &lt;= mapy; j++) {</span><br><span class="line">            tableStructure += <span class="string">"&lt;td id="</span> + tdid + <span class="string">"&gt;&lt;/td&gt;"</span>; <span class="comment">//添加单元格与该单元格id</span></span><br><span class="line">            tdid++;</span><br><span class="line">        }</span><br><span class="line">        tableStructure += <span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">    }</span><br><span class="line">    table.innerHTML = tableStructure; <span class="comment">//向表格返回该表格结构</span></span><br><span class="line">    tdRandom();</span><br><span class="line">    tdRandom();<span class="comment">//随机两个格子给予2或 4</span></span><br><span class="line">    tdcolor();<span class="comment">//渲染格子的颜色</span></span><br><span class="line">    mark.innerHTML=<span class="number">0</span>;<span class="comment">//初始总分为0</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).style.display=<span class="string">"none"</span>;<span class="comment">//初始GME OVER提示不显示</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).innerHTML=<span class="string">""</span>;</span><br><span class="line">    youwin=<span class="number">2048</span>;<span class="comment">//设置胜利值</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>原版2048为4*4的表格，我在代码中的mapx,mapy的值可以自行设置，以便魔改成更大的表格供游玩。</p><p><code>youwin</code>的值代表胜利值可自行修改</p><h3 id="2-随机相关"><a href="#2-随机相关" class="headerlink" title="2.随机相关"></a>2.随机相关</h3><p>这部分需要解决随机格子随机产生2或4</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//因为Math.random() 返回 0（包括） 至 1（不包括） 之间的随机数，随机的数不一定是整数。这里我用向下取整</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myrandom</span>(<span class="params">min, max</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> min + <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * max);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//随机为单元格随机填入2或4 (4出现的概率应相对较小)</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tdRandom</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> temp = myrandom(<span class="number">1</span>, mapt);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(temp).innerHTML == <span class="string">""</span>) {</span><br><span class="line">        <span class="built_in">document</span>.getElementById(temp).innerHTML = <span class="built_in">Math</span>.random()&lt;<span class="number">0.9</span>?<span class="number">2</span>:<span class="number">4</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        tdRandom();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>我一开始想设出现4的概率为25%，后来感觉手感不对，于是看原版的代码后发现其设置为10%</p><h3 id="3-键盘事件响应"><a href="#3-键盘事件响应" class="headerlink" title="3.键盘事件响应"></a>3.键盘事件响应</h3><p><code>注：</code>由于所学有限，本篇的移动操作暂时只实现了键盘事件的响应，移动端的触屏操作待后续研究</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//键盘事件响应</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">keyboardEvents</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">//以键盘方向键或wasd操作移动</span></span><br><span class="line">    <span class="keyword">if</span> (overflag) {</span><br><span class="line">        <span class="keyword">if</span> (event.keyCode == <span class="number">37</span> || event.keyCode == <span class="number">65</span>) Left();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (event.keyCode == <span class="number">38</span> || event.keyCode == <span class="number">87</span>) Up();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (event.keyCode == <span class="number">39</span> || event.keyCode == <span class="number">68</span>) Right();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (event.keyCode == <span class="number">40</span> || event.keyCode == <span class="number">83</span>) Down();</span><br><span class="line">        <span class="comment">//保证其它按键不会触发</span></span><br><span class="line">        <span class="keyword">if</span> (flag_r) {</span><br><span class="line">            tdRandom();<span class="comment">//随机再产生一个数字</span></span><br><span class="line">            flag_r = <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    tdcolor();<span class="comment">//更新格子颜色</span></span><br><span class="line">    <span class="keyword">if</span>(overflag)</span><br><span class="line">    isover();<span class="comment">//判断游戏是否结束</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>上下左右的操作函数见下文，设置<code>flag_r</code>是为了限制该函数其他键响应。每按一次按键会对游戏是否结束以及格子颜色更新进行重判</p><h3 id="4-上下左右操作函数"><a href="#4-上下左右操作函数" class="headerlink" title="4.上下左右操作函数"></a>4.上下左右操作函数</h3><p>这部分四个操作的代码逻辑基本相同，只是根据方向的不同存入数字的顺序不同</p><p>格子编号布局顺序如下</p><p>1 2 3 4 </p><p>5 6 7 8 </p><p>9 10 11 12</p><p>13 14 15 16</p><p>我用的是两个一维数组分别存对应编号格子的内容和是否合并处理过（合并处理在我写的<code>changetd()</code>函数中，具体见下一部分）</p><p>在4*4的表格中我是分成了4列（或行，上下是列,左右是行）读入，读入顺序是正序或倒序（我是上左倒，下右正，这主要是方便<code>changetd()</code>函数统一操作），然后按此顺序存入上述的数组中。</p><p>在<code>changetd()</code>函数处理完后再更新对应编号的格子显示的内容</p><p>该部分代码如下</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//上下左右操作函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//向上操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Up</span>(<span class="params"></span>) </span>{</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=mapy;i++){</span><br><span class="line">      <span class="keyword">var</span> tempmap=[];<span class="comment">//记录该编号格子内的数</span></span><br><span class="line">      <span class="keyword">var</span> tempflag=[];<span class="comment">//记录该编号格子是否合并过(本次操作内)</span></span><br><span class="line">      <span class="keyword">var</span> z=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">var</span> j=i+(mapx-<span class="number">1</span>)*mapy;j&gt;=i;j-=mapy){ </span><br><span class="line">          <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j); </span><br><span class="line">          <span class="keyword">if</span>(thetd.innerHTML==<span class="string">""</span>){</span><br><span class="line">              tempmap[z]=<span class="number">0</span>;</span><br><span class="line">          }          </span><br><span class="line">          <span class="keyword">else</span>{</span><br><span class="line">              tempmap[z]=<span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">          } </span><br><span class="line">          tempflag[z]=<span class="literal">true</span>;  </span><br><span class="line">          z++;                </span><br><span class="line">      }</span><br><span class="line">      <span class="comment">//数字合并统一由changetd函数完成</span></span><br><span class="line">      tempmap=changetd(tempmap,tempflag,tempmap.length,<span class="number">0</span>);</span><br><span class="line">      z=<span class="number">0</span>;</span><br><span class="line">      <span class="comment">//更新格子内的显示内容</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">var</span> j=i+(mapx-<span class="number">1</span>)*mapy;j&gt;=i;j-=mapy){ </span><br><span class="line">        <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j);</span><br><span class="line">        <span class="keyword">if</span>(tempmap[z]==<span class="number">0</span>){</span><br><span class="line">            thetd.innerHTML=<span class="string">""</span>;</span><br><span class="line">        }  </span><br><span class="line">        <span class="keyword">else</span>{</span><br><span class="line">            thetd.innerHTML=tempmap[z];</span><br><span class="line">        } </span><br><span class="line">        z++;  </span><br><span class="line">    }</span><br><span class="line">   } </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//向下操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Down</span>(<span class="params"></span>) </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=mapy;i++){</span><br><span class="line">        <span class="keyword">var</span> tempmap=[];</span><br><span class="line">        <span class="keyword">var</span> tempflag=[];</span><br><span class="line">        <span class="keyword">var</span> z=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i;j&lt;=i+(mapx-<span class="number">1</span>)*mapy;j+=mapy){ </span><br><span class="line">            <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j); </span><br><span class="line">            <span class="keyword">if</span>(thetd.innerHTML==<span class="string">""</span>){</span><br><span class="line">                tempmap[z]=<span class="number">0</span>;</span><br><span class="line">            }          </span><br><span class="line">            <span class="keyword">else</span>{</span><br><span class="line">                tempmap[z]=<span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">            } </span><br><span class="line">            tempflag[z]=<span class="literal">true</span>;  </span><br><span class="line">            z++;                </span><br><span class="line">        }</span><br><span class="line">        tempmap=changetd(tempmap,tempflag,tempmap.length,<span class="number">0</span>);  </span><br><span class="line">        z=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i;j&lt;=i+(mapx-<span class="number">1</span>)*mapy;j+=mapy){ </span><br><span class="line">          <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j);</span><br><span class="line">          <span class="keyword">if</span>(tempmap[z]==<span class="number">0</span>){</span><br><span class="line">              thetd.innerHTML=<span class="string">""</span>;</span><br><span class="line">          }  </span><br><span class="line">          <span class="keyword">else</span>{</span><br><span class="line">              thetd.innerHTML=tempmap[z];</span><br><span class="line">          } </span><br><span class="line">          z++;  </span><br><span class="line">      }</span><br><span class="line">     } </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//向左操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Left</span>(<span class="params"></span>) </span>{</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">var</span> i=mapy;i&lt;=mapy+(mapx-<span class="number">1</span>)*mapy;i+=mapy){</span><br><span class="line">        <span class="keyword">var</span> tempmap=[];</span><br><span class="line">        <span class="keyword">var</span> tempflag=[];</span><br><span class="line">        <span class="keyword">var</span> z=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i;j&gt;=i-mapy+<span class="number">1</span>;j--){ </span><br><span class="line">            <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j); </span><br><span class="line">            <span class="keyword">if</span>(thetd.innerHTML==<span class="string">""</span>){</span><br><span class="line">                tempmap[z]=<span class="number">0</span>;</span><br><span class="line">            }          </span><br><span class="line">            <span class="keyword">else</span>{</span><br><span class="line">                tempmap[z]=<span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">            } </span><br><span class="line">            tempflag[z]=<span class="literal">true</span>;  </span><br><span class="line">            z++;                </span><br><span class="line">        }</span><br><span class="line">        tempmap=changetd(tempmap,tempflag,tempmap.length,<span class="number">0</span>);  </span><br><span class="line">        z=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i;j&gt;=i-mapy+<span class="number">1</span>;j--){ </span><br><span class="line">          <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j);</span><br><span class="line">          <span class="keyword">if</span>(tempmap[z]==<span class="number">0</span>){</span><br><span class="line">              thetd.innerHTML=<span class="string">""</span>;</span><br><span class="line">          }  </span><br><span class="line">          <span class="keyword">else</span>{</span><br><span class="line">              thetd.innerHTML=tempmap[z];</span><br><span class="line">          } </span><br><span class="line">          z++;  </span><br><span class="line">      }</span><br><span class="line">     } </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//向右操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Right</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=<span class="number">1</span>+(mapx-<span class="number">1</span>)*mapy;i+=mapy){</span><br><span class="line">        <span class="keyword">var</span> tempmap=[];</span><br><span class="line">        <span class="keyword">var</span> tempflag=[];</span><br><span class="line">        <span class="keyword">var</span> z=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(i+<span class="string">" i"</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i;j&lt;i+mapy;j++){ </span><br><span class="line">            <span class="built_in">console</span>.log(j);</span><br><span class="line">            <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j); </span><br><span class="line">            <span class="keyword">if</span>(thetd.innerHTML==<span class="string">""</span>){</span><br><span class="line">                tempmap[z]=<span class="number">0</span>;</span><br><span class="line">            }          </span><br><span class="line">            <span class="keyword">else</span>{</span><br><span class="line">                tempmap[z]=<span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">            } </span><br><span class="line">            tempflag[z]=<span class="literal">true</span>;  </span><br><span class="line">            z++;                </span><br><span class="line">        }</span><br><span class="line">        tempmap=changetd(tempmap,tempflag,tempmap.length,<span class="number">0</span>);  </span><br><span class="line">        z=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i;j&lt;i+mapy;j++){ </span><br><span class="line">          <span class="keyword">var</span> thetd=<span class="built_in">document</span>.getElementById(j);</span><br><span class="line">          <span class="keyword">if</span>(tempmap[z]==<span class="number">0</span>){</span><br><span class="line">              thetd.innerHTML=<span class="string">""</span>;</span><br><span class="line">          }  </span><br><span class="line">          <span class="keyword">else</span>{</span><br><span class="line">              thetd.innerHTML=tempmap[z];</span><br><span class="line">          } </span><br><span class="line">          z++;  </span><br><span class="line">      }</span><br><span class="line">     }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="5-合并数字"><a href="#5-合并数字" class="headerlink" title="5.合并数字"></a>5.合并数字</h3><p>上文提到的changetd()函数来实现这部分内容</p><p>代码如下</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changetd</span>(<span class="params">tempmap, tempflag, k, u</span>) </span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = k - <span class="number">1</span>; i &gt; u; i--) {</span><br><span class="line">        <span class="keyword">if</span> (tempmap[i - <span class="number">1</span>] != <span class="number">0</span> &amp;&amp; tempmap[i] == <span class="number">0</span>) {</span><br><span class="line">            <span class="comment">//移动</span></span><br><span class="line">            tempmap[i] = tempmap[i - <span class="number">1</span>];</span><br><span class="line">            tempmap[i - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//移动时合并标记也同样跟随移动</span></span><br><span class="line">            <span class="keyword">if</span> (tempflag[i - <span class="number">1</span>] == <span class="literal">false</span>) {</span><br><span class="line">                tempflag[i - <span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">                tempflag[i] = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            flag_r = <span class="literal">true</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (tempmap[i - <span class="number">1</span>] != <span class="number">0</span> &amp;&amp; tempmap[i] == tempmap[i - <span class="number">1</span>] &amp;&amp; tempflag[i] == <span class="literal">true</span> &amp;&amp; tempflag[i - <span class="number">1</span>] == <span class="literal">true</span>) {</span><br><span class="line">            <span class="comment">//合并</span></span><br><span class="line">            tempmap[i] *= <span class="number">2</span>;</span><br><span class="line">            tempmap[i - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//标记经过合并处理</span></span><br><span class="line">            tempflag[i] = <span class="literal">false</span>;</span><br><span class="line">            flag_r = <span class="literal">true</span>;</span><br><span class="line">            mark.innerHTML = <span class="built_in">parseInt</span>(mark.innerHTML) + tempmap[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//递归，以解决可能出现的合并后产生空位未处理</span></span><br><span class="line">        tempmap = changetd(tempmap, tempflag, k, i);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> tempmap;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这部分首先解决的是判断某个数是否在本轮操作中合并过，这问题的解决我是通过另一个数再记录对应是否合并的状态,具体见上面代码、</p><p>然后通过递归来解决一次遍历操作过后，可能留下的空位的问题</p><h3 id="6-颜色更改"><a href="#6-颜色更改" class="headerlink" title="6.颜色更改"></a>6.颜色更改</h3><p>为了美观以及更好的体现数值的不同，根据不同数值给格子渲染上不同背景色</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tdcolor</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">//根据不同数值给格子渲染上不同背景色</span></span><br><span class="line">    <span class="keyword">var</span> tdcolors = {</span><br><span class="line">        <span class="string">""</span>: <span class="string">"#cdc1b4"</span>,</span><br><span class="line">        <span class="string">"2"</span>: <span class="string">"#eee4da"</span>,</span><br><span class="line">        <span class="string">"4"</span>: <span class="string">"#ede0c8"</span>,</span><br><span class="line">        <span class="string">"8"</span>: <span class="string">"#f2b179"</span>,</span><br><span class="line">        <span class="string">"16"</span>: <span class="string">"#f59563"</span>,</span><br><span class="line">        <span class="string">"32"</span>: <span class="string">"#f67c5f"</span>,</span><br><span class="line">        <span class="string">"64"</span>: <span class="string">"#f65e3b"</span>,</span><br><span class="line">        <span class="string">"128"</span>: <span class="string">"#edcf72"</span>,</span><br><span class="line">        <span class="string">"256"</span>: <span class="string">"#edcc61"</span>,</span><br><span class="line">        <span class="string">"512"</span>: <span class="string">"#9c0"</span>,</span><br><span class="line">        <span class="string">"1024"</span>: <span class="string">"#33b5e5"</span>,</span><br><span class="line">        <span class="string">"2048"</span>: <span class="string">"#09c"</span>,</span><br><span class="line">        <span class="string">"4096"</span>: <span class="string">"#a6c"</span>,</span><br><span class="line">        <span class="string">"8192"</span>: <span class="string">"#93c"</span></span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//数字颜色更改</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapx * mapy; i++) {</span><br><span class="line">        <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(i);</span><br><span class="line">        thetd.style.backgroundColor = tdcolors[thetd.innerHTML];</span><br><span class="line">        <span class="keyword">if</span> (thetd.innerHTML == <span class="number">2</span> || thetd.innerHTML == <span class="number">4</span>) {</span><br><span class="line">            thetd.style.color = <span class="string">"#776e65"</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            thetd.style.color = <span class="string">"#f8f5f1"</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这部分我担心我自己配色会配的乱七八糟，所以我根据原版的2048配色来😂</p><p>当格子里的数字大于4时数字颜色变白的情况我也顺便还原了</p><p>另外我还设置了大于2048的值🤪</p><h3 id="游戏结束或达到胜利值时提示-1"><a href="#游戏结束或达到胜利值时提示-1" class="headerlink" title="游戏结束或达到胜利值时提示"></a>游戏结束或达到胜利值时提示</h3><p>游戏结束或达到胜利值时需要有所提示</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isover</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapx * mapy; i++) {</span><br><span class="line">        <span class="keyword">var</span> td = <span class="built_in">document</span>.getElementById(i);</span><br><span class="line">        <span class="keyword">if</span>(td.innerHTML &gt;= youwin){</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).innerHTML=<span class="string">"恭喜你达到了 "</span>+td.innerHTML;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).style.display = <span class="string">"block"</span>;</span><br><span class="line">            youwin=<span class="built_in">parseInt</span>(td.innerHTML);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (td.innerHTML == <span class="string">""</span>) {</span><br><span class="line">            <span class="comment">//空值跳过</span></span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (i &lt;= (mapx - <span class="number">1</span>) * mapy &amp;&amp; td.innerHTML == <span class="built_in">document</span>.getElementById(i + mapy).innerHTML) {</span><br><span class="line">            <span class="comment">//判断该格子下方的数是否与之相同</span></span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (i % mapy != <span class="number">0</span> &amp;&amp; td.innerHTML == <span class="built_in">document</span>.getElementById(i + <span class="number">1</span>).innerHTML) {</span><br><span class="line">            <span class="comment">//判断该格子右边的数是否与之相同</span></span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            f++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (f == mapx * mapy) {</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).innerHTML+=<span class="string">"&lt;br&gt;GAME OVER"</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).style.display = <span class="string">"block"</span>;</span><br><span class="line">        overflag = <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这部分代码逻辑具体见注释🤣</p><p><code>youwin</code>的值在初始的那一部分中main()函数中设置</p><h3 id="js部分总览"><a href="#js部分总览" class="headerlink" title="js部分总览"></a>js部分总览</h3><p>综上，js部分总体代码如下</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = main(); <span class="comment">//加载主函数</span></span><br><span class="line"><span class="keyword">var</span> overflag = <span class="literal">true</span>; <span class="comment">//判断游戏是否结束的标志</span></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>) </span>{</span><br><span class="line">    mapx = <span class="number">4</span>, mapy = <span class="number">4</span>, mapt = mapx * mapy; <span class="comment">//设定表框大小，一般为4*4</span></span><br><span class="line">    <span class="keyword">var</span> table = <span class="built_in">document</span>.getElementById(<span class="string">"maintable"</span>); <span class="comment">//获取表格</span></span><br><span class="line">    <span class="keyword">var</span> tableStructure = <span class="string">""</span>; <span class="comment">//储存表格结构</span></span><br><span class="line">    <span class="keyword">var</span> tdid = <span class="number">1</span>; <span class="comment">//单元格id</span></span><br><span class="line">    <span class="keyword">var</span> mark = <span class="built_in">document</span>.getElementById(<span class="string">"mark"</span>); <span class="comment">//获取html中显示分数的位置</span></span><br><span class="line">    overflag = <span class="literal">true</span>; <span class="comment">//因为后续新游戏是重新执行该函数，所以该值要重新变为true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//加载表格结构(4行4列)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapx; i++) {</span><br><span class="line">        tableStructure += <span class="string">"&lt;tr&gt;"</span>; <span class="comment">//为表格加1行</span></span><br><span class="line">        <span class="comment">//为该行添加单元格</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">1</span>; j &lt;= mapy; j++) {</span><br><span class="line">            tableStructure += <span class="string">"&lt;td id="</span> + tdid + <span class="string">"&gt;&lt;/td&gt;"</span>; <span class="comment">//添加单元格与该单元格id</span></span><br><span class="line">            tdid++;</span><br><span class="line">        }</span><br><span class="line">        tableStructure += <span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">    }</span><br><span class="line">    table.innerHTML = tableStructure; <span class="comment">//向表格返回该表格结构</span></span><br><span class="line">    tdRandom();</span><br><span class="line">    tdRandom(); <span class="comment">//随机两个格子给予2或 4</span></span><br><span class="line">    tdcolor(); <span class="comment">//渲染格子的颜色</span></span><br><span class="line">    mark.innerHTML = <span class="number">0</span>; <span class="comment">//初始总分为0</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).style.display = <span class="string">"none"</span>; <span class="comment">//初始GME OVER提示不显示</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).innerHTML=<span class="string">""</span>;</span><br><span class="line">    youwin=<span class="number">2048</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//因为Math.random() 返回 0（包括） 至 1（不包括） 之间的随机数，随机的数不一定是整数。这里我用向下取整</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myrandom</span>(<span class="params">min, max</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> min + <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * max);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//随机为单元格随机填入2或4 (4出现的概率应相对较小)</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tdRandom</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> temp = myrandom(<span class="number">1</span>, mapt);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(temp).innerHTML == <span class="string">""</span>) {</span><br><span class="line">        <span class="built_in">document</span>.getElementById(temp).innerHTML = <span class="built_in">Math</span>.random() &lt; <span class="number">0.9</span> ? <span class="number">2</span> : <span class="number">4</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        tdRandom();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//键盘事件响应</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">keyboardEvents</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">//以键盘方向键或wasd操作移动</span></span><br><span class="line">    <span class="keyword">if</span> (overflag) {</span><br><span class="line">        <span class="keyword">if</span> (event.keyCode == <span class="number">37</span> || event.keyCode == <span class="number">65</span>) Left();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (event.keyCode == <span class="number">38</span> || event.keyCode == <span class="number">87</span>) Up();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (event.keyCode == <span class="number">39</span> || event.keyCode == <span class="number">68</span>) Right();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (event.keyCode == <span class="number">40</span> || event.keyCode == <span class="number">83</span>) Down();</span><br><span class="line">        <span class="comment">//保证其它按键不会触发</span></span><br><span class="line">        <span class="keyword">if</span> (flag_r) {</span><br><span class="line">            tdRandom(); <span class="comment">//随机再产生一个数字</span></span><br><span class="line">            flag_r = <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    tdcolor(); <span class="comment">//更新格子颜色</span></span><br><span class="line">    <span class="keyword">if</span>(overflag)</span><br><span class="line">    isover(); <span class="comment">//判断游戏是否结束</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//上下左右操作函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//向上操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Up</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapy; i++) {</span><br><span class="line">        <span class="keyword">var</span> tempmap = []; <span class="comment">//记录该编号格子内的数</span></span><br><span class="line">        <span class="keyword">var</span> tempflag = []; <span class="comment">//记录该编号格子是否合并过(本次操作内)</span></span><br><span class="line">        <span class="keyword">var</span> z = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i + (mapx - <span class="number">1</span>) * mapy; j &gt;= i; j -= mapy) {</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (thetd.innerHTML == <span class="string">""</span>) {</span><br><span class="line">                tempmap[z] = <span class="number">0</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tempmap[z] = <span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">            }</span><br><span class="line">            tempflag[z] = <span class="literal">true</span>;</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//数字合并统一由changetd函数完成</span></span><br><span class="line">        tempmap = changetd(tempmap, tempflag, tempmap.length, <span class="number">0</span>); </span><br><span class="line">        z = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//更新格子内的显示内容</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i + (mapx - <span class="number">1</span>) * mapy; j &gt;= i; j -= mapy) {</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (tempmap[z] == <span class="number">0</span>) {</span><br><span class="line">                thetd.innerHTML = <span class="string">""</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                thetd.innerHTML = tempmap[z];</span><br><span class="line">            }</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//向下操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Down</span>(<span class="params"></span>) </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapy; i++) {</span><br><span class="line">        <span class="keyword">var</span> tempmap = [];</span><br><span class="line">        <span class="keyword">var</span> tempflag = [];</span><br><span class="line">        <span class="keyword">var</span> z = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i; j &lt;= i + (mapx - <span class="number">1</span>) * mapy; j += mapy) {</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (thetd.innerHTML == <span class="string">""</span>) {</span><br><span class="line">                tempmap[z] = <span class="number">0</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tempmap[z] = <span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">            }</span><br><span class="line">            tempflag[z] = <span class="literal">true</span>;</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">        tempmap = changetd(tempmap, tempflag, tempmap.length, <span class="number">0</span>);</span><br><span class="line">        z = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i; j &lt;= i + (mapx - <span class="number">1</span>) * mapy; j += mapy) {</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (tempmap[z] == <span class="number">0</span>) {</span><br><span class="line">                thetd.innerHTML = <span class="string">""</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                thetd.innerHTML = tempmap[z];</span><br><span class="line">            }</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//向左操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Left</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = mapy; i &lt;= mapy + (mapx - <span class="number">1</span>) * mapy; i += mapy) {</span><br><span class="line">        <span class="keyword">var</span> tempmap = [];</span><br><span class="line">        <span class="keyword">var</span> tempflag = [];</span><br><span class="line">        <span class="keyword">var</span> z = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i; j &gt;= i - mapy + <span class="number">1</span>; j--) {</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (thetd.innerHTML == <span class="string">""</span>) {</span><br><span class="line">                tempmap[z] = <span class="number">0</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tempmap[z] = <span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">            }</span><br><span class="line">            tempflag[z] = <span class="literal">true</span>;</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">        tempmap = changetd(tempmap, tempflag, tempmap.length, <span class="number">0</span>);</span><br><span class="line">        z = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i; j &gt;= i - mapy + <span class="number">1</span>; j--) {</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (tempmap[z] == <span class="number">0</span>) {</span><br><span class="line">                thetd.innerHTML = <span class="string">""</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                thetd.innerHTML = tempmap[z];</span><br><span class="line">            }</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//向右操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Right</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">1</span> + (mapx - <span class="number">1</span>) * mapy; i += mapy) {</span><br><span class="line">        <span class="keyword">var</span> tempmap = [];</span><br><span class="line">        <span class="keyword">var</span> tempflag = [];</span><br><span class="line">        <span class="keyword">var</span> z = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(i + <span class="string">" i"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i; j &lt; i + mapy; j++) {</span><br><span class="line">            <span class="built_in">console</span>.log(j);</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (thetd.innerHTML == <span class="string">""</span>) {</span><br><span class="line">                tempmap[z] = <span class="number">0</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tempmap[z] = <span class="built_in">parseInt</span>(thetd.innerHTML);</span><br><span class="line">            }</span><br><span class="line">            tempflag[z] = <span class="literal">true</span>;</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">        tempmap = changetd(tempmap, tempflag, tempmap.length, <span class="number">0</span>);</span><br><span class="line">        z = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = i; j &lt; i + mapy; j++) {</span><br><span class="line">            <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(j);</span><br><span class="line">            <span class="keyword">if</span> (tempmap[z] == <span class="number">0</span>) {</span><br><span class="line">                thetd.innerHTML = <span class="string">""</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                thetd.innerHTML = tempmap[z];</span><br><span class="line">            }</span><br><span class="line">            z++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changetd</span>(<span class="params">tempmap, tempflag, k, u</span>) </span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = k - <span class="number">1</span>; i &gt; u; i--) {</span><br><span class="line">        <span class="keyword">if</span> (tempmap[i - <span class="number">1</span>] != <span class="number">0</span> &amp;&amp; tempmap[i] == <span class="number">0</span>) {</span><br><span class="line">            <span class="comment">//移动</span></span><br><span class="line">            tempmap[i] = tempmap[i - <span class="number">1</span>];</span><br><span class="line">            tempmap[i - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//移动时合并标记也同样跟随移动</span></span><br><span class="line">            <span class="keyword">if</span> (tempflag[i - <span class="number">1</span>] == <span class="literal">false</span>) {</span><br><span class="line">                tempflag[i - <span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">                tempflag[i] = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            flag_r = <span class="literal">true</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (tempmap[i - <span class="number">1</span>] != <span class="number">0</span> &amp;&amp; tempmap[i] == tempmap[i - <span class="number">1</span>] &amp;&amp; tempflag[i] == <span class="literal">true</span> &amp;&amp; tempflag[i - <span class="number">1</span>] == <span class="literal">true</span>) {</span><br><span class="line">            <span class="comment">//合并</span></span><br><span class="line">            tempmap[i] *= <span class="number">2</span>;</span><br><span class="line">            tempmap[i - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//标记经过合并处理</span></span><br><span class="line">            tempflag[i] = <span class="literal">false</span>;</span><br><span class="line">            flag_r = <span class="literal">true</span>;</span><br><span class="line">            mark.innerHTML = <span class="built_in">parseInt</span>(mark.innerHTML) + tempmap[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//递归，以解决可能出现的合并后产生空位未处理</span></span><br><span class="line">        tempmap = changetd(tempmap, tempflag, k, i);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> tempmap;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tdcolor</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">//根据不同数值给格子渲染上不同背景色</span></span><br><span class="line">    <span class="keyword">var</span> tdcolors = {</span><br><span class="line">        <span class="string">""</span>: <span class="string">"#cdc1b4"</span>,</span><br><span class="line">        <span class="string">"2"</span>: <span class="string">"#eee4da"</span>,</span><br><span class="line">        <span class="string">"4"</span>: <span class="string">"#ede0c8"</span>,</span><br><span class="line">        <span class="string">"8"</span>: <span class="string">"#f2b179"</span>,</span><br><span class="line">        <span class="string">"16"</span>: <span class="string">"#f59563"</span>,</span><br><span class="line">        <span class="string">"32"</span>: <span class="string">"#f67c5f"</span>,</span><br><span class="line">        <span class="string">"64"</span>: <span class="string">"#f65e3b"</span>,</span><br><span class="line">        <span class="string">"128"</span>: <span class="string">"#edcf72"</span>,</span><br><span class="line">        <span class="string">"256"</span>: <span class="string">"#edcc61"</span>,</span><br><span class="line">        <span class="string">"512"</span>: <span class="string">"#9c0"</span>,</span><br><span class="line">        <span class="string">"1024"</span>: <span class="string">"#33b5e5"</span>,</span><br><span class="line">        <span class="string">"2048"</span>: <span class="string">"#09c"</span>,</span><br><span class="line">        <span class="string">"4096"</span>: <span class="string">"#a6c"</span>,</span><br><span class="line">        <span class="string">"8192"</span>: <span class="string">"#93c"</span></span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//数字颜色更改</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapx * mapy; i++) {</span><br><span class="line">        <span class="keyword">var</span> thetd = <span class="built_in">document</span>.getElementById(i);</span><br><span class="line">        thetd.style.backgroundColor = tdcolors[thetd.innerHTML];</span><br><span class="line">        <span class="keyword">if</span> (thetd.innerHTML == <span class="number">2</span> || thetd.innerHTML == <span class="number">4</span>) {</span><br><span class="line">            thetd.style.color = <span class="string">"#776e65"</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            thetd.style.color = <span class="string">"#f8f5f1"</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isover</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= mapx * mapy; i++) {</span><br><span class="line">        <span class="keyword">var</span> td = <span class="built_in">document</span>.getElementById(i);</span><br><span class="line">        <span class="keyword">if</span>(td.innerHTML &gt;= youwin){</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).innerHTML=<span class="string">"恭喜你达到了 "</span>+td.innerHTML;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).style.display = <span class="string">"block"</span>;</span><br><span class="line">            youwin=<span class="built_in">parseInt</span>(td.innerHTML);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (td.innerHTML == <span class="string">""</span>) {</span><br><span class="line">            <span class="comment">//空值跳过</span></span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (i &lt;= (mapx - <span class="number">1</span>) * mapy &amp;&amp; td.innerHTML == <span class="built_in">document</span>.getElementById(i + mapy).innerHTML) {</span><br><span class="line">            <span class="comment">//判断该格子下方的数是否与之相同</span></span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (i % mapy != <span class="number">0</span> &amp;&amp; td.innerHTML == <span class="built_in">document</span>.getElementById(i + <span class="number">1</span>).innerHTML) {</span><br><span class="line">            <span class="comment">//判断该格子右边的数是否与之相同</span></span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            f++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (f == mapx * mapy) {</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).innerHTML+=<span class="string">"&lt;br&gt;GAME OVER"</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"gameover"</span>).style.display = <span class="string">"block"</span>;</span><br><span class="line">        overflag = <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>限于我个人糟糕的水平，上面的内容可能有许多不完善的地方或者有更好的办法，欢迎指出</p><p>也欢迎访问我的小破站<a href="https://www.226yzy.com/或者https://226yzy.github.io/">https://www.226yzy.com/或者https://226yzy.github.io/</a></p><p>我的Github<a href="https://github.com/226YZY">226YZY (星空下的YZY) (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 小游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录整理 </tag>
            
            <tag> 2048 </tag>
            
            <tag> 小游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对于Git出现git@e.coding.net:(publickey).问题的解决</title>
      <link href="/2021/112156639.html"/>
      <url>/2021/112156639.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这标题有点长哈🤣</p><h1 id="1-问题的出现"><a href="#1-问题的出现" class="headerlink" title="1.问题的出现"></a>1.问题的出现</h1><p>最近我想更新上传内容的时候发现下图的报错</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBhtK.png" alt="报错"></p><p>由于我Github和Coding上都有部署，Github的上传成功了</p><p>但是Coding上的上传失败</p><p>之前从未出现过这种情况，我也未修改相关内容（最多可能更新升级了Git）</p><p>于是，我开始在网上寻求解决方案，在尝试过多个无效方案后</p><p>我在这篇中找到了解决方案<a href="https://blog.csdn.net/zhangyiminsunshine/article/details/121237492">(18条消息) 解决 Coding使用Git出现：Permission denied (publickey)._zhangyiminsunshine的博客-CSDN博客</a></p><p>我参考的这篇也没有讲出这种做法的原由，我才疏学浅具体的也不清楚（有大佬清楚的话欢迎留言Orz），不过最终来看还是有效果的，希望这个解决方案能给遇到同样问题的您一个帮助。</p><h1 id="2-问题的解决过程"><a href="#2-问题的解决过程" class="headerlink" title="2.问题的解决过程"></a>2.问题的解决过程</h1><h2 id="1-找到文件"><a href="#1-找到文件" class="headerlink" title="1.找到文件"></a>1.找到文件</h2><p>以我的路径为例，找到电脑上<code>Git的安装目录</code>（我的是装在E盘），打开<code>etc</code>文件夹，再打开<code>ssh</code>文件夹，找到<code>ssh_config</code>文件</p><p><img src="https://s4.ax1x.com/2021/12/11/oTB201.png" alt="路径"></p><h2 id="2-添加内容"><a href="#2-添加内容" class="headerlink" title="2.添加内容"></a>2.添加内容</h2><p>然后再编辑<code>ssh_config</code>文件 ，在这个文件最下面加上如下内容</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host *.coding.net</span><br><span class="line">        HostkeyAlgorithms +ssh-rsa</span><br><span class="line">        PubkeyAcceptedAlgorithms +ssh-rsa</span><br></pre></td></tr></tbody></table></figure><p>参考如下</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBRTx.png" alt="添加内容"></p><h2 id="3-查看是否解决问题"><a href="#3-查看是否解决问题" class="headerlink" title="3.查看是否解决问题"></a>3.查看是否解决问题</h2><p>保存后在<code>git-bash.exe</code>中尝试运行<code>ssh -T git@e.coding.net</code>，具体参考<a href="https://help.coding.net/docs/repo/ssh/config.html">配置 SSH 公钥 - CODING 帮助中心</a></p><p>我成功后大致如下</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBgmR.png" alt="修改成功"></p><p>最后希望能帮助到有需要的你😉</p><p>祝我们的未来越来越好🚀</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Coding </tag>
            
            <tag> 解决 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>YZY的MATLAB笔记</title>
      <link href="/2021/083041604.html"/>
      <url>/2021/083041604.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文记录matlab代码相关的笔记，以后续学习参考（有些也许不是很高效，但是是我个人使用习惯）</p><p>（本文若有不正确的地方望大佬们多多指正Orz）</p><p>【本文优先发布于我的个人博客网站www.226yzy.com  ,<code>转载请注明出处</code>】</p><h1 id="1-绘图相关"><a href="#1-绘图相关" class="headerlink" title="1.绘图相关"></a>1.绘图相关</h1><h2 id="1-基本绘图"><a href="#1-基本绘图" class="headerlink" title="1.基本绘图"></a>1.基本绘图</h2><p>首先绘图需要点的横纵坐标的数据，这里使用下面的数据</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">1507.2</span>,<span class="number">1484.0</span>,<span class="number">1459.8</span>,<span class="number">1435.6</span>,<span class="number">1410.9</span>,<span class="number">1391.2</span>,<span class="number">1368.5</span>,<span class="number">1350.0</span>,<span class="number">1331.0</span>];</span><br><span class="line">y=[<span class="number">5170.8</span>,<span class="number">5175.4</span>,<span class="number">5176.1</span>,<span class="number">5176.6</span>,<span class="number">5175.1</span>,<span class="number">5191.9</span>,<span class="number">5197.9</span>,<span class="number">5220.3</span>,<span class="number">5240.6</span>];</span><br></pre></td></tr></tbody></table></figure><p>然后绘图的话我一般会通过下面这个函数绘制</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">'-'</span>);</span><br></pre></td></tr></tbody></table></figure><p>上面的三个参照，x和y就是点的横纵坐标的数据，对于第三个参数，为方便解释，由下表呈现</p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>MATLAB</strong> <strong>绘图命令的各种选项</strong></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center"><strong>曲线线型</strong></td><td style="text-align:center"></td><td style="text-align:center"><strong>曲线颜色</strong></td><td style="text-align:center"></td><td style="text-align:center"><strong>曲线颜色</strong></td><td style="text-align:center"></td><td style="text-align:center"><strong>标记符号</strong></td><td style="text-align:center"></td><td style="text-align:center"><strong>标记符号</strong></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><strong>选项</strong></td><td style="text-align:center"><strong>意义</strong></td><td style="text-align:center"><strong>选项</strong></td><td style="text-align:center"><strong>意义</strong></td><td style="text-align:center"><strong>选项</strong></td><td style="text-align:center"><strong>意义</strong></td><td style="text-align:center"><strong>选项</strong></td><td style="text-align:center"><strong>意义</strong></td><td style="text-align:center"><strong>选项</strong></td><td style="text-align:center"><strong>意义</strong></td></tr><tr><td style="text-align:center"><strong>‘-’</strong></td><td style="text-align:center"><strong>实线</strong></td><td style="text-align:center"><strong>‘b’</strong></td><td style="text-align:center"><strong>蓝色</strong></td><td style="text-align:center"><strong>‘c’</strong></td><td style="text-align:center"><strong>蓝**</strong>绿色**</td><td style="text-align:center"><strong>‘*’</strong></td><td style="text-align:center"><strong>星号</strong></td><td style="text-align:center"><strong>‘pentagram’</strong></td><td style="text-align:center"><strong>☆</strong></td></tr><tr><td style="text-align:center"><strong>‘- -’</strong></td><td style="text-align:center"><strong>虚线</strong></td><td style="text-align:center"><strong>‘g’</strong></td><td style="text-align:center"><strong>绿色</strong></td><td style="text-align:center"><strong>‘k’</strong></td><td style="text-align:center"><strong>黑色</strong></td><td style="text-align:center"><strong>‘**</strong>.’**</td><td style="text-align:center"><strong>点号</strong></td><td style="text-align:center"><strong>‘o’</strong></td><td style="text-align:center"><strong>○</strong></td></tr><tr><td style="text-align:center"><strong>‘:’</strong></td><td style="text-align:center"><strong>点线</strong></td><td style="text-align:center"><strong>‘m’</strong></td><td style="text-align:center"><strong>红紫色</strong></td><td style="text-align:center"><strong>‘r’</strong></td><td style="text-align:center"><strong>红色</strong></td><td style="text-align:center"><strong>‘x’</strong></td><td style="text-align:center"><strong>叉号</strong></td><td style="text-align:center"><strong>‘square’</strong></td><td style="text-align:center"><strong>□</strong></td></tr><tr><td style="text-align:center"><strong>‘-.’</strong></td><td style="text-align:center"><strong>点划线</strong></td><td style="text-align:center"><strong>‘w’</strong></td><td style="text-align:center"><strong>白色</strong></td><td style="text-align:center"><strong>‘y’</strong></td><td style="text-align:center"><strong>黄色</strong></td><td style="text-align:center"><strong>‘v’</strong></td><td style="text-align:center"><strong>▽</strong></td><td style="text-align:center"><strong>‘diamond’</strong></td><td style="text-align:center"><strong>◇</strong></td></tr><tr><td style="text-align:center"><strong>‘none’</strong></td><td style="text-align:center"><strong>无线</strong></td><td style="text-align:center">**用一个1x3向量任意指定[r,g,b]红绿蓝三原色</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><strong>‘^’</strong></td><td style="text-align:center"><strong>△</strong></td><td style="text-align:center"><strong>‘hexagram’</strong></td><td style="text-align:center"><strong>六角星</strong></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><strong>‘&gt;’</strong></td><td style="text-align:center"><strong>左三角</strong></td><td style="text-align:center"><strong>‘&lt;’</strong></td><td style="text-align:center"><strong>右三角</strong></td></tr></tbody></table></div><h2 id="2-使用plot3-函数绘制三维图像"><a href="#2-使用plot3-函数绘制三维图像" class="headerlink" title="2. 使用plot3()函数绘制三维图像"></a>2. 使用plot3()函数绘制三维图像</h2><p>绘制三维图像需要x、y、z、轴上的坐标数据，这里使用下面的数据</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">1507.2</span>,<span class="number">1484.0</span>,<span class="number">1459.8</span>,<span class="number">1435.6</span>,<span class="number">1410.9</span>,<span class="number">1391.2</span>,<span class="number">1368.5</span>,<span class="number">1350.0</span>,<span class="number">1331.0</span>];</span><br><span class="line">y=[<span class="number">5170.8</span>,<span class="number">5175.4</span>,<span class="number">5176.1</span>,<span class="number">5176.6</span>,<span class="number">5175.1</span>,<span class="number">5191.9</span>,<span class="number">5197.9</span>,<span class="number">5220.3</span>,<span class="number">5240.6</span>];</span><br><span class="line">z=[<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br></pre></td></tr></tbody></table></figure><p>然后函数调用如下即可</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">plot3</span>(x,y,z,<span class="string">'-'</span>)</span><br></pre></td></tr></tbody></table></figure><p>各参数具体含义与<code>plot（）</code>函数基本相同</p><h2 id="3-为图添加标题、坐标轴名称、格栅"><a href="#3-为图添加标题、坐标轴名称、格栅" class="headerlink" title="3. 为图添加标题、坐标轴名称、格栅"></a>3. 为图添加标题、坐标轴名称、格栅</h2><p>为了绘制的图的完整就需要添加标题、坐标轴名称等信息</p><p>标题、坐标轴名称的添加如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xlabel(<span class="string">'x轴'</span>);</span><br><span class="line">ylabel(<span class="string">'y轴'</span>);</span><br><span class="line">zlabel(<span class="string">'z轴'</span>);</span><br><span class="line">title(<span class="string">'标题'</span>);</span><br></pre></td></tr></tbody></table></figure><p>格栅的添加需输入命令</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grid on</span><br></pre></td></tr></tbody></table></figure><p>关闭格栅则输入命令</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grid off</span><br></pre></td></tr></tbody></table></figure><h2 id="4-同一图内多条曲线绘制，及双y轴图像、多幅图的绘制"><a href="#4-同一图内多条曲线绘制，及双y轴图像、多幅图的绘制" class="headerlink" title="4.同一图内多条曲线绘制，及双y轴图像、多幅图的绘制"></a>4.同一图内多条曲线绘制，及双y轴图像、多幅图的绘制</h2><h3 id="1-同一图内多条曲线绘制"><a href="#1-同一图内多条曲线绘制" class="headerlink" title="1.同一图内多条曲线绘制"></a>1.同一图内多条曲线绘制</h3><p>假设数据如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">1507.2</span>,<span class="number">1484.0</span>,<span class="number">1459.8</span>,<span class="number">1435.6</span>,<span class="number">1410.9</span>,<span class="number">1391.2</span>,<span class="number">1368.5</span>,<span class="number">1350.0</span>,<span class="number">1331.0</span>];</span><br><span class="line">y=[<span class="number">5170.8</span>,<span class="number">5175.4</span>,<span class="number">5176.1</span>,<span class="number">5176.6</span>,<span class="number">5175.1</span>,<span class="number">5191.9</span>,<span class="number">5197.9</span>,<span class="number">5220.3</span>,<span class="number">5240.6</span>];</span><br><span class="line">z=[<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br></pre></td></tr></tbody></table></figure><p>如果绘制两条则如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">'-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(x,z,<span class="string">'-'</span>);</span><br></pre></td></tr></tbody></table></figure><p>即插入<code>hold on;</code></p><h3 id="2-双y轴图像"><a href="#2-双y轴图像" class="headerlink" title="2.双y轴图像"></a>2.双y轴图像</h3><p>双y轴图像的绘制如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plotyy(x,y,x,z)</span><br></pre></td></tr></tbody></table></figure><p>前面一对为左y轴，后面一对为右y轴</p><h3 id="3-多幅图的绘制"><a href="#3-多幅图的绘制" class="headerlink" title="3.多幅图的绘制"></a>3.多幅图的绘制</h3><p>假设我们需要绘制6幅图，并以3行2列的形式呈现即下图的样子</p><p><img src="https://s4.ax1x.com/2021/12/11/oTB4fO.png" alt="matlab多图示例"></p><p>实现上图的代码大致如下（数据的就没放进去了）</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(t2,A1,<span class="string">'b-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(t2,k1,<span class="string">'r-'</span>);</span><br><span class="line">ylabel(<span class="string">'监测量'</span>);</span><br><span class="line">xlabel(<span class="string">'时间'</span>);</span><br><span class="line">title(<span class="string">'PM2.5'</span>);</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(t2,A2,<span class="string">'b-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(t2,k2,<span class="string">'r-'</span>);</span><br><span class="line">ylabel(<span class="string">'监测量'</span>);</span><br><span class="line">xlabel(<span class="string">'时间'</span>);</span><br><span class="line">title(<span class="string">'PM10'</span>);</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="built_in">plot</span>(t2,A3,<span class="string">'b-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(t2,k3,<span class="string">'r-'</span>);</span><br><span class="line">ylabel(<span class="string">'监测量'</span>);</span><br><span class="line">xlabel(<span class="string">'时间'</span>);</span><br><span class="line">title(<span class="string">'CO'</span>);</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line"><span class="built_in">plot</span>(t2,A4,<span class="string">'b-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(t2,k4,<span class="string">'r-'</span>);</span><br><span class="line">ylabel(<span class="string">'监测量'</span>);</span><br><span class="line">xlabel(<span class="string">'时间'</span>);</span><br><span class="line">title(<span class="string">'NO2'</span>);</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>);</span><br><span class="line"><span class="built_in">plot</span>(t2,A5,<span class="string">'b-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(t2,k5,<span class="string">'r-'</span>);</span><br><span class="line">ylabel(<span class="string">'监测量'</span>);</span><br><span class="line">xlabel(<span class="string">'时间'</span>);</span><br><span class="line">title(<span class="string">'SO2'</span>);</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">6</span>);</span><br><span class="line"><span class="built_in">plot</span>(t2,A6,<span class="string">'b-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(t2,k6,<span class="string">'r-'</span>);</span><br><span class="line">ylabel(<span class="string">'监测量'</span>);</span><br><span class="line">xlabel(<span class="string">'时间'</span>);</span><br><span class="line">title(<span class="string">'O3'</span>);</span><br></pre></td></tr></tbody></table></figure><p>这主要是用了<code>subplot()</code>函数；</p><p>该函数有三个参数，</p><p>第一个代表最终绘制有几行，</p><p>第二个代表最终绘制有几列，</p><p>第三代表该图为第几幅图</p><h2 id="5-调整坐标比例避免图像变形"><a href="#5-调整坐标比例避免图像变形" class="headerlink" title="5. 调整坐标比例避免图像变形"></a>5. 调整坐标比例避免图像变形</h2><p>这个方法在我的另一篇文章有提到过（<a href="https://226yzy.com/2021/083053025.html#toc-heading-6">MATLAB拟合圆 | 星空下的YZY (226yzy.com)</a>）</p><p>输入下面的命令</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis equal</span><br></pre></td></tr></tbody></table></figure><p>该命令就是保证横纵坐标轴的最小刻度一致</p><p>得到的图像如下</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBo1e.png" alt="matlab拟合圆axis equal图像调整"></p><p>或者用另一个命令</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis square</span><br></pre></td></tr></tbody></table></figure><p>该命令使横纵坐标比例为1</p><p>得到的图像如下</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBT6H.png" alt="matlab拟合圆axis square图像调整"></p><p>若想恢复默认，只需输入下面的命令即可</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis auto</span><br></pre></td></tr></tbody></table></figure><p>这样你就可以得到一个正常的圆的图像了</p><h2 id="6-MATLAB提供的特殊二维曲线绘制函数"><a href="#6-MATLAB提供的特殊二维曲线绘制函数" class="headerlink" title="6. MATLAB提供的特殊二维曲线绘制函数"></a>6. MATLAB提供的特殊二维曲线绘制函数</h2><p>其它的一些MATLAB提供的特殊二维曲线绘制函数如下表</p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>MATLAB提供的特殊二维曲线绘制函数</strong></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center"><strong>函数名</strong></td><td style="text-align:center"><strong>意义</strong></td><td style="text-align:center"><strong>常用调用格式</strong></td></tr><tr><td style="text-align:center"><strong>bar()</strong></td><td style="text-align:center"><strong>二维条形图</strong></td><td style="text-align:center"><strong>bar(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>comet()</strong></td><td style="text-align:center"><strong>彗星状轨迹图</strong></td><td style="text-align:center"><strong>comet(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>compass()</strong></td><td style="text-align:center"><strong>罗盘图</strong></td><td style="text-align:center"><strong>compass(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>errorbar()</strong></td><td style="text-align:center"><strong>误差限图形</strong></td><td style="text-align:center"><strong>errorbar(x,y,l,u)</strong></td></tr><tr><td style="text-align:center"><strong>feather()</strong></td><td style="text-align:center"><strong>羽毛状图</strong></td><td style="text-align:center"><strong>feather(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>fill()</strong></td><td style="text-align:center"><strong>二维填充函数</strong></td><td style="text-align:center"><strong>fill(x,y,c)</strong></td></tr><tr><td style="text-align:center"><strong>hist()</strong></td><td style="text-align:center"><strong>直方图</strong></td><td style="text-align:center"><strong>hist(y,n)</strong></td></tr><tr><td style="text-align:center"><strong>loglog()</strong></td><td style="text-align:center"><strong>对数图</strong></td><td style="text-align:center"><strong>loglog(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>polar()</strong></td><td style="text-align:center"><strong>极坐标图</strong></td><td style="text-align:center"><strong>polar(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>quiver()</strong></td><td style="text-align:center"><strong>磁力线图</strong></td><td style="text-align:center"><strong>quiver(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>stairs()</strong></td><td style="text-align:center"><strong>阶梯图形</strong></td><td style="text-align:center"><strong>stairs(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>stem()</strong></td><td style="text-align:center"><strong>火柴杆图</strong></td><td style="text-align:center"><strong>stem(x,y)</strong></td></tr><tr><td style="text-align:center"><strong>semilogx() </strong> <strong>semilogy()</strong></td><td style="text-align:center"><strong>半对数图</strong></td><td style="text-align:center"><strong>semilogx(x,y)   semilogy(x,y)</strong></td></tr></tbody></table></div><h2 id="7-matlab绘制散点图矩阵"><a href="#7-matlab绘制散点图矩阵" class="headerlink" title="7. matlab绘制散点图矩阵"></a>7. matlab绘制散点图矩阵</h2><p>matlab绘制散点图矩阵可通过<code>plotmatrix()</code>函数</p><p>可通过下面的代码得到一个简单的效果图</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X = <span class="built_in">randn</span>(<span class="number">50</span>,<span class="number">3</span>);  <span class="comment">%创建一个由随机数组成的 50×3 数组。</span></span><br><span class="line">plotmatrix(X)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2021/12/11/oTB7Xd.png" alt="matlab散点图矩阵示图"></p><p>比较完整的调用如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X = <span class="built_in">randn</span>(<span class="number">50</span>,<span class="number">3</span>);</span><br><span class="line">plotmatrix(X)</span><br><span class="line">[S,AX,BigAx,H,HAx] = plotmatrix(X)</span><br></pre></td></tr></tbody></table></figure><p>根据官方文档的说明<a href="https://ww2.mathworks.cn/help/matlab/ref/plotmatrix.html#d123e956614">散点图矩阵 - MATLAB plotmatrix - MathWorks 中国</a>，上面参数的含义如下</p><ul><li><code>S</code> - 散点图的图形线条对象</li><li><code>AX</code> - 每个子坐标区的坐标区对象</li><li><code>BigAx</code> - 容纳子坐标区的主坐标区的坐标区对象</li><li><code>H</code> - 直方图的直方图对象</li><li><code>HAx</code> - 不可见的直方图坐标区的坐标区对象</li></ul><h1 id="2-matlab对Excel数据的读写"><a href="#2-matlab对Excel数据的读写" class="headerlink" title="2. matlab对Excel数据的读写"></a>2. matlab对Excel数据的读写</h1><h2 id="1-对Excel数据的读入"><a href="#1-对Excel数据的读入" class="headerlink" title="1.对Excel数据的读入"></a>1.对Excel数据的读入</h2><p>对Excel数据的读入我个人还是比较习惯用<code>xlsread(）</code>函数的，其调用如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t2=xlsread(<span class="string">'C:\Users\Dell\Desktop\新建 XLSX 工作表.xlsx'</span>,<span class="number">3</span>,<span class="string">'M2:M4141'</span>);</span><br></pre></td></tr></tbody></table></figure><p>该函数包含了三个参数</p><p>第一个参数是文件的路径</p><p>第二个参数是第几个工作表，这个参数你也可以写该工作表的名称，如果该工作表名为<code>Sheet3</code>可如下调用</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&nbsp;t2=xlsread(<span class="string">'C:\Users\Dell\Desktop\新建 XLSX 工作表.xlsx'</span>,<span class="string">'Sheet3'</span>,<span class="string">'M2:M4141'</span>);</span><br></pre></td></tr></tbody></table></figure><p>第三个参数是调取的数据在Excel表中的具体位置范围</p><h2 id="2-对Excel数据的写入"><a href="#2-对Excel数据的写入" class="headerlink" title="2. 对Excel数据的写入"></a>2. 对Excel数据的写入</h2><p>对Excel数据的写入我个人还是比较习惯用xlswrite(）函数，其调用如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xlswrite(<span class="string">'C:\Users\Dell\Desktop\2019D\新建 XLSX 工作表.xlsx'</span>,kk,<span class="number">2</span>,<span class="string">'A1'</span>);</span><br></pre></td></tr></tbody></table></figure><p>该函数包含了四个参数</p><p>第一个参数是文件的路径</p><p>第二个参数是要写入的数据集的名称</p><p>第三个参数是第几个工作表，这个参数你也可以写该工作表的名称,</p><p>第四个参数是在表格中写入的位置，如果默认从A1的位置开始，则可以不写</p><h1 id="3-拟合及求解相关内容"><a href="#3-拟合及求解相关内容" class="headerlink" title="3.拟合及求解相关内容"></a>3.拟合及求解相关内容</h1><h2 id="1-多项式拟合"><a href="#1-多项式拟合" class="headerlink" title="1.多项式拟合"></a>1.多项式拟合</h2><p>首先我找到了之前我自己比较早的时候写的一份代码，该代码进行的是一元一次回归方程的拟合结果的绘图，并预测1997和1998年的值（x0和y0中有这两年的数据是因为前面运行得出了（即第一处注释的位置），后续添加上去的）</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x0=[<span class="number">1990</span> <span class="number">1991</span> <span class="number">1992</span> <span class="number">1993</span> <span class="number">1994</span> <span class="number">1995</span> <span class="number">1996</span> <span class="number">1997</span> <span class="number">1998</span>];</span><br><span class="line">y0=[<span class="number">70</span> <span class="number">122</span> <span class="number">144</span> <span class="number">152</span> <span class="number">174</span> <span class="number">196</span> <span class="number">202</span> <span class="number">233.4286</span> <span class="number">253.9286</span>];</span><br><span class="line"><span class="built_in">plot</span>(x0,y0,<span class="string">'*'</span>)</span><br><span class="line">a=polyfit(x0,y0,<span class="number">1</span>)</span><br><span class="line">poly2sym(a)</span><br><span class="line"><span class="comment">%y97=polyval(a,1997)</span></span><br><span class="line"><span class="comment">%y98=polyval(a,1998)</span></span><br><span class="line">xi=<span class="number">1990</span>:<span class="number">0.1</span>:<span class="number">1998</span>;</span><br><span class="line">yi=interp1(x0,y0,xi);</span><br><span class="line">yyi=(<span class="number">721279745102309</span>*xi)/<span class="number">35184372088832</span> - <span class="number">5594463330784247</span>/<span class="number">137438953472</span></span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="comment">%yyi=interp1(x0,y0,xi,'spline');</span></span><br><span class="line"><span class="built_in">plot</span>(xi,yyi,<span class="string">'b-'</span>)</span><br></pre></td></tr></tbody></table></figure><h3 id="1-polyfit-函数"><a href="#1-polyfit-函数" class="headerlink" title="1. polyfit()函数"></a>1. polyfit()函数</h3><p><code>polyfit()</code>函数是用于多项式曲线拟合的</p><p>该函数有3个参数</p><p>前两个即横纵坐标的数据</p><p>第三个代表的是几次多项式</p><h3 id="2-poly2sym-函数"><a href="#2-poly2sym-函数" class="headerlink" title="2. poly2sym()函数"></a>2. poly2sym()函数</h3><p><code>poly2sym()</code>函数它是把系数组转换成自符号多项式</p><h3 id="3-polyval-）函数"><a href="#3-polyval-）函数" class="headerlink" title="3. polyval(）函数"></a>3. polyval(）函数</h3><p><code>polyval()</code>函数用于多项式计算</p><h3 id="4-interp1-函数"><a href="#4-interp1-函数" class="headerlink" title="4. interp1()函数"></a>4. interp1()函数</h3><p><code>interp1()</code>函数用于一维数据插值</p><p>该函数有4个参数分别为样本点、样本值、查询点和插值方法</p><p>插值方法具体见该链接<a href="https://ww2.mathworks.cn/help/matlab/ref/interp1.html#btwp6lt-1-x">一维数据插值（表查找） - MATLAB interp1 - MathWorks 中国</a></p><h2 id="2-方程交点求解"><a href="#2-方程交点求解" class="headerlink" title="2.方程交点求解"></a>2.方程交点求解</h2><p>对于方程间交点求解代码如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">syms x y</span><br><span class="line">s=solve(y==-sqrt(0.4592.^2-(x-51.2165).^2)+4.2939,y==-2.7415*x+134.6935);</span><br><span class="line">xx=double(s.x)</span><br><span class="line">yy=double(s.y)</span><br></pre></td></tr></tbody></table></figure><p><code>solve()</code>函数中方程可替换</p><p>xx和yy分别代表交点的横纵坐标</p><h2 id="3-修正倾斜角度"><a href="#3-修正倾斜角度" class="headerlink" title="3.修正倾斜角度"></a>3.修正倾斜角度</h2><p>修正倾斜角度代码如下，下面代码在24.5为倾斜角度</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AA=A1*<span class="built_in">cos</span>(<span class="built_in">pi</span>/<span class="number">24.5</span>)-A2*<span class="built_in">sin</span>(<span class="built_in">pi</span>/<span class="number">24.5</span>);</span><br><span class="line">AB=A1*<span class="built_in">sin</span>(<span class="built_in">pi</span>/<span class="number">24.5</span>)+A2*<span class="built_in">cos</span>(<span class="built_in">pi</span>/<span class="number">24.5</span>);</span><br><span class="line"><span class="built_in">plot</span>(AA,AB,<span class="string">'-'</span>);</span><br></pre></td></tr></tbody></table></figure><h2 id="4-圆的拟合"><a href="#4-圆的拟合" class="headerlink" title="4. 圆的拟合"></a>4. 圆的拟合</h2><p>这个我在另一篇有专门写，这里就不再赘述了</p><p>传送门：<a href="https://226yzy.com/2021/083053025.html">MATLAB拟合圆 | 星空下的YZY (226yzy.com)</a></p><h2 id="5-多元回归方程拟合"><a href="#5-多元回归方程拟合" class="headerlink" title="5.多元回归方程拟合"></a>5.多元回归方程拟合</h2><p>当时有参考这一篇<a href="https://blog.csdn.net/YinJianxiang/article/details/81464245">(4条消息) [matlab]多元线性回归regress_YinJianxiang的博客-CSDN博客_matlab多元线性回归</a></p><p>对于该问题代码如下</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X1 = [<span class="built_in">ones</span>(<span class="built_in">size</span>(A1)) B1 C1 C2 C3 C4 C5];</span><br><span class="line">[b1,bint1,r1,rint1,stats1] = regress(A1,X1);</span><br></pre></td></tr></tbody></table></figure><p><code>X1</code>中的各个参数为矩阵，具体参数个数看所求因素的个数</p><p>例如B1、C1这些代表了多元回归方程的各项除系数外的内容</p><h3 id="1-size-函数"><a href="#1-size-函数" class="headerlink" title="1. size()函数"></a>1. size()函数</h3><p><code>size（）</code>函数可获取该矩阵的行数和列数</p><h3 id="2-ones-函数"><a href="#2-ones-函数" class="headerlink" title="2. ones()函数"></a>2. ones()函数</h3><p><code>ones（）</code>函数表示生成全1的矩阵，<code>ones(size(A1))</code>产生的矩阵是与A1大小相同的全1矩阵</p><h3 id="3-regress-函数"><a href="#3-regress-函数" class="headerlink" title="3. regress()函数"></a>3. regress()函数</h3><p><code>regress()</code>函数是多元线性回归的求解函数</p><p><code>A1</code>代表预期结果的数据，<code>X1</code>则如上，代表各因素的数据</p><p>根据<a href="https://ww2.mathworks.cn/help/stats/regress.html#d123e31801">多元线性回归 - MATLAB regress - MathWorks 中国</a>的描述</p><p>b1,bint1,r1,rint1,stats1这些的含义如下</p><p><code>b1</code>为多元线性回归的系数估计值</p><p><code>bint1</code>为系数估计值的置信边界下限和置信边界上限，即置信区间</p><p><code>r1</code>为残差</p><p><code>rint1</code>用于诊断离群值的区间</p><p><code>stats1</code>为模型统计量以数值向量形式返回，包括 R² 统计量、F 统计量及其 P 值，以及误差方差的估计值</p><p>我们得到了这些数据后，就可以通过得到的多元回归方程计算该方程的数据，并得知拟合情况</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">k1=b1(<span class="number">1</span>)+b1(<span class="number">2</span>)*B1+b1(<span class="number">3</span>)*C1+b1(<span class="number">4</span>)*C2+b1(<span class="number">5</span>)*C3+b1(<span class="number">6</span>)*C4+b1(<span class="number">7</span>)*C5;</span><br></pre></td></tr></tbody></table></figure><h3 id="4-rcoplot-函数"><a href="#4-rcoplot-函数" class="headerlink" title="4. rcoplot()函数"></a>4. rcoplot()函数</h3><p>在使用过上述的<code>regress()</code>函数后，可以通过下面的代码绘制残差图</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rcoplot(r1,rint1)</span><br></pre></td></tr></tbody></table></figure><p><code>rcoplot()</code>函数有两个参数</p><p>第一个为残差</p><p>第二个为诊断离群值的区间</p><h1 id="4-MTALAB图论工具箱"><a href="#4-MTALAB图论工具箱" class="headerlink" title="4.MTALAB图论工具箱"></a>4.MTALAB图论工具箱</h1><p>在之前我的一篇文章中，我通过代码实现Floyd和Dijkstra算法<a href="https://226yzy.com/2021/082760550.html">最短路径—Floyd与Dijkstra算法 | 星空下的YZY (226yzy.com)</a>matlab中提供了相关的工具箱，我们可以通过命令调取使用，还可以绘制图像更加直观地看到结果。</p><h2 id="1-Matlab图论工具箱的命令"><a href="#1-Matlab图论工具箱的命令" class="headerlink" title="1. Matlab图论工具箱的命令"></a>1. Matlab图论工具箱的命令</h2><p>根据<code>《数学建模算法与应用（第2版）》</code>第54页中整理的Matlab图论工具箱的命令</p><div class="table-container"><table><thead><tr><th style="text-align:center">命令名</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">graphallshortestpaths</td><td style="text-align:center">求图中所有顶点对之间的最短距离</td></tr><tr><td style="text-align:center">graphconncomp</td><td style="text-align:center">找无向图的连通分支，或有向图的强弱连通分支</td></tr><tr><td style="text-align:center">graphisdag</td><td style="text-align:center">测试有向图是否含有圈，不含圈返回1，否则返回0</td></tr><tr><td style="text-align:center">graphisomorphism</td><td style="text-align:center">确定两个图是否同构，同构返回1，否则返回0</td></tr><tr><td style="text-align:center">graphisspantree</td><td style="text-align:center">确定一个图是否是生成树，是返回1，否则返回0</td></tr><tr><td style="text-align:center">graphmaxflow</td><td style="text-align:center">计算有向图的最大流</td></tr><tr><td style="text-align:center">graphminspantree</td><td style="text-align:center">在图中找最小生成树</td></tr><tr><td style="text-align:center">graphpred2path</td><td style="text-align:center">把前驱顶点序列变成路径的顶点序列</td></tr><tr><td style="text-align:center">graphshortestpath</td><td style="text-align:center">求图中指定的一对顶点间的最短距离和最短路径</td></tr><tr><td style="text-align:center">graphtopootder</td><td style="text-align:center">执行有向无圈图的拓扑排序</td></tr><tr><td style="text-align:center">graphtraverse</td><td style="text-align:center">求从一顶点出发，所能遍历图中的顶点</td></tr></tbody></table></div><h2 id="2-绘制有向图"><a href="#2-绘制有向图" class="headerlink" title="2.绘制有向图"></a>2.绘制有向图</h2><p>通过matlab可以直观地画出相应的路径图</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">t=[<span class="number">41</span> <span class="number">99</span> <span class="number">51</span> <span class="number">32</span> <span class="number">15</span> <span class="number">45</span> <span class="number">38</span> <span class="number">32</span> <span class="number">36</span> <span class="number">29</span> <span class="number">21</span>];<span class="comment">%路径耗时</span></span><br><span class="line">s=[<span class="number">6</span> <span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">4</span> <span class="number">5</span> <span class="number">5</span> <span class="number">6</span> <span class="number">1</span>];<span class="comment">%起点</span></span><br><span class="line">e=[<span class="number">2</span> <span class="number">6</span> <span class="number">3</span> <span class="number">5</span> <span class="number">4</span> <span class="number">1</span> <span class="number">6</span> <span class="number">3</span> <span class="number">4</span> <span class="number">3</span> <span class="number">5</span>];<span class="comment">%与起点对应的目的地</span></span><br><span class="line">dg=sparse(s,e,t)<span class="comment">%构造的稀疏矩阵表示图</span></span><br><span class="line">h=view(biograph(dg,[],<span class="string">'ShowWeights'</span>,<span class="string">'on'</span>))<span class="comment">%显示图的结构</span></span><br><span class="line">dist=graphallshortestpaths(dg)<span class="comment">%显示图中每对结点之间的最短路径　</span></span><br></pre></td></tr></tbody></table></figure><p><code>view()</code>设置相机视线具体见官方文档解释<a href="https://ww2.mathworks.cn/help/matlab/ref/view.html#mw_5398a10d-3e0a-466b-a957-8b01860d91ef">相机视线 - MATLAB view - MathWorks 中国</a></p><p><code>sparse()</code>函数是用于构建稀疏矩阵</p><p><code>ShowWeights=off</code>表示无权图，<code>on</code>表示赋权图 </p><p>另外<code>ShowArrows=off</code>表示无向图，<code>on</code>表示有向图</p><p><code>graphallshortestpaths()</code>可以得出各点间的最短路径</p><h1 id="5-其他"><a href="#5-其他" class="headerlink" title="5.其他"></a>5.其他</h1><h2 id="1-最短路径"><a href="#1-最短路径" class="headerlink" title="1.最短路径"></a>1.最短路径</h2><p>这个我在另一篇也有专门写，这里就不再赘述了</p><p>无论以什么方式引用，请注明出处吼😉</p><p>这篇许多代码都是我自己写的创作不易😂</p><p>传送门：<a href="https://226yzy.com/2021/082760550.html">最短路径—Floyd与Dijkstra算法 | 星空下的YZY (226yzy.com)</a></p><h2 id="2-matlab官方中文在线文档"><a href="#2-matlab官方中文在线文档" class="headerlink" title="2. matlab官方中文在线文档"></a>2. matlab官方中文在线文档</h2><p>有些描述准确一点还是参考官方文档比较好</p><p><a href="https://ww2.mathworks.cn/help/matlab/index.html">MATLAB Documentation - MathWorks 中国</a></p>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> 数学建模 </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> 汇总 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB拟合圆</title>
      <link href="/2021/083053025.html"/>
      <url>/2021/083053025.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>   本文整理了我在寻求拟合圆的方法中找到的两份matlab代码，内容有参考，将注明出处</p><p>（本文若有不正确的地方望大佬们多多指正Orz）</p><p>【本文优先发布于我的个人博客网站www.226yzy.com  ,<code>转载请注明出处</code>】</p><h1 id="最小二乘拟合圆"><a href="#最小二乘拟合圆" class="headerlink" title="最小二乘拟合圆"></a>最小二乘拟合圆</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>​     当时参考了这份博客的代码<a href="https://blog.csdn.net/diziyue8622/article/details/101461615">(4条消息) 最小二乘圆拟合circfit m sci 代码_diziyue8622的博客-CSDN博客</a></p><h3 id="1-保存函数"><a href="#1-保存函数" class="headerlink" title="1. 保存函数"></a>1. 保存函数</h3><p>​     先将下面这份代码保存（保存至默认路径）</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[xc,yc,R,a]</span> = <span class="title">circfit</span><span class="params">(x,y)</span></span></span><br><span class="line">n=<span class="built_in">length</span>(x);</span><br><span class="line">xx=x.*x;</span><br><span class="line">yy=y.*y;</span><br><span class="line">xy=x.*y;</span><br><span class="line">A=[sum(x) sum(y) n;sum(xy) sum(yy) sum(y);sum(xx) sum(xy) sum(x)];</span><br><span class="line">B=[-sum(xx+yy) ; -sum(xx.*y+yy.*y) ; -sum(xx.*x+xy.*y)];</span><br><span class="line">a=A\B;</span><br><span class="line">xc = <span class="number">-.5</span>*a(<span class="number">1</span>);</span><br><span class="line">yc = <span class="number">-.5</span>*a(<span class="number">2</span>);</span><br><span class="line">R = <span class="built_in">sqrt</span>((a(<span class="number">1</span>)^<span class="number">2</span>+a(<span class="number">2</span>)^<span class="number">2</span>)/<span class="number">4</span>-a(<span class="number">3</span>));</span><br></pre></td></tr></tbody></table></figure><p>保存成功后，调用方式如下</p><h3 id="2-调用函数"><a href="#2-调用函数" class="headerlink" title="2. 调用函数"></a>2. 调用函数</h3><p>​    首先，我们需要各点的坐标数据，这里为方便演示定义了下面的九组坐标</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">1507.2</span>,<span class="number">1484.0</span>,<span class="number">1459.8</span>,<span class="number">1435.6</span>,<span class="number">1410.9</span>,<span class="number">1391.2</span>,<span class="number">1368.5</span>,<span class="number">1350.0</span>,<span class="number">1331.0</span>];</span><br><span class="line">y=[<span class="number">5170.8</span>,<span class="number">5175.4</span>,<span class="number">5176.1</span>,<span class="number">5176.6</span>,<span class="number">5175.1</span>,<span class="number">5191.9</span>,<span class="number">5197.9</span>,<span class="number">5220.3</span>,<span class="number">5240.6</span>];</span><br></pre></td></tr></tbody></table></figure><p>​    然后输入下面的代码调用即可</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[xc,yc,R,a]=circfit(x,y)</span><br></pre></td></tr></tbody></table></figure><h3 id="3-参数解读"><a href="#3-参数解读" class="headerlink" title="3. 参数解读"></a>3. 参数解读</h3><p>调用后得到以下结果</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">xc =</span><br><span class="line">   <span class="number">1.4625e+03</span></span><br><span class="line"></span><br><span class="line">yc =</span><br><span class="line">   <span class="number">5.3278e+03</span></span><br><span class="line"></span><br><span class="line">R =</span><br><span class="line">  <span class="number">156.7942</span></span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line">   <span class="number">1.0e+07</span> *</span><br><span class="line"></span><br><span class="line">   <span class="number">-0.0003</span></span><br><span class="line">   <span class="number">-0.0011</span></span><br><span class="line">    <span class="number">3.0500</span></span><br></pre></td></tr></tbody></table></figure><p>​     这里xc和yc分别代表圆心的横坐标和纵坐标，R代表圆的半径，a有三个值分别代表圆的一般方程的三个系数。</p><p>​     这样，通过这种方法就可以得到圆的标准方程或一般方程</p><h3 id="4-绘制"><a href="#4-绘制" class="headerlink" title="4. 绘制"></a>4. 绘制</h3><p>​     获得拟合后的圆的方程，如果需要绘图，那么我的使用如下代码</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">v=xc-R:<span class="number">0.001</span>:xc+R+<span class="number">0.001</span>;</span><br><span class="line">k=<span class="built_in">sqrt</span>(R.^<span class="number">2</span>-(v-xc).^<span class="number">2</span>)+yc;</span><br><span class="line">k2=-<span class="built_in">sqrt</span>(R.^<span class="number">2</span>-(v-xc).^<span class="number">2</span>)+yc;</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">'b*'</span>);</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(v,k,<span class="string">'-'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(v,k2,<span class="string">'-'</span>);</span><br></pre></td></tr></tbody></table></figure><p>输入成功后你就可以得到绘制的圆，当然这里也许会有一个小问题，就是绘制后的圆因为窗口大小的原因，导致横纵坐标比例不协调，使得圆看起来像椭圆</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBIpD.png" alt="matlab拟合圆图像变形"></p><p>​        对于这种问题，我参考了这个回答<a href="https://jingyan.baidu.com/article/76a7e409d8d550fc3b6e15fc.html">matlab怎么控制坐标/画圆形看起来像椭圆怎么办-百度经验 (baidu.com)</a>找到了解决方法，该方法是输入下面的命令</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis equal</span><br></pre></td></tr></tbody></table></figure><p>该命令就是保证横纵坐标轴的最小刻度一致</p><p>得到的图像如下</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBo1e.png" alt="matlab拟合圆axis equal图像调整"></p><p>或者用另一个命令</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis square</span><br></pre></td></tr></tbody></table></figure><p>该命令使横纵坐标比例为1</p><p>得到的图像如下</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBT6H.png" alt="matlab拟合圆axis square图像调整"></p><p>若想恢复默认，只需输入下面的命令即可</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis auto</span><br></pre></td></tr></tbody></table></figure><p>这样你就可以得到一个正常的圆的图像了</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>​    该方法来源于<a href="https://www.ilovematlab.cn/thread-182431-1-1.html">matlab最小二乘法拟合圆 – MATLAB中文论坛 (ilovematlab.cn)</a>中的一个回答</p><h3 id="1-数据与代码"><a href="#1-数据与代码" class="headerlink" title="1. 数据与代码"></a>1. 数据与代码</h3><p>​    首先还是要有点的坐标数据</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=[1507.2,1484.0,1459.8,1435.6,1410.9,1391.2,1368.5,1350.0,1331.0];</span><br><span class="line">y=[5170.8,5175.4,5176.1,5176.6,5175.1,5191.9,5197.9,5220.3,5240.6];</span><br></pre></td></tr></tbody></table></figure><p>   下面代码是比较完整的，绘图的部分也有了</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ydata = y;</span><br><span class="line">xdata = x;</span><br><span class="line"></span><br><span class="line">k0 = <span class="built_in">ones</span>(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">F = @(k)(xdata-k(<span class="number">1</span>)).^<span class="number">2</span>+(ydata-k(<span class="number">2</span>)).^<span class="number">2</span>-k(<span class="number">3</span>)^<span class="number">2</span></span><br><span class="line">[k,resnorm] = lsqnonlin(F,k0);</span><br><span class="line"></span><br><span class="line"><span class="comment">%k(1)是圆心的x坐标</span></span><br><span class="line"><span class="comment">%k(2)是圆心的y坐标</span></span><br><span class="line"><span class="comment">%k(3)的绝对值是圆的半径</span></span><br><span class="line"></span><br><span class="line">r0 = [k(<span class="number">1</span>),k(<span class="number">2</span>)];</span><br><span class="line">R = <span class="built_in">abs</span>(k(<span class="number">3</span>));</span><br><span class="line">xx = k(<span class="number">1</span>)-R:<span class="number">0.01</span>*R:k(<span class="number">1</span>)+R;</span><br><span class="line">y1_h = <span class="built_in">sqrt</span>(R.^<span class="number">2</span> - (xx - r0(<span class="number">1</span>)).^<span class="number">2</span>) + r0(<span class="number">2</span>);</span><br><span class="line">y2_h = -<span class="built_in">sqrt</span>(R.^<span class="number">2</span> - (xx - r0(<span class="number">1</span>)).^<span class="number">2</span>) + r0(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(xx,y1_h,<span class="string">'b'</span>)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(xx,y2_h',<span class="string">'b'</span>)</span><br><span class="line"><span class="built_in">plot</span>(xdata,ydata,<span class="string">'*r'</span>)</span><br></pre></td></tr></tbody></table></figure><p>当然这个代码也存在方法一中提到图像变形的问题，所以输入</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis equal</span><br></pre></td></tr></tbody></table></figure><p>这样就可以得到一个正常的圆的图像了</p><h3 id="2-参数解读"><a href="#2-参数解读" class="headerlink" title="2. 参数解读"></a>2. 参数解读</h3><p>输入<code>k</code>查询，得到以下结果</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">k =</span><br><span class="line">   <span class="number">1.0e+03</span> *</span><br><span class="line">    <span class="number">1.4625</span>    <span class="number">5.3278</span>   <span class="number">-0.1568</span></span><br></pre></td></tr></tbody></table></figure><p>前两个值分别代表圆心的横纵坐标，第三个值的绝对值为圆的半径。</p><p>输入<code>resnorm</code>查询，得到以下结果</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">resnorm =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.3018e+07</span></span><br></pre></td></tr></tbody></table></figure><p>该值根据matlab的中文文档的解释为残差范数的平方（<a href="https://ww2.mathworks.cn/help/optim/ug/lsqnonlin.html#buuhch7-resnorm">求解非线性最小二乘（非线性数据拟合）问题 - MATLAB lsqnonlin - MathWorks 中国</a>），也就是残差平方和，残差平方和越小，其拟合效果越好。</p><p>方法一与方法二得到的拟合圆基本一致</p>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> 拟合圆 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最短路径--Floyd与Dijkstra算法</title>
      <link href="/2021/082760550.html"/>
      <url>/2021/082760550.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​       求最短路径的算法有很多种，本文介绍其中的两种算法——Floyd与Dijkstra算法</p><p>​     （本文若有不正确的地方望大佬们多多指正Orz）</p><p>【本文优先发布于我的个人博客网站www.226yzy.com  ,<code>转载请注明出处</code>】</p><h1 id="1-Floyd算法"><a href="#1-Floyd算法" class="headerlink" title="1. Floyd算法"></a>1. Floyd算法</h1><p>​      首先通过<a href="https://acm.hdu.edu.cn/showproblem.php?pid=2544">HDU2544最短路</a>这道题引入最短路径这一问题。</p><p>   （题目可通过链接查看或见下方截图）</p><p><img src="https://s4.ax1x.com/2021/12/11/oTBfk6.png" alt="HDU2544最短路题目截图"></p><h2 id="（一）路径记录及预处理"><a href="#（一）路径记录及预处理" class="headerlink" title="（一）路径记录及预处理"></a>（一）路径记录及预处理</h2><p>​       上题中样例过于简单，但值得注意的是上题中所给的线路时间是无向的，即该路线来回时间一致。以第二组为例，记录路线时间如下表。</p><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">1号点</th><th style="text-align:center">2号点</th><th style="text-align:center">3号点</th></tr></thead><tbody><tr><td style="text-align:center">1号点</td><td style="text-align:center">0</td><td style="text-align:center">5</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">2号点</td><td style="text-align:center">5</td><td style="text-align:center">0</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">3号点</td><td style="text-align:center">2</td><td style="text-align:center">5</td><td style="text-align:center">0</td></tr></tbody></table></div><p>​       反之，若有向（当然上题为无向）则记录如下表</p><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">1号点</th><th style="text-align:center">2号点</th><th style="text-align:center">3号点</th></tr></thead><tbody><tr><td style="text-align:center">1号点</td><td style="text-align:center">0</td><td style="text-align:center">5</td><td style="text-align:center">∞</td></tr><tr><td style="text-align:center">2号点</td><td style="text-align:center">∞</td><td style="text-align:center">0</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">3号点</td><td style="text-align:center">2</td><td style="text-align:center">∞</td><td style="text-align:center">0</td></tr></tbody></table></div><p>​        处理上，无论有向还是无向，对于某一点到自身距离记录为0，除此之外，若某一点到另一点并无路径则记录为∞，代码上可用一个非常大的数代表（例如下文代码用999999999代表，也可通过函数调取如int型或long型的最大值）。</p><p>该片段代码大致如下(本文暂以java代码作为演示)，下示代码中T1为无向时的记录方法，T2为无向时的记录方法，本题为无向。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n=sc.nextInt(),m=sc.nextInt(),s,e;</span><br><span class="line">            <span class="comment">//根据题目描述，n代表有几个地点，m代表有几条输入路径，s代表该路径起点，e代表该路径目的地</span></span><br><span class="line"><span class="keyword">int</span>[][]map=<span class="keyword">new</span> <span class="keyword">int</span>[n][n];<span class="comment">//记录路径的二维数组</span></span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;m==<span class="number">0</span>)<span class="keyword">break</span>;<span class="comment">//根据题目代表所有输入结束</span></span><br><span class="line">            <span class="comment">//初始化记录路径的数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">  <span class="keyword">if</span>(i==j)map[i][j]=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">else</span> map[i][j]=<span class="number">999999999</span>;</span><br><span class="line"><span class="keyword">while</span>(m--&gt;<span class="number">0</span>){</span><br><span class="line">s=sc.nextInt()-<span class="number">1</span>;e=sc.nextInt()-<span class="number">1</span>;</span><br><span class="line"><span class="comment">//map[s][e]=sc.nextInt();//T1：有向时的记录方法</span></span><br><span class="line">map[s][e]=map[e][s]=sc.nextInt();<span class="comment">//T2：无向时的记录方法</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="（二）Floyd核心代码"><a href="#（二）Floyd核心代码" class="headerlink" title="（二）Floyd核心代码"></a>（二）Floyd核心代码</h2><p>​    Floyd的核心代码较为简单，只有简单的几行，代码如下</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line"><span class="keyword">if</span>(map[i][j]&gt;map[i][k]+map[k][j])</span><br><span class="line">map[i][j]=map[i][k]+map[k][j];</span><br></pre></td></tr></tbody></table></figure><p>（核心代码解读待续……）</p><h2 id="（三）完整代码（不含路径）"><a href="#（三）完整代码（不含路径）" class="headerlink" title="（三）完整代码（不含路径）"></a>（三）完整代码（不含路径）</h2><p>  综上,完整代码如下</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>{</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">while</span> (sc.hasNext()){</span><br><span class="line">            <span class="keyword">int</span> n=sc.nextInt(),m=sc.nextInt(),s,e;</span><br><span class="line">            <span class="keyword">int</span>[][]map=<span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">            <span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;m==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">                  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">                      <span class="keyword">if</span>(i==j)map[i][j]=<span class="number">0</span>;</span><br><span class="line">                      <span class="keyword">else</span> map[i][j]=<span class="number">999999999</span>;</span><br><span class="line">            <span class="keyword">while</span>(m--&gt;<span class="number">0</span>){</span><br><span class="line">                s=sc.nextInt()-<span class="number">1</span>;e=sc.nextInt()-<span class="number">1</span>;</span><br><span class="line"><span class="comment">//                map[s][e]=sc.nextInt();</span></span><br><span class="line">                map[s][e]=map[e][s]=sc.nextInt();</span><br><span class="line">            }                </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line">               <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">                  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">                     <span class="keyword">if</span>(map[i][j]&gt;map[i][k]+map[k][j])</span><br><span class="line">                        map[i][j]=map[i][k]+map[k][j];        </span><br><span class="line">            System.out.println(map[<span class="number">0</span>][n-<span class="number">1</span>]);</span><br><span class="line">            <span class="comment">//打印总表</span></span><br><span class="line"><span class="comment">//            System.out.println();</span></span><br><span class="line"><span class="comment">//            for(i=0;i&lt;n;i++) {</span></span><br><span class="line"><span class="comment">//                for(j=0;j&lt;n;j++) {</span></span><br><span class="line"><span class="comment">//                    System.out.print(map[i][j]+"\t");</span></span><br><span class="line"><span class="comment">//                }</span></span><br><span class="line"><span class="comment">//                System.out.println();     </span></span><br><span class="line"><span class="comment">//            }</span></span><br><span class="line">                  </span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="2-Dijkstra算法"><a href="#2-Dijkstra算法" class="headerlink" title="2. Dijkstra算法"></a>2. Dijkstra算法</h1><h2 id="（一）路径记录及预处理-1"><a href="#（一）路径记录及预处理-1" class="headerlink" title="（一）路径记录及预处理"></a>（一）路径记录及预处理</h2><p>​      与Floyd算法的处理基本一致，具体见上文</p><p>​      不同的是Dijkstra算法还需要增加一个一维数组来存储选定的起始点到其余的各个顶点的初始路程，该数组的名称本文定义为dis。并另建一个一维数组vis来记录数组dis对应的点是否已经找到与起始点的最短路径，0表示还未找到，1表示已找到。</p><p>​      对于数组vis建立完后，还要进行预处理,就是先将起始点对应的值标为1</p><h2 id="（二）核心代码"><a href="#（二）核心代码" class="headerlink" title="（二）核心代码"></a>（二）核心代码</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">      int u=1,min;</span><br><span class="line">vis[s]=1;</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">dis[i]=map[s][i];</span><br><span class="line">for(int i=1;i&lt;=n;i++){</span><br><span class="line">min=inf;</span><br><span class="line">for(int j=1;j&lt;=n;j++)</span><br><span class="line">if(vis[j]==0&amp;&amp;dis[j]&lt;min){</span><br><span class="line">min=dis[j];u=j;</span><br><span class="line">}</span><br><span class="line">vis[u]=1;</span><br><span class="line">    for(int j=1;j&lt;=n;j++)</span><br><span class="line">   if(map[u][j]&lt;inf)</span><br><span class="line"> if(dis[j]&gt;dis[u]+map[u][j]) {</span><br><span class="line"> dis[j]=dis[u]+map[u][j];</span><br><span class="line"> p[j]=u;</span><br><span class="line"> } </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>（核心代码解读待续……）</p><h2 id="（三）完整代码"><a href="#（三）完整代码" class="headerlink" title="（三）完整代码"></a>（三）完整代码</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 最短路径</span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n=<span class="number">26</span>,inf=<span class="number">99999999</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[]dis=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>],vis=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>],p=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>],YY=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[][] map=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            map[i][j]=(i==j?<span class="number">0</span>:inf);</span><br><span class="line">Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入起始点、目的地、距离。以起始点为0作为结束标志"</span>);</span><br><span class="line"><span class="keyword">int</span>[][]t=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span>(sc.hasNext()) {</span><br><span class="line"><span class="keyword">int</span> s=sc.nextInt();</span><br><span class="line"><span class="keyword">if</span>(s==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">int</span> e=sc.nextInt(),d=sc.nextInt();</span><br><span class="line">map[s][e]=map[e][s]=d;</span><br><span class="line">t[s][e]=t[e][s]=d;</span><br><span class="line">}</span><br><span class="line">yzy(<span class="number">22</span>);</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">System.out.print(i+<span class="string">"\t"</span>);</span><br><span class="line">}</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">System.out.print(YY[i]+<span class="string">"\t"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">yzy</span><span class="params">(<span class="keyword">int</span> s)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> u=<span class="number">1</span>,min;</span><br><span class="line">vis[s]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">dis[i]=map[s][i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">min=inf;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line"><span class="keyword">if</span>(vis[j]==<span class="number">0</span>&amp;&amp;dis[j]&lt;min){</span><br><span class="line">min=dis[j];u=j;</span><br><span class="line">}</span><br><span class="line">vis[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">   <span class="keyword">if</span>(map[u][j]&lt;inf)</span><br><span class="line"> <span class="keyword">if</span>(dis[j]&gt;dis[u]+map[u][j]) {</span><br><span class="line"> dis[j]=dis[u]+map[u][j];</span><br><span class="line"> } </span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="3-记录路径"><a href="#3-记录路径" class="headerlink" title="3. 记录路径"></a>3. 记录路径</h1><p>​     上文中的代码仅实现了给出最短路径的长度，但为给出具体路径，对于这个缺点下文进行相应的改进</p><h2 id="（一）Dijkstra算法"><a href="#（一）Dijkstra算法" class="headerlink" title="（一）Dijkstra算法"></a>（一）Dijkstra算法</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">package 数学建模;</span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line">public class 最短路径{</span><br><span class="line">static int n=26,inf=99999999;</span><br><span class="line">static int[]dis=new int[n+1],vis=new int[n+1],p=new int[n+1],YY=new int[n+1];</span><br><span class="line">static int[][] map=new int[n+1][n+1];</span><br><span class="line">public static void main(String[] args){</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">        for(int j=1;j&lt;=n;j++)</span><br><span class="line">            map[i][j]=(i==j?0:inf);</span><br><span class="line">Scanner sc=new Scanner(System.in);</span><br><span class="line">System.out.println("请输入起始点、目的地、距离。以起始点为0作为结束标志");</span><br><span class="line">int[][]t=new int[n+1][n+1];</span><br><span class="line">while(sc.hasNext()) {</span><br><span class="line">int s=sc.nextInt();</span><br><span class="line">if(s==0)break;</span><br><span class="line">int e=sc.nextInt(),d=sc.nextInt();</span><br><span class="line">map[s][e]=map[e][s]=d;</span><br><span class="line">t[s][e]=t[e][s]=d;</span><br><span class="line">}</span><br><span class="line">yzy(22);</span><br><span class="line">ff(22);</span><br><span class="line">System.out.println();</span><br><span class="line">for(int i=1;i&lt;=n;i++){</span><br><span class="line">System.out.print(i+"\t");</span><br><span class="line">}</span><br><span class="line">System.out.println();</span><br><span class="line">for(int i=1;i&lt;=n;i++){</span><br><span class="line">System.out.print(YY[i]+"\t");</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">static void yzy(int s) {</span><br><span class="line">int u=1,min;</span><br><span class="line">vis[s]=1;</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">dis[i]=map[s][i];</span><br><span class="line">for(int i=1;i&lt;=n;i++){</span><br><span class="line">min=inf;</span><br><span class="line">for(int j=1;j&lt;=n;j++)</span><br><span class="line">if(vis[j]==0&amp;&amp;dis[j]&lt;min){</span><br><span class="line">min=dis[j];u=j;</span><br><span class="line">}</span><br><span class="line">vis[u]=1;</span><br><span class="line">    for(int j=1;j&lt;=n;j++)</span><br><span class="line">   if(map[u][j]&lt;inf)</span><br><span class="line"> if(dis[j]&gt;dis[u]+map[u][j]) {</span><br><span class="line"> dis[j]=dis[u]+map[u][j];</span><br><span class="line"> p[j]=u;</span><br><span class="line"> } </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">static void ff(int s) {</span><br><span class="line">int j;</span><br><span class="line">    Stack&lt;Integer&gt; q=new Stack&lt;Integer&gt;();             </span><br><span class="line">    for(int i=1;i&lt;=n;i++)            </span><br><span class="line">    {</span><br><span class="line">        j=i;</span><br><span class="line">        while(p[j]&gt;0)      </span><br><span class="line">        {</span><br><span class="line">            q.add(j);          </span><br><span class="line">            j=p[j];          </span><br><span class="line">        }</span><br><span class="line">        q.push(j);</span><br><span class="line">        System.out.printf("起始点与目的地:%d--&gt;%d\t路径长度:%d\t具体路径: %d ",s,i,dis[i],s);</span><br><span class="line">        while(!q.empty())       </span><br><span class="line">        {</span><br><span class="line">            System.out.printf(" --&gt; %d",q.peek());</span><br><span class="line">            YY[q.peek()]++;</span><br><span class="line">            q.pop();            </span><br><span class="line">        }</span><br><span class="line">        System.out.println();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h1 id="4-其它语言代码"><a href="#4-其它语言代码" class="headerlink" title="4.其它语言代码"></a>4.其它语言代码</h1><h2 id="（一）Floyd算法matlab代码"><a href="#（一）Floyd算法matlab代码" class="headerlink" title="（一）Floyd算法matlab代码"></a>（一）Floyd算法matlab代码</h2><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="built_in">zeros</span>(<span class="number">6</span>); <span class="comment">%矩阵初始化</span></span><br><span class="line"><span class="comment">%路径录入，可根据实际情况修改</span></span><br><span class="line">a(<span class="number">1</span>,<span class="number">2</span>)=<span class="number">50</span>;a(<span class="number">1</span>,<span class="number">4</span>)=<span class="number">40</span>;a(<span class="number">1</span>,<span class="number">5</span>)=<span class="number">25</span>;a(<span class="number">1</span>,<span class="number">6</span>)=<span class="number">10</span>;</span><br><span class="line">a(<span class="number">2</span>,<span class="number">3</span>)=<span class="number">15</span>;a(<span class="number">2</span>,<span class="number">4</span>)=<span class="number">20</span>;a(<span class="number">2</span>,<span class="number">6</span>)=<span class="number">25</span>;</span><br><span class="line">a(<span class="number">3</span>,<span class="number">4</span>)=<span class="number">10</span>;a(<span class="number">3</span>,<span class="number">5</span>)=<span class="number">20</span>;</span><br><span class="line">a(<span class="number">4</span>,<span class="number">5</span>)=<span class="number">10</span>;a(<span class="number">4</span>,<span class="number">6</span>)=<span class="number">25</span>;</span><br><span class="line">a(<span class="number">5</span>,<span class="number">6</span>)=<span class="number">55</span>;</span><br><span class="line">a=a+a';</span><br><span class="line">a(<span class="built_in">find</span>(a==<span class="number">0</span>))=<span class="built_in">inf</span>;</span><br><span class="line">n=<span class="built_in">length</span>(a);</span><br><span class="line"><span class="keyword">for</span> k=<span class="number">1</span>:n</span><br><span class="line">    a(k,k)=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> k=<span class="number">1</span>:n</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">            <span class="keyword">if</span> a(<span class="built_in">i</span>,k)+a(k,<span class="built_in">j</span>)&lt;a(<span class="built_in">i</span>,<span class="built_in">j</span>)</span><br><span class="line">                a(<span class="built_in">i</span>,<span class="built_in">j</span>)=a(<span class="built_in">i</span>,k)+a(k,<span class="built_in">j</span>); </span><br><span class="line">            <span class="keyword">end</span> </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">a</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
            <tag> 最短路径 </tag>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用网站汇总</title>
      <link href="/2021/072241576.html"/>
      <url>/2021/072241576.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文汇总我自己常用的网站</p><p>(持续不定时更新……)</p><h1 id="1-ACM相关OJ"><a href="#1-ACM相关OJ" class="headerlink" title="1.ACM相关OJ"></a><strong>1.ACM相关OJ</strong></h1><div class="table-container"><table><thead><tr><th style="text-align:center">网站</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center"><strong><em>1.Codeforces</em></strong></td><td style="text-align:center"><a href="https://codeforces.com">https://codeforces.com</a></td></tr><tr><td style="text-align:center"><strong><em>2.北大POJ</em></strong></td><td style="text-align:center"><a href="http://poj.org">http://poj.org</a></td></tr><tr><td style="text-align:center"><strong><em>3.杭电OJ</em></strong></td><td style="text-align:center"><a href="https://acm.hdu.edu.cn">https://acm.hdu.edu.cn</a></td></tr><tr><td style="text-align:center"><strong><em>4.牛客网</em></strong></td><td style="text-align:center"><a href="https://www.nowcoder.com">https://www.nowcoder.com</a></td></tr><tr><td style="text-align:center"><strong><em>5.牛客竞赛</em></strong></td><td style="text-align:center"><a href="https://ac.nowcoder.com/acm/home">https://ac.nowcoder.com/acm/home</a></td></tr><tr><td style="text-align:center"><strong><em>6.Leetcode(力扣)</em></strong></td><td style="text-align:center"><a href="https://leetcode-cn.com">https://leetcode-cn.com</a></td></tr><tr><td style="text-align:center"><strong><em>7.VJ</em></strong></td><td style="text-align:center"><a href="https://vjudge.net">https://vjudge.net</a></td></tr><tr><td style="text-align:center"><strong><em>8.PTA</em></strong></td><td style="text-align:center"><a href="https://pintia.cn">https://pintia.cn</a></td></tr><tr><td style="text-align:center"><strong><em>9.洛谷</em></strong></td><td style="text-align:center"><a href="https://www.luogu.com.cn">https://www.luogu.com.cn</a></td></tr></tbody></table></div><h1 id="2-一些平台"><a href="#2-一些平台" class="headerlink" title="2.一些平台"></a>2.一些平台</h1><div class="table-container"><table><thead><tr><th style="text-align:center">网站</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center"><strong><em>1.Github</em></strong></td><td style="text-align:center"><a href="https://github.com">https://github.com</a></td></tr><tr><td style="text-align:center"><strong><em>2.Coding</em></strong></td><td style="text-align:center"><a href="https://coding.net">https://coding.net</a></td></tr><tr><td style="text-align:center"><strong><em>3.Gitee</em></strong></td><td style="text-align:center"><a href="https://gitee.com">https://gitee.com</a></td></tr><tr><td style="text-align:center"><strong>4.Cloudflare</strong></td><td style="text-align:center"><a href="https://dash.cloudflare.com/">https://dash.cloudflare.com/</a></td></tr><tr><td style="text-align:center"><strong><em>3.阿里云</em></strong></td><td style="text-align:center"><a href="https://www.aliyun.com">https://www.aliyun.com</a></td></tr><tr><td style="text-align:center"><strong><em>4.腾讯云</em></strong></td><td style="text-align:center"><a href="https://cloud.tencent.com">https://cloud.tencent.com</a></td></tr><tr><td style="text-align:center"><strong><em>5.工信部</em></strong></td><td style="text-align:center"><a href="https://beian.miit.gov.cn">https://beian.miit.gov.cn</a></td></tr><tr><td style="text-align:center"><strong><em>6.百度统计</em></strong></td><td style="text-align:center"><a href="https://tongji.baidu.com">https://tongji.baidu.com</a></td></tr></tbody></table></div><h1 id="3-常用免费图床汇总"><a href="#3-常用免费图床汇总" class="headerlink" title="3.常用免费图床汇总"></a>3.常用免费图床汇总</h1><div class="table-container"><table><thead><tr><th style="text-align:center">图床</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><strong><a href="https://sm.ms/">sm.ms</a></strong></td><td style="text-align:center">无需注册，海外服务器【免费】</td></tr><tr><td style="text-align:center"><strong><a href="https://moetu.org">meotu</a></strong></td><td style="text-align:center">要注册，国内服务器【免费】</td></tr><tr><td style="text-align:center"><strong><a href="https://www.superbed.cn/">聚合图床</a></strong></td><td style="text-align:center">要注册，国内服务器【免费】</td></tr><tr><td style="text-align:center"><strong><a href="https://niupic.com">牛图网</a></strong></td><td style="text-align:center">无需注册，日本服务器 【免费】</td></tr><tr><td style="text-align:center"><strong><a href="https://imgbb.com">imgbb</a></strong></td><td style="text-align:center">无需注册，亚太服务器【免费】</td></tr><tr><td style="text-align:center"><strong><a href="https://imgtu.com">路过图床</a></strong></td><td style="text-align:center">要注册，海外服务器【免费】</td></tr></tbody></table></div><h1 id="4-各大搜索引擎收录"><a href="#4-各大搜索引擎收录" class="headerlink" title="4.各大搜索引擎收录"></a>4.各大搜索引擎收录</h1><div class="table-container"><table><thead><tr><th style="text-align:center">搜索引擎</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center"><strong>百度</strong></td><td style="text-align:center"><a href="https://ziyuan.baidu.com/linksubmit/url">链接提交<em>站长工具</em>网站支持_百度搜索资源平台 (baidu.com)</a></td></tr><tr><td style="text-align:center"><strong>360</strong></td><td style="text-align:center"><a href="https://info.so.com/site_submit.html">网站收录_360搜索 (so.com)</a></td></tr><tr><td style="text-align:center"><strong>搜狗</strong></td><td style="text-align:center"><a href="https://zhanzhang.sogou.com/index.php/statistics/index">搜狗资源平台_公平开放的交流平台 (sogou.com)</a></td></tr><tr><td style="text-align:center"><strong>Bing</strong></td><td style="text-align:center"><a href="https://www.bing.com/webmasters/about">Bing Webmaster Tools</a></td></tr></tbody></table></div><h1 id="5-我的博客用到的一些功能性网站"><a href="#5-我的博客用到的一些功能性网站" class="headerlink" title="5.我的博客用到的一些功能性网站"></a>5.我的博客用到的一些功能性网站</h1><p>感谢以下网站提供的白嫖服务🤣</p><div class="table-container"><table><thead><tr><th style="text-align:center">网站</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center"><strong>Leancloud</strong></td><td style="text-align:center"><a href="https://console.leancloud.app/">https://console.leancloud.app/</a></td></tr><tr><td style="text-align:center"><strong>vercel</strong></td><td style="text-align:center"><a href="https://vercel.com/">https://vercel.com/</a></td></tr><tr><td style="text-align:center"><strong>mongodb</strong></td><td style="text-align:center"><a href="https://cloud.mongodb.com/">https://cloud.mongodb.com/</a></td></tr></tbody></table></div><h1 id="6-图标"><a href="#6-图标" class="headerlink" title="6.图标"></a>6.图标</h1><div class="table-container"><table><thead><tr><th style="text-align:center">网站</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center"><strong>阿里图标库</strong></td><td style="text-align:center"><a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 常用网站汇总 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇总 </tag>
            
            <tag> 常用网站 </tag>
            
            <tag> 图床 </tag>
            
            <tag> 搜索引擎收录入口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>226YZY-BLOG-修改记录(第二弹)</title>
      <link href="/2021/071326519.html"/>
      <url>/2021/071326519.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p><code>注意现在我现在使用的主题是Butterfly，本篇是</code>对matery主题的修改</p></blockquote><p>这是我博客修改记录的第二篇，本文中涉及了一些大佬的方案，并结合自己的需求进行了一系列的修改，本着尊重他人劳动成果的原则我对相对应的内容转载时保留了我查考的直接出处。希望如果有小伙伴，从我这转载相关内容也请保留出处。希望以下内容对您有所帮助。</p><h1 id="1-文章卡片腰封"><a href="#1-文章卡片腰封" class="headerlink" title="1.文章卡片腰封"></a>1.文章卡片腰封</h1><p>参考来源</p><p><a href="https://hesifan.top/2021/042339737.html#toc-heading-2">matery魔改日记 | FanHeart (hesifan.top)</a></p><p>在主题目录下找到<code>layout/index.ejs</code></p><p>ctrl+f搜索<code>所有文章卡片</code></p><p>以<code>所有文章卡片</code>为标志，到末尾倒着来看第一个<code>&lt;/article&gt;</code>为结尾，这一块</p><p>替换以下代码</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 所有文章卡片 --&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row article-row"</span>&gt;</span> <span class="tag">&lt;<span class="name">article</span> <span class="attr">id</span>=<span class="string">"articles"</span> <span class="attr">class</span>=<span class="string">"container articles"</span>&gt;</span> &lt;% page.posts.forEach(post =&gt; { %&gt; <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"article col s12 m6 l4"</span> <span class="attr">data-aos</span>=<span class="string">"zoom-in"</span>&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(post.path) %&gt;"</span>&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-image card-image-V"</span>&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-content"</span>&gt;</span> <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>阅读全文<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post"</span> <span class="attr">style</span>=<span class="string">"width: 180px"</span>&gt;</span>&lt;%= post.title %&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span> &lt;% if (post.img) { %&gt; <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&lt;%- url_for(post.img) %&gt;"</span> <span class="attr">class</span>=<span class="string">"responsive-img"</span> <span class="attr">alt</span>=<span class="string">"&lt;%= post.title %&gt;"</span>&gt;</span> &lt;% } else { %&gt; &lt;% var featureimg = '/medias/featureimages/0.jpg'; var featureImages = theme.featureImages; if (!featureImages || featureImages.length == 0) { return featureimg; } featureimg = featureImages[Math.abs(hashCode(post.title) % featureImages.length)] %&gt; <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(featureimg) %&gt;"</span> <span class="attr">class</span>=<span class="string">"responsive-img"</span> <span class="attr">alt</span>=<span class="string">"&lt;%= post.title %&gt;"</span>&gt;</span> &lt;% } %&gt; <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"card-title title-V"</span>&gt;</span>&lt;%= post.title %&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-content article-content"</span>&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"summary block-with-text"</span>&gt;</span> &lt;% if (post.summary &amp;&amp; post.summary.length &gt; 0) { %&gt; &lt;%- post.summary %&gt; &lt;% } else { %&gt; &lt;%- strip_html(post.content).substring(0, 120) %&gt; &lt;% } %&gt; <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"publish-info"</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"publish-date"</span>&gt;</span> <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"far fa-clock fa-fw icon-date"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>&lt;%= date(post.date, config.date_format) %&gt; <span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"publish-author"</span>&gt;</span> &lt;% if (post.categories &amp;&amp; post.categories.length &gt; 0) { %&gt; <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-bookmark fa-fw icon-category"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> &lt;% post.categories.forEach(category =&gt; { %&gt; <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(category.path) %&gt;"</span> <span class="attr">class</span>=<span class="string">"post-category"</span>&gt;</span> &lt;%- category.name %&gt; <span class="tag">&lt;/<span class="name">a</span>&gt;</span> &lt;% }); %&gt; &lt;% } else if (post.author &amp;&amp; post.author.length &gt; 0) { %&gt; <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-user fa-fw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> &lt;%- post.author %&gt; &lt;% } else { %&gt; <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-user fa-fw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> &lt;%- config.author %&gt; &lt;% } %&gt; <span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span> &lt;% if(post.tags &amp;&amp; post.tags.length &gt; 0) { %&gt; <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-action article-tags"</span>&gt;</span> &lt;% post.tags.forEach(tag =&gt; { %&gt; <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(tag.path) %&gt;"</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"chip bg-color"</span>&gt;</span>&lt;%= tag.name %&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span> &lt;% }); %&gt; <span class="tag">&lt;/<span class="name">div</span>&gt;</span> &lt;% } %&gt; <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span> &lt;% }); %&gt; <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">来源: FanHeart</span><br><span class="line">文章作者: 不染轻裳</span><br><span class="line">文章链接: https://hesifan.top/2021/042339737.html</span><br><span class="line">本文章著作权归作者所有，任何形式的转载都请注明出处。</span><br></pre></td></tr></tbody></table></figure><p>然后同样在主题目录下找到<code>source/css/matery.css</code></p><p>加入以下代码</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*文章列表卡片各样式*/</span> <span class="selector-id">#articles</span> { <span class="attribute">margin-top</span>: <span class="number">10px</span>; <span class="attribute">margin-bottom</span>: <span class="number">10px</span>; } <span class="selector-tag">article</span> <span class="selector-tag">a</span> { <span class="attribute">margin-right</span>: <span class="number">0</span> <span class="meta">!important</span>; <span class="attribute">color</span>: <span class="number">#525f7f</span>; <span class="attribute">text-transform</span>: none <span class="meta">!important</span>; } <span class="selector-tag">article</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> { <span class="attribute">font-weight</span>: bold; <span class="attribute">color</span>: <span class="number">#116022</span>; <span class="attribute">text-decoration</span>: underline; } <span class="selector-class">.articles</span> <span class="selector-class">.row</span> { <span class="attribute">margin-left</span>: <span class="number">0</span>; <span class="attribute">margin-right</span>: <span class="number">0</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card</span> { <span class="attribute">border-radius</span>: <span class="number">8px</span>; <span class="attribute">overflow</span>: hidden; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span> { <span class="attribute">font-family</span>: Georgia, <span class="string">'Noto Serif SC'</span>, Helvetica, Arial, Menlo, Monaco, monospace, serif; <span class="attribute">background-color</span>: <span class="number">#222</span>; <span class="attribute">border-radius</span>: <span class="number">8px</span>; <span class="attribute">overflow</span>: hidden; <span class="attribute">position</span>: relative; <span class="attribute">z-index</span>: <span class="number">1</span>; <span class="attribute">transition</span>: all <span class="number">0.5s</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span> { <span class="attribute">box-shadow</span>: <span class="number">3px</span> <span class="number">3px</span> <span class="number">5px</span> <span class="number">#999</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span>:before, article .card-image:after { content: <span class="string">''</span>; <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(circle at <span class="number">23%</span> <span class="number">70%</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.7</span>), <span class="number">#fff</span> <span class="number">30%</span>); <span class="attribute">width</span>: <span class="number">150%</span>; <span class="attribute">height</span>: <span class="number">150%</span>; <span class="attribute">opacity</span>: <span class="number">0</span>; <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>); <span class="attribute">position</span>: absolute; <span class="comment">/*top:-10.5%;*/</span> <span class="attribute">right</span>: -<span class="number">150%</span>; <span class="attribute">z-index</span>: <span class="number">1</span>; <span class="attribute">transition</span>: all <span class="number">0.35s</span> ease; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span>:before { opacity: <span class="number">1</span>; <span class="attribute">right</span>: -<span class="number">85%</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span>:after { opacity: <span class="number">1</span>; <span class="attribute">top</span>: -<span class="number">42%</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span> <span class="selector-tag">img</span> { <span class="attribute">width</span>: <span class="number">100%</span>; <span class="attribute">transition</span>: all <span class="number">0.5s</span> ease; <span class="attribute">height</span>: <span class="number">220px</span>; <span class="attribute">border-radius</span>: <span class="number">0.3rem</span>; <span class="attribute">opacity</span>: <span class="number">0.7</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span> <span class="selector-class">.x</span> <span class="selector-tag">img</span> { <span class="attribute">width</span>: <span class="number">100%</span>; <span class="attribute">transition</span>: all <span class="number">0.5s</span> ease; <span class="attribute">height</span>: <span class="number">230px</span>; <span class="attribute">border-radius</span>: <span class="number">0.3rem</span>; <span class="attribute">opacity</span>: <span class="number">0.7</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span> { <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.2</span>); } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span> <span class="selector-class">.box-content</span> { <span class="attribute">text-align</span>: right; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>); <span class="attribute">position</span>: absolute; <span class="attribute">top</span>: <span class="number">50%</span>; <span class="attribute">right</span>: -<span class="number">100%</span>; <span class="attribute">z-index</span>: <span class="number">2</span>; <span class="attribute">transition</span>: all <span class="number">0.5s</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.box-content</span> { <span class="attribute">right</span>: <span class="number">5%</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.box-content</span> <span class="selector-tag">h3</span><span class="selector-pseudo">::before</span> { <span class="attribute">content</span>: <span class="string">'X'</span>; } <span class="selector-tag">article</span> <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.box-content</span> <span class="selector-tag">h3</span><span class="selector-pseudo">::before</span> { <span class="attribute">font-size</span>: <span class="number">0.9rem</span> <span class="meta">!important</span>; <span class="attribute">vertical-align</span>: bottom; <span class="attribute">margin-right</span>: <span class="number">0.5rem</span>; <span class="attribute">padding</span>: <span class="number">2px</span>; <span class="attribute">border-radius</span>: <span class="number">5px</span>; <span class="attribute">background</span>: <span class="built_in">hsl</span>(<span class="number">0</span>, <span class="number">0%</span>, <span class="number">20%</span>); <span class="attribute">color</span>: <span class="built_in">hsl</span>(<span class="number">0</span>, <span class="number">0%</span>, <span class="number">100%</span>); } <span class="selector-class">.card-image</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.title-V</span> { <span class="attribute">display</span>: none; } <span class="selector-tag">article</span> <span class="selector-class">.card-image-V</span>:before, article .card-image-V:after { top: -<span class="number">10.5%</span>; }</span><br><span class="line">来源: FanHeart</span><br><span class="line">文章作者: 不染轻裳</span><br><span class="line">文章链接: https://hesifan.top/<span class="number">2021</span>/<span class="number">042339737</span>.html</span><br><span class="line">本文章著作权归作者所有，任何形式的转载都请注明出处。</span><br></pre></td></tr></tbody></table></figure><p>其它要修改的地方</p><p>就找到类似的结构</p><p>以归档页面为例</p><p>文件位置在主题目录下<code>layout/archive.ejs</code></p><p>在以下代码的后面</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">article class="cd-timeline-content" data-aos="fade-up"&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"article col s12 m6"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(post.path) %&gt;"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-image"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>插入以下代码(至于CSS代码前面已经处理过了)</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-content"</span>&gt;</span> <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>阅读全文<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post"</span> <span class="attr">style</span>=<span class="string">"width: 180px"</span>&gt;</span>&lt;%= post.title %&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>在主题目录下其它要修改添加的地方还有</p><p><code>layout/_partial/prev-next.ejs</code></p><p>(这个比较特殊，有四处要添加,<code>&lt;%= post.title %&gt;</code>要对应修改)</p><p>具体可以找到<code>&lt;div class="card-image"&gt;</code>看后面的</p><p><code>&lt;% if (***.img) { %&gt;</code>这个<em>*</em>的位置是啥，然后将上面的<code>post</code>修改成对应的</p><p>其它的</p><p><code>layout/category.ejs</code>(前面的代码原样插入即可)</p><p><code>layout/index.ejs</code>(前面的代码原样插入即可)</p><p><code>layout/tag.ejs</code>(前面的代码原样插入即可)</p><h1 id="2-将原主题的’’我的梦想’’替换成今日诗词"><a href="#2-将原主题的’’我的梦想’’替换成今日诗词" class="headerlink" title="2.将原主题的’’我的梦想’’替换成今日诗词"></a>2.将原主题的’’我的梦想’’替换成今日诗词</h1><p>在主题目录下找到layout/_widget/dream.ejs</p><p>将<code>&lt;%= theme.dream.text %&gt;</code>替换成<code>&lt;%- '&lt;span id="jinrishici-sentence"&gt;正在加载今日诗词....&lt;/span&gt;' %&gt;</code></p><p>然后末尾加入</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://sdk.jinrishici.com/v2/browser/jinrishici.js"</span> charset=<span class="string">"utf-8"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="3-插入浏览器标签"><a href="#3-插入浏览器标签" class="headerlink" title="3.插入浏览器标签"></a>3.插入浏览器标签</h1><p>在主题目录下找到<code>layout/layout.ejs</code></p><p>加入以下代码</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="keyword">var</span> OriginTitile=<span class="built_in">document</span>.title,st;</span><br><span class="line">        <span class="built_in">document</span>.addEventListener(<span class="string">"visibilitychange"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">            <span class="built_in">document</span>.hidden?(<span class="built_in">document</span>.title=<span class="string">"ヽ(●-`Д´-)ノ别跑稍等"</span>,<span class="built_in">clearTimeout</span>(st)):(<span class="built_in">document</span>.title=<span class="string">"(Ő∀Ő3)ノ干得漂亮，成功了！"</span>,st=<span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{<span class="built_in">document</span>.title=OriginTitile},<span class="number">3e3</span>))</span><br><span class="line">        })</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="4-加入看板娘"><a href="#4-加入看板娘" class="headerlink" title="4.加入看板娘"></a>4.加入看板娘</h1><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css" /&gt;</span><br><span class="line">&lt;script src="https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/autoload.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="5-对于HEXO-SEO其他博客解决方案中"><a href="#5-对于HEXO-SEO其他博客解决方案中" class="headerlink" title="5.对于HEXO SEO其他博客解决方案中"></a>5.对于HEXO SEO其他博客解决方案中</h1><p>其它博客中的代码缩进有问题，导致<code>hexo d</code>和<code>hexo g</code>命令无法正常运行</p><p>正确缩进如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 自动生成sitemap</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br></pre></td></tr></tbody></table></figure><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><h1 id="6-Valine显示QQ邮箱的头像"><a href="#6-Valine显示QQ邮箱的头像" class="headerlink" title="6.Valine显示QQ邮箱的头像"></a>6.Valine显示QQ邮箱的头像</h1><p>解决该问题参考了该博客文章</p><p><a href="https://blog.csdn.net/cungudafa/article/details/104638730">Valine-实现QQ邮箱识别生成头像地址（完美解决头像问题）_cungudafa的博客-CSDN博客</a></p><p>虽然主题不一样大解决方法基本一致</p><p>我用的matery主题的Valine是1.3.10版</p><p>如果是1.4.4版的话参考上面大佬的博客，两者之间操作有不同需要注意</p><p>以下我就按Valine1.3.10版的matery主题操作</p><p>在主题目录下找到<code>source/libs/valine/Valine.min.js</code></p><p>ctrl+f搜索</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m.cdn+a(e.get("mail")</span><br></pre></td></tr></tbody></table></figure><p>源代码经过压缩没有换行啥的最好换行一下</p><p>然后将</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(m.cdn + a(e.get("mail")) + m.params)</span><br></pre></td></tr></tbody></table></figure><p>修改为</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(qq_img)</span><br></pre></td></tr></tbody></table></figure><p>再在这一句var的前面加上</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> qq_img=m.cdn+a(e.get(<span class="string">"mail"</span>))+m.params;<span class="comment">//默认gravator头像接口</span></span><br><span class="line"> <span class="keyword">if</span>(e.get(<span class="string">"mail"</span>).indexOf(<span class="string">"@qq.com"</span>) &gt;= <span class="number">0</span>){</span><br><span class="line"><span class="keyword">var</span> prefix = e.get(<span class="string">"mail"</span>).replace(<span class="regexp">/@.*/</span>, <span class="string">""</span>);<span class="comment">//前缀</span></span><br><span class="line"><span class="keyword">var</span> pattern=<span class="regexp">/^\d+$/g</span>;  <span class="comment">//正则表达式，数字</span></span><br><span class="line"><span class="keyword">var</span> result= prefix.match(pattern);<span class="comment">//match 是匹配的意思</span></span><br><span class="line"><span class="keyword">if</span>(result!==<span class="literal">null</span>){</span><br><span class="line">qq_img = <span class="string">"//q1.qlogo.cn/g?b=qq&amp;nk="</span>+ prefix +<span class="string">"&amp;s=100"</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「cungudafa」的原创文章，遵循CC <span class="number">4.0</span> BY-SA版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https:<span class="comment">//blog.csdn.net/cungudafa/article/details/104638730</span></span><br></pre></td></tr></tbody></table></figure><h1 id="7-添加加载页面"><a href="#7-添加加载页面" class="headerlink" title="7.添加加载页面"></a>7.添加加载页面</h1><p>这里就转载大佬的方案了</p><p>原文<a href="https://notes.zhangxiaocai.cn/posts/7496029d.html">https://notes.zhangxiaocai.cn/posts/7496029d.html</a></p><p>这位大佬说如果有爆红没关系</p><p>不过我是没有爆红的</p><h2 id="1、在-layout-partial-目录新建一个-loading-pages-ejs-内容如下："><a href="#1、在-layout-partial-目录新建一个-loading-pages-ejs-内容如下：" class="headerlink" title="1、在 /layout/_partial/ 目录新建一个 loading-pages.ejs 内容如下："></a>1、在 <code>/layout/_partial/</code> 目录新建一个 <code>loading-pages.ejs</code> 内容如下：</h2><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=<span class="string">"text/css"</span> lang=<span class="string">"css"</span>&gt;</span><br><span class="line">    #loading-container{</span><br><span class="line">        <span class="attr">position</span>: fixed;</span><br><span class="line">        top: <span class="number">0</span>;</span><br><span class="line">        left: <span class="number">0</span>;</span><br><span class="line">        min-height: 100vh;</span><br><span class="line">        width: 100vw;</span><br><span class="line">        z-index: <span class="number">9999</span>;</span><br><span class="line">        display: flex;</span><br><span class="line">        flex-direction: column;</span><br><span class="line">        justify-content: center;</span><br><span class="line">        align-items: center;</span><br><span class="line">        background: #FFF;</span><br><span class="line">        text-align: center;</span><br><span class="line">        <span class="comment">/* loader页面消失采用渐隐的方式*/</span></span><br><span class="line">        -webkit-transition: opacity 1s ease;</span><br><span class="line">        -moz-transition: opacity 1s ease;</span><br><span class="line">        -o-transition: opacity 1s ease;</span><br><span class="line">        transition: opacity 1s ease;</span><br><span class="line">    }</span><br><span class="line">    .loading-image{</span><br><span class="line">        <span class="attr">width</span>: 120px;</span><br><span class="line">        height: 50px;</span><br><span class="line">        transform: translate(-<span class="number">50</span>%);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    .loading-image div:nth-<span class="function"><span class="title">child</span>(<span class="params"><span class="number">2</span></span>)</span> {</span><br><span class="line">        -webkit-animation: pacman-balls 1s linear 0s infinite;</span><br><span class="line">        animation: pacman-balls 1s linear 0s infinite</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    .loading-image div:nth-<span class="function"><span class="title">child</span>(<span class="params"><span class="number">3</span></span>)</span> {</span><br><span class="line">        -webkit-animation: pacman-balls 1s linear .33s infinite;</span><br><span class="line">        animation: pacman-balls 1s linear .33s infinite</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    .loading-image div:nth-<span class="function"><span class="title">child</span>(<span class="params"><span class="number">4</span></span>)</span> {</span><br><span class="line">        -webkit-animation: pacman-balls 1s linear .66s infinite;</span><br><span class="line">        animation: pacman-balls 1s linear .66s infinite</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    .loading-image div:nth-<span class="function"><span class="title">child</span>(<span class="params"><span class="number">5</span></span>)</span> {</span><br><span class="line">        -webkit-animation: pacman-balls 1s linear .99s infinite;</span><br><span class="line">        animation: pacman-balls 1s linear .99s infinite</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">   .loading-image div:first-<span class="keyword">of</span>-type {</span><br><span class="line">        <span class="attr">width</span>: <span class="number">0</span>;</span><br><span class="line">        height: <span class="number">0</span>;</span><br><span class="line">        border: 25px solid #49b1f5;</span><br><span class="line">        border-right-color: transparent;</span><br><span class="line">        border-radius: 25px;</span><br><span class="line">        -webkit-animation: rotate_pacman_half_up .5s 0s infinite;</span><br><span class="line">        animation: rotate_pacman_half_up .5s 0s infinite;</span><br><span class="line">    }</span><br><span class="line">    .loading-image div:nth-<span class="function"><span class="title">child</span>(<span class="params"><span class="number">2</span></span>)</span> {</span><br><span class="line">        <span class="attr">width</span>: <span class="number">0</span>;</span><br><span class="line">        height: <span class="number">0</span>;</span><br><span class="line">        border: 25px solid #49b1f5;</span><br><span class="line">        border-right-color: transparent;</span><br><span class="line">        border-radius: 25px;</span><br><span class="line">        -webkit-animation: rotate_pacman_half_down .5s 0s infinite;</span><br><span class="line">        animation: rotate_pacman_half_down .5s 0s infinite;</span><br><span class="line">        margin-top: -50px;</span><br><span class="line">    }</span><br><span class="line">    @-webkit-keyframes rotate_pacman_half_up {<span class="number">0</span>% {<span class="attr">transform</span>: rotate(270deg)}<span class="number">50</span>% {<span class="attr">transform</span>: rotate(1turn)}to {<span class="attr">transform</span>: rotate(270deg)}}</span><br><span class="line"></span><br><span class="line">    @keyframes rotate_pacman_half_up {<span class="number">0</span>% {<span class="attr">transform</span>: rotate(270deg)}<span class="number">50</span>% {<span class="attr">transform</span>: rotate(1turn)}to {<span class="attr">transform</span>: rotate(270deg)}}</span><br><span class="line"></span><br><span class="line">    @-webkit-keyframes rotate_pacman_half_down {<span class="number">0</span>% {<span class="attr">transform</span>: rotate(90deg)}<span class="number">50</span>% {<span class="attr">transform</span>: rotate(0deg)}to {<span class="attr">transform</span>: rotate(90deg)}}</span><br><span class="line"></span><br><span class="line">    @keyframes rotate_pacman_half_down {<span class="number">0</span>% {<span class="attr">transform</span>: rotate(90deg)}<span class="number">50</span>% {<span class="attr">transform</span>: rotate(0deg)}to {<span class="attr">transform</span>: rotate(90deg)}}</span><br><span class="line"></span><br><span class="line">    @-webkit-keyframes pacman-balls {<span class="number">75</span>% {<span class="attr">opacity</span>: <span class="number">.7</span>}to {<span class="attr">transform</span>: translate(-100px, -<span class="number">6.</span>25px)}}</span><br><span class="line"></span><br><span class="line">    @keyframes pacman-balls {<span class="number">75</span>% {<span class="attr">opacity</span>: <span class="number">.7</span>}to {<span class="attr">transform</span>: translate(-100px, -<span class="number">6.</span>25px)}}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    .loading-image div:nth-child(<span class="number">3</span>),</span><br><span class="line">    .loading-image div:nth-child(<span class="number">4</span>),</span><br><span class="line">    .loading-image div:nth-child(<span class="number">5</span>),</span><br><span class="line">    .loading-image div:nth-<span class="function"><span class="title">child</span>(<span class="params"><span class="number">6</span></span>)</span>{</span><br><span class="line">        background-color: #49b1f5;</span><br><span class="line">        width: 15px;</span><br><span class="line">        height: 15px;</span><br><span class="line">        border-radius: <span class="number">100</span>%;</span><br><span class="line">        margin: 2px;</span><br><span class="line">        width: 10px;</span><br><span class="line">        height: 10px;</span><br><span class="line">        position: absolute;</span><br><span class="line">        transform: translateY(-<span class="number">6.</span>25px);</span><br><span class="line">        top: 25px;</span><br><span class="line">        left: 100px;</span><br><span class="line">    }</span><br><span class="line">    .loading-text{</span><br><span class="line">        margin-bottom: 20vh;</span><br><span class="line">        text-align: center;</span><br><span class="line">        color: #2c3e50;</span><br><span class="line">        font-size: 2rem;</span><br><span class="line">        box-sizing: border-box;</span><br><span class="line">        padding: <span class="number">0</span> 10px;</span><br><span class="line">        text-shadow: <span class="number">0</span> 2px 10px rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>);</span><br><span class="line">    }</span><br><span class="line">    @media only screen and (max-width: 500px) {</span><br><span class="line">         .loading-text{</span><br><span class="line">            font-size: <span class="number">1.</span>5rem;</span><br><span class="line">         }</span><br><span class="line">    }</span><br><span class="line">    .fadeout {</span><br><span class="line">        <span class="attr">opacity</span>: <span class="number">0</span>;</span><br><span class="line">        filter: alpha(opacity=<span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">/* logo出现动画 */</span></span><br><span class="line">    @-webkit-keyframes fadeInDown{<span class="number">0</span>%{<span class="attr">opacity</span>:<span class="number">0</span>;-webkit-transform:translate3d(<span class="number">0</span>,-<span class="number">100</span>%,<span class="number">0</span>);transform:translate3d(<span class="number">0</span>,-<span class="number">100</span>%,<span class="number">0</span>)}<span class="number">100</span>%{<span class="attr">opacity</span>:<span class="number">1</span>;-webkit-transform:none;transform:none}}</span><br><span class="line">    @keyframes fadeInDown{<span class="number">0</span>%{<span class="attr">opacity</span>:<span class="number">0</span>;-webkit-transform:translate3d(<span class="number">0</span>,-<span class="number">100</span>%,<span class="number">0</span>);}}</span><br><span class="line"> &lt;/style&gt;</span><br><span class="line"> <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">const</span> loaded = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span></span></span><br><span class="line"><span class="javascript"><span class="xml">       <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">const</span> loader = <span class="built_in">document</span>.getElementById(<span class="string">"loading-container"</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            loader.className=<span class="string">"fadeout"</span> ;<span class="comment">//使用渐隐的方法淡出loading page</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">// document.getElementById("body-wrap").style.display="flex";</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                loader.style.display=<span class="string">"none"</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            },<span class="number">2500</span>); </span></span></span><br><span class="line"><span class="javascript"><span class="xml">        },<span class="number">1000</span>);<span class="comment">//强制显示loading page 1s  </span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    };</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    loaded();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">})()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">来源: 斯莫笔记</span><br><span class="line">文章作者: Small-Rose</span><br><span class="line">文章链接: https:<span class="comment">//notes.zhangxiaocai.cn/posts/7496029d.html</span></span><br><span class="line">本文章著作权归作者所有，任何形式的转载都请注明出处。</span><br></pre></td></tr></tbody></table></figure><h2 id="2、在主题的-layout-目录找到-layout-ejs-文件"><a href="#2、在主题的-layout-目录找到-layout-ejs-文件" class="headerlink" title="2、在主题的 layout 目录找到 layout.ejs 文件"></a>2、在主题的 <code>layout</code> 目录找到 <code>layout.ejs</code> 文件</h2><p>在 <code>&lt;body&gt;</code> 附近添加内容后如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">```ejs</span><br><span class="line"></span><br><span class="line"> 这条线以上的不要复制</span><br><span class="line"> ------------------    </span><br><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html lang="&lt;%= config.language %&gt;"&gt;</span><br><span class="line">&lt;%- partial('_partial/head') %&gt;</span><br><span class="line"></span><br><span class="line"> &lt;% if (theme.loadingPages.enable) { %&gt;</span><br><span class="line">    &lt;%- partial('_partial/loading-pages') %&gt;</span><br><span class="line"> &lt;% } %&gt; </span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;% if (theme.loadingPages.enable) { %&gt;</span><br><span class="line">        &lt;div id="loading-container"&gt;</span><br><span class="line">             &lt;p class="loading-text"&gt;嘘~  正在从服务器偷取页面 . . . &lt;/p&gt; </span><br><span class="line">             &lt;div class="loading-image"&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt; </span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">             &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt; </span><br><span class="line">    &lt;% } %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%- partial('_partial/header') %&gt; </span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">来源: 斯莫笔记</span><br><span class="line">文章作者: Small-Rose</span><br><span class="line">文章链接: https://notes.zhangxiaocai.cn/posts/7496029d.html</span><br><span class="line">本文章著作权归作者所有，任何形式的转载都请注明出处。</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>对于上面的修改我的注释详解如下</p><p>首先找到<code>&lt;body&gt;</code>上面一点的<code>&lt;% if (theme.background.enable) { %&gt;</code><br><code>&lt;%- partial('_partial/background') %&gt;</code>改成<code>&lt;% if (theme.loadingPages.enable) { %&gt;</code><br>    <code>&lt;%- partial('_partial/loading-pages') %&gt;</code></p><p>然后就是在<code>&lt;body&gt;</code>和<code>&lt;body&gt;</code>下面的<code>&lt;%- partial('_partial/header') %&gt;</code></p><p>之间插入<br></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">```ejs</span><br><span class="line">这条线以上的不要复制</span><br><span class="line"> ------------------   </span><br><span class="line">&lt;% if (theme.loadingPages.enable) { %&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div id="loading-container"&gt;</span><br><span class="line">             &lt;p class="loading-text"&gt;啊哈~  正在从服务器偷取页面 . . . &lt;/p&gt; </span><br><span class="line">             &lt;div class="loading-image"&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">                 &lt;div&gt;&lt;/div&gt; </span><br><span class="line">                 &lt;div&gt;&lt;/div&gt;</span><br><span class="line">             &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;% } %&gt; </span><br><span class="line">    </span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="3、添加开关配置"><a href="#3、添加开关配置" class="headerlink" title="3、添加开关配置"></a>3、添加开关配置</h2><p>这一点大佬没具体说在哪配置，所以我是在主题目录下的_config.yml文件下添加</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">loadingPages:</span><br><span class="line">  enable: true </span><br></pre></td></tr></tbody></table></figure><h1 id="7-添加自己DIY的页面"><a href="#7-添加自己DIY的页面" class="headerlink" title="7.添加自己DIY的页面"></a>7.添加自己DIY的页面</h1><p>由于我之前用自己所学做了一个简单的导航页面，想着把这个页面放进我的博客里（就是这个→<a href="https://226yzy.com/Mysearch/">YZY的搜索界面 (226yzy.com)</a>），因此我查找了添加自己页面的方法。这里参考了</p><p><a href="https://yafine-blog.cn/posts/12b4.html">Hexo+Github 博客搭建之 Matery 主题个性化修改篇（二） | 过客～励む (yafine-blog.cn)</a>的有关内容</p><p>具体就是，比如说以我的博客为例，我要在我的顶部菜单的“实验室”这一分菜单的下面添加我的导航页面的指引</p><p>那么就要像在博客根目录下的<code>source</code>下面建立一个文件夹，为了方便描述以及示例，该文件夹的名字为<code>Mysearch</code>。</p><p>我的修改如下，按你自己的要求修改（但是格式基本如此）</p><p>另外这里顺便一个贴我觉得还不错的查找<code>icon</code>的网站链接<a href="http://www.fontawesome.com.cn/">Font Awesome 中文网 – | 字体图标</a></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">实验室:</span><br><span class="line">    icon: fas fa-flask</span><br><span class="line">    children:</span><br><span class="line">      - name: 我的DIY导航页面</span><br><span class="line">        url: /Mysearch</span><br><span class="line">        icon: fab fa-searchengin</span><br></pre></td></tr></tbody></table></figure><p>然后在主题根目录下的<code>_config.yml</code>文件，<code>ctrl+F</code>查找<code>skip_render</code></p><p>在下面如下添加</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">skip_render:</span><br><span class="line">          - Mysearch/**</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> matery主题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> matery主题 </tag>
            
            <tag> 记录整理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>226YZY-BLOG-修改记录(第一弹)</title>
      <link href="/2021/071133926.html"/>
      <url>/2021/071133926.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p><code>注意现在我现在使用的主题是Butterfly，本篇是</code>对matery主题的修改</p></blockquote><p>这是我在对matery主题的一些地方的修改，希望有的内容对于有需要的小伙伴有所帮助</p><h1 id="1-对于移动端博客顶部标题过大问题的解决"><a href="#1-对于移动端博客顶部标题过大问题的解决" class="headerlink" title="1.对于移动端博客顶部标题过大问题的解决"></a>1.对于移动端博客顶部标题过大问题的解决</h1><p>首先在主题文件的<code>source/css/my.css</code>文件中</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*小屏幕下(手机类)的样式*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">601px</span>) {</span><br><span class="line">    <span class="selector-class">.container</span> {</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">95%</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    //以下是添加的内容</span><br><span class="line">    <span class="selector-tag">header</span> <span class="selector-class">.brand-logo</span> <span class="selector-class">.logo-span</span> {</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">0.6em</span>;</span><br><span class="line">        <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>另外要注意上面的这一部分在该css中最前面的位置，要找到以下代码，将以下代码移动到上面代码的前面</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">header</span> <span class="selector-class">.brand-logo</span> <span class="selector-class">.logo-span</span> {</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.6rem</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="2-将鼠标指针光标修改成自己的图片"><a href="#2-将鼠标指针光标修改成自己的图片" class="headerlink" title="2.将鼠标指针光标修改成自己的图片"></a>2.将鼠标指针光标修改成自己的图片</h1><p>在主体目录下找到<code>source/matery.css</code></p><p>在里面添加以下代码</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> {</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">../guangbiao.ico</span>), auto;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>url里面换成你自己要的图片后，我的图片后缀为.ico</p><h1 id="3-将首页的所有链接设置成在新的页面打开"><a href="#3-将首页的所有链接设置成在新的页面打开" class="headerlink" title="3.将首页的所有链接设置成在新的页面打开"></a>3.将首页的所有链接设置成在新的页面打开</h1><p>在主体目录下找到 <code>layout/index.ejs</code></p><p>在里面添加</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;base target="_blank"&gt;</span><br></pre></td></tr></tbody></table></figure><p>我是在<code>&lt;main class="content"&gt;</code>前面添加到</p><h1 id="4-修改右侧滚动条样式"><a href="#4-修改右侧滚动条样式" class="headerlink" title="4.修改右侧滚动条样式"></a>4.修改右侧滚动条样式</h1><p>我在主题目录下<code>source/matery.css</code>里添加了以下代码</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 滚动条 */</span></span><br><span class="line">::-webkit-scrollbar-thumb {</span><br><span class="line">    background-color: <span class="number">#2ab1ff</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">-webkit-linear-gradient</span>(<span class="number">45deg</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">4</span>) <span class="number">25%</span>, transparent <span class="number">25%</span>, transparent <span class="number">50%</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">4</span>) <span class="number">50%</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">4</span>) <span class="number">75%</span>, transparent <span class="number">75%</span>, transparent);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3em</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-track {</span><br><span class="line">    background-color: <span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3em</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar {</span><br><span class="line">    width: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">15px</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>颜色按个人喜好修改</p><h1 id="5-对右上角GitHub图标颜色修改"><a href="#5-对右上角GitHub图标颜色修改" class="headerlink" title="5.对右上角GitHub图标颜色修改"></a>5.对右上角GitHub图标颜色修改</h1><p>在主题目录下找到<code>layout/_partial/github-link.ejs</code></p><p>在其大概第十六行的位置对其颜色进行修改</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.github-corner</span> svg {</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#188ee7</span>;</span><br><span class="line">        fill: <span class="number">#fff</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">64px</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">64px</span>;</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><h1 id="6-对主题颜色的修改"><a href="#6-对主题颜色的修改" class="headerlink" title="6.对主题颜色的修改"></a>6.对主题颜色的修改</h1><p>在主题录下找到<code>source/matery.css</code></p><p>在有颜色属性的地方修改颜色</p><p>我是见绿改蓝（果然是蓝控）</p><h1 id="7-对新建文章的模板"><a href="#7-对新建文章的模板" class="headerlink" title="7.对新建文章的模板"></a>7.对新建文章的模板</h1><p>在根目录下找到<code>/scaffolds/post.md</code>修改</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: { { title } }</span><br><span class="line">date: { { date } }</span><br><span class="line">author:</span><br><span class="line">img:</span><br><span class="line">coverImg:</span><br><span class="line">top: false</span><br><span class="line">cover: false</span><br><span class="line">toc: true</span><br><span class="line">mathjax: false</span><br><span class="line">password:</span><br><span class="line">summary:</span><br><span class="line">keywords:</span><br><span class="line">tags:</span><br><span class="line"><span class="section">categories:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></tbody></table></figure><h1 id="8-首页图片背景加载出之前红色背景颜色修改"><a href="#8-首页图片背景加载出之前红色背景颜色修改" class="headerlink" title="8.首页图片背景加载出之前红色背景颜色修改"></a>8.首页图片背景加载出之前红色背景颜色修改</h1><p>在主题目录下找到<code>sourcelibs/materialize/materialize.min.css</code></p><p>ctrl+f输入.red{</p><p>显示的位置就是修改该背景颜色的位置</p><h1 id="9-解决复制代码粘贴不能换行的问题"><a href="#9-解决复制代码粘贴不能换行的问题" class="headerlink" title="9.解决复制代码粘贴不能换行的问题"></a>9.解决复制代码粘贴不能换行的问题</h1><p>在matery主题目录下找到<code>layout\\_partial\post-detail.ejs</code></p><p>大概在223行</p><p>将if语句的注释掉，保留中间的，大致可参考下面的代码的样子</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//if (selection.getRangeAt(0).commonAncestorContainer.nodeName === 'PRE') {</span><br><span class="line">     newdiv.innerHTML = "&lt;pre&gt;" + newdiv.innerHTML + "&lt;/pre&gt;";</span><br><span class="line">//}</span><br></pre></td></tr></tbody></table></figure><h1 id="10-文章内目录大纲的字体颜色修改"><a href="#10-文章内目录大纲的字体颜色修改" class="headerlink" title="10.文章内目录大纲的字体颜色修改"></a>10.文章内目录大纲的字体颜色修改</h1><p>在主题目录下找到<code>layout\\_partial\post-detail-toc.ejs</code></p><p>ctrl+f搜索<code>is-active-link</code></p><p>大致在70行的位置修改字体颜色</p><p>顺便把<code>\#toc-content .toc-link:hover</code> （大概56行）里的颜色也改了</p><p>(这里修改的是鼠标指针经过后字体改变的颜色)</p><h1 id="11-修改留言板的链接提示，及发送弹幕的访客未填写链接时的默认链接"><a href="#11-修改留言板的链接提示，及发送弹幕的访客未填写链接时的默认链接" class="headerlink" title="11.修改留言板的链接提示，及发送弹幕的访客未填写链接时的默认链接"></a>11.修改留言板的链接提示，及发送弹幕的访客未填写链接时的默认链接</h1><p>如果你正确地创建了该分页，那么你可以在主题目录下找到<code>layout/contact.ejs</code>然后ctrl+f搜索<a href="https://github.com/blinkfox">https://github.com/blinkfox</a></p><p>(这里对matery的作者表示敬意Orz)在搜索到的位置修改即可</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> matery主题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> matery主题 </tag>
            
            <tag> 记录整理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的&quot;Hello World&quot; &amp; Markdown基础</title>
      <link href="/2021/071060549.html"/>
      <url>/2021/071060549.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>感谢来到我的博客，可能我的博客目前还些许简陋，欢迎大家的建言献策。</p><p>这一篇文章主要是为了进一步熟悉Markdown写作</p><p>另外也在此感谢我建立博客中所有人的帮助</p><p>其中重点感谢我当前使用的主题<a href="https://github.com/blinkfox/hexo-theme-matery/">hexo-theme-matery</a>的作者<a href="https://github.com/blinkfox">闪烁之狐</a>(在此膜拜大佬Orz)</p><p>还有感谢乐于分享的博主们，正是因为他们的分享，才有了现在我的博客大概的样子</p><!-- 还有特别感谢<font size=4 color=#188ee7>WSH</font>以及<font size=4 color=#188ee7>zzh</font>对我的博客的测试的帮助(但是<font size=4 color=#188ee7>zzh</font>很不乖:satisfied:批评，严厉批评！！！) --><h1 id="Markdown写作介绍尝试"><a href="#Markdown写作介绍尝试" class="headerlink" title="Markdown写作介绍尝试"></a>Markdown写作介绍尝试</h1><p>(持续更新…)</p><h2 id="1-分级标题"><a href="#1-分级标题" class="headerlink" title="1.分级标题"></a>1.分级标题</h2><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 2，分级标题</span></span><br><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></tbody></table></figure><h2 id="2-文字相关"><a href="#2-文字相关" class="headerlink" title="2.文字相关"></a>2.文字相关</h2><p><strong>1加粗</strong><br><em>2斜体</em><br><strong><em>3加粗+斜体</em></strong><br><del>4删除线</del><br>^5^上标<br>~6~下标</p><ol><li>有序列表</li><li>有序列表</li></ol><ul><li>无序列表</li></ul><ul><li>无序列表</li></ul><ul><li>无序列表</li></ul><p><font size="5" color="#188ee7" face="黑体">YZY</font>字体加颜色及大小，字体</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**1加粗**</span></span><br><span class="line"><span class="emphasis">*2斜体*</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*3加粗+斜体<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">~~4删除线~~</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">^5^上标</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">~6~下标</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">1. 有序列表</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">2. 有序列表</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">- 无序列表</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">+ 无序列表</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">*</span> 无序列表</span></span></span></span><br><span class="line"><span class="strong"><span class="emphasis"><span class="strong"><span class="xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">5</span> <span class="attr">color</span>=<span class="string">#188ee7</span>&gt;</span></span>YZY<span class="xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span>字体加颜色及大小，字体</span></span></span></span><br></pre></td></tr></tbody></table></figure><h2 id="3-引用"><a href="#3-引用" class="headerlink" title="3.引用"></a>3.引用</h2><blockquote><p>引用示例<br>hello world</p></blockquote><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;引用示例</span><br><span class="line">hello world</span><br></pre></td></tr></tbody></table></figure><h2 id="4-加入代码块"><a href="#4-加入代码块" class="headerlink" title="4.加入代码块"></a>4.加入代码块</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">while</span>(sc.hasNext()){</span><br><span class="line">System.out.println(lcm(sc.nextLong(),sc.nextLong()));</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">long</span> <span class="title">gcd</span><span class="params">(<span class="keyword">long</span> a, <span class="keyword">long</span> b)</span></span>{</span><br><span class="line"><span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">long</span> <span class="title">lcm</span><span class="params">(<span class="keyword">long</span> a,<span class="keyword">long</span> b)</span> </span>{</span><br><span class="line"><span class="keyword">return</span> a*b/gcd(a,b);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>方法如下<br></p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="code">```java</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">你要输入的代码（注意不需要'['和']'）</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">```</span>]</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="5-加入图片"><a href="#5-加入图片" class="headerlink" title="5.加入图片"></a>5.加入图片</h2><p><img src="/medias/avatar.jpg" alt="图片"></p><p>方法如下<br></p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![<span class="string">图片</span>](<span class="link">/medias/avatar.jpg</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="6-表格"><a href="#6-表格" class="headerlink" title="6.表格"></a>6.表格</h2><div class="table-container"><table><thead><tr><th>表头</th><th style="text-align:center">表头</th><th style="text-align:right">表头</th></tr></thead><tbody><tr><td>内容</td><td style="text-align:center">内容</td><td style="text-align:right">内容</td></tr><tr><td>内容</td><td style="text-align:center">内容</td><td style="text-align:right">内容</td></tr><tr><td>1</td><td style="text-align:center">2</td><td style="text-align:right">3</td></tr></tbody></table></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|表头|表头|表头|</span><br><span class="line">|---|:--:|---:|//默认居左，:居中:，居右:(注释记得去掉)</span><br><span class="line">|内容|内容|内容|</span><br><span class="line">|内容|内容|内容|</span><br><span class="line">|1|2|3|</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> Hello World </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/061916107.html"/>
      <url>/2021/061916107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
